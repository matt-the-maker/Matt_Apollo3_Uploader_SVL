
../gcc/redboard_artemis/bin/svl.axf:     file format elf32-littlearm


Disassembly of section .text:

0000c000 <g_am_pfnVectors>:
    c000:	f8 ff 05 10 b1 cc 00 00 35 cd 00 00 3d cd 00 00     ........5...=...
    c010:	3d cd 00 00 3d cd 00 00 3d cd 00 00 00 00 00 00     =...=...=.......
	...
    c02c:	45 cd 00 00 45 cd 00 00 00 00 00 00 45 cd 00 00     E...E.......E...
    c03c:	45 cd 00 00 45 cd 00 00 45 cd 00 00 45 cd 00 00     E...E...E...E...
    c04c:	45 cd 00 00 45 cd 00 00 45 cd 00 00 45 cd 00 00     E...E...E...E...
    c05c:	45 cd 00 00 45 cd 00 00 45 cd 00 00 45 cd 00 00     E...E...E...E...
    c06c:	45 cd 00 00 45 cd 00 00 d1 cb 00 00 45 cd 00 00     E...E.......E...
    c07c:	51 cb 00 00 c1 cb 00 00 45 cd 00 00 45 cd 00 00     Q.......E...E...
    c08c:	45 cd 00 00 45 cd 00 00 45 cd 00 00 19 cc 00 00     E...E...E.......
    c09c:	45 cd 00 00 45 cd 00 00 45 cd 00 00 45 cd 00 00     E...E...E...E...
    c0ac:	45 cd 00 00 45 cd 00 00 45 cd 00 00 45 cd 00 00     E...E...E...E...
    c0bc:	45 cd 00 00                                         E...

0000c0c0 <__Patchable>:
	...

0000c100 <__aeabi_uldivmod>:
    c100:	b953      	cbnz	r3, c118 <__aeabi_uldivmod+0x18>
    c102:	b94a      	cbnz	r2, c118 <__aeabi_uldivmod+0x18>
    c104:	2900      	cmp	r1, #0
    c106:	bf08      	it	eq
    c108:	2800      	cmpeq	r0, #0
    c10a:	bf1c      	itt	ne
    c10c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
    c110:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    c114:	f000 b80c 	b.w	c130 <__aeabi_idiv0>
    c118:	f1ad 0c08 	sub.w	ip, sp, #8
    c11c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
    c120:	f001 fb02 	bl	d728 <__udivmoddi4>
    c124:	f8dd e004 	ldr.w	lr, [sp, #4]
    c128:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    c12c:	b004      	add	sp, #16
    c12e:	4770      	bx	lr

0000c130 <__aeabi_idiv0>:
    c130:	4770      	bx	lr
    c132:	bf00      	nop

0000c134 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
    c134:	b480      	push	{r7}
    c136:	b083      	sub	sp, #12
    c138:	af00      	add	r7, sp, #0
    c13a:	4603      	mov	r3, r0
    c13c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
    c13e:	f997 3007 	ldrsb.w	r3, [r7, #7]
    c142:	2b00      	cmp	r3, #0
    c144:	db0b      	blt.n	c15e <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    c146:	79fb      	ldrb	r3, [r7, #7]
    c148:	f003 021f 	and.w	r2, r3, #31
    c14c:	4907      	ldr	r1, [pc, #28]	; (c16c <__NVIC_EnableIRQ+0x38>)
    c14e:	f997 3007 	ldrsb.w	r3, [r7, #7]
    c152:	095b      	lsrs	r3, r3, #5
    c154:	2001      	movs	r0, #1
    c156:	fa00 f202 	lsl.w	r2, r0, r2
    c15a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
    c15e:	bf00      	nop
    c160:	370c      	adds	r7, #12
    c162:	46bd      	mov	sp, r7
    c164:	f85d 7b04 	ldr.w	r7, [sp], #4
    c168:	4770      	bx	lr
    c16a:	bf00      	nop
    c16c:	e000e100 	.word	0xe000e100

0000c170 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
    c170:	b480      	push	{r7}
    c172:	b083      	sub	sp, #12
    c174:	af00      	add	r7, sp, #0
    c176:	4603      	mov	r3, r0
    c178:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
    c17a:	f997 3007 	ldrsb.w	r3, [r7, #7]
    c17e:	2b00      	cmp	r3, #0
    c180:	db12      	blt.n	c1a8 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    c182:	79fb      	ldrb	r3, [r7, #7]
    c184:	f003 021f 	and.w	r2, r3, #31
    c188:	490a      	ldr	r1, [pc, #40]	; (c1b4 <__NVIC_DisableIRQ+0x44>)
    c18a:	f997 3007 	ldrsb.w	r3, [r7, #7]
    c18e:	095b      	lsrs	r3, r3, #5
    c190:	2001      	movs	r0, #1
    c192:	fa00 f202 	lsl.w	r2, r0, r2
    c196:	3320      	adds	r3, #32
    c198:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
    c19c:	f3bf 8f4f 	dsb	sy
}
    c1a0:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
    c1a2:	f3bf 8f6f 	isb	sy
}
    c1a6:	bf00      	nop
    __DSB();
    __ISB();
  }
}
    c1a8:	bf00      	nop
    c1aa:	370c      	adds	r7, #12
    c1ac:	46bd      	mov	sp, r7
    c1ae:	f85d 7b04 	ldr.w	r7, [sp], #4
    c1b2:	4770      	bx	lr
    c1b4:	e000e100 	.word	0xe000e100

0000c1b8 <log_debug>:
#define DEBUG_LOCATION (0x80032)

uint32_t * debug = (uint32_t*) DEBUG_LOCATION;

void log_debug(uint32_t value, uint32_t index)
{
    c1b8:	b580      	push	{r7, lr}
    c1ba:	b084      	sub	sp, #16
    c1bc:	af00      	add	r7, sp, #0
    c1be:	6078      	str	r0, [r7, #4]
    c1c0:	6039      	str	r1, [r7, #0]
    uint32_t debug_data = value;
    c1c2:	687b      	ldr	r3, [r7, #4]
    c1c4:	60fb      	str	r3, [r7, #12]
    am_hal_flash_program_main(AM_HAL_FLASH_PROGRAM_KEY, (uint32_t *)(&debug_data),debug + index, 1);
    c1c6:	4b07      	ldr	r3, [pc, #28]	; (c1e4 <log_debug+0x2c>)
    c1c8:	681a      	ldr	r2, [r3, #0]
    c1ca:	683b      	ldr	r3, [r7, #0]
    c1cc:	009b      	lsls	r3, r3, #2
    c1ce:	441a      	add	r2, r3
    c1d0:	f107 010c 	add.w	r1, r7, #12
    c1d4:	2301      	movs	r3, #1
    c1d6:	4804      	ldr	r0, [pc, #16]	; (c1e8 <log_debug+0x30>)
    c1d8:	f001 fd8e 	bl	dcf8 <am_hal_flash_program_main>
};
    c1dc:	bf00      	nop
    c1de:	3710      	adds	r7, #16
    c1e0:	46bd      	mov	sp, r7
    c1e2:	bd80      	pop	{r7, pc}
    c1e4:	10000000 	.word	0x10000000
    c1e8:	12344321 	.word	0x12344321

0000c1ec <main>:
//
// Main
//
//*****************************************************************************
int main(void)
{
    c1ec:	b580      	push	{r7, lr}
    c1ee:	f5ad 6d23 	sub.w	sp, sp, #2608	; 0xa30
    c1f2:	af00      	add	r7, sp, #0

    bool baud_valid = false;
    c1f4:	2300      	movs	r3, #0
    c1f6:	f887 3a2f 	strb.w	r3, [r7, #2607]	; 0xa2f
    uint32_t bl_baud = 0x00;
    c1fa:	2300      	movs	r3, #0
    c1fc:	f8c7 3a24 	str.w	r3, [r7, #2596]	; 0xa24
    uint8_t bl_buffer[BL_UART_BUF_LEN] = {0};
    c200:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c204:	f6a3 230c 	subw	r3, r3, #2572	; 0xa0c
    c208:	2200      	movs	r2, #0
    c20a:	601a      	str	r2, [r3, #0]
    c20c:	3304      	adds	r3, #4
    c20e:	f640 12fc 	movw	r2, #2556	; 0x9fc
    c212:	2100      	movs	r1, #0
    c214:	4618      	mov	r0, r3
    c216:	f001 fa35 	bl	d684 <memset>

#define PLLEN_VER 1
    uint8_t packet_ver_buf[PLLEN_VER] = {SVL_VERSION_NUMBER};
    c21a:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c21e:	f5a3 6321 	sub.w	r3, r3, #2576	; 0xa10
    c222:	2205      	movs	r2, #5
    c224:	701a      	strb	r2, [r3, #0]
    svl_packet_t svl_packet_version = {CMD_VERSION, packet_ver_buf, PLLEN_VER, PLLEN_VER};
    c226:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c22a:	f6a3 231c 	subw	r3, r3, #2588	; 0xa1c
    c22e:	2201      	movs	r2, #1
    c230:	701a      	strb	r2, [r3, #0]
    c232:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c236:	f6a3 231c 	subw	r3, r3, #2588	; 0xa1c
    c23a:	f107 0220 	add.w	r2, r7, #32
    c23e:	605a      	str	r2, [r3, #4]
    c240:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c244:	f6a3 231c 	subw	r3, r3, #2588	; 0xa1c
    c248:	2201      	movs	r2, #1
    c24a:	811a      	strh	r2, [r3, #8]
    c24c:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c250:	f6a3 231c 	subw	r3, r3, #2588	; 0xa1c
    c254:	2201      	movs	r2, #1
    c256:	815a      	strh	r2, [r3, #10]
    svl_packet_t svl_packet_blmode = {CMD_BLMODE, NULL, 0, 0};
    c258:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c25c:	f6a3 2328 	subw	r3, r3, #2600	; 0xa28
    c260:	2202      	movs	r2, #2
    c262:	701a      	strb	r2, [r3, #0]
    c264:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c268:	f6a3 2328 	subw	r3, r3, #2600	; 0xa28
    c26c:	2200      	movs	r2, #0
    c26e:	605a      	str	r2, [r3, #4]
    c270:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c274:	f6a3 2328 	subw	r3, r3, #2600	; 0xa28
    c278:	2200      	movs	r2, #0
    c27a:	811a      	strh	r2, [r3, #8]
    c27c:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c280:	f6a3 2328 	subw	r3, r3, #2600	; 0xa28
    c284:	2200      	movs	r2, #0
    c286:	815a      	strh	r2, [r3, #10]

    art_svl_ringbuf_init(&bl_rx_ringbuf, bl_buffer, BL_UART_BUF_LEN);
    c288:	f107 0324 	add.w	r3, r7, #36	; 0x24
    c28c:	f44f 6220 	mov.w	r2, #2560	; 0xa00
    c290:	4619      	mov	r1, r3
    c292:	4843      	ldr	r0, [pc, #268]	; (c3a0 <main+0x1b4>)
    c294:	f000 fffc 	bl	d290 <art_svl_ringbuf_init>
    setup();
    c298:	f000 f89c 	bl	c3d4 <setup>

    debug_printf("\n\nArtemis SVL Bootloader - DEBUG\n\n");
    c29c:	4841      	ldr	r0, [pc, #260]	; (c3a4 <main+0x1b8>)
    c29e:	f000 fc4d 	bl	cb3c <debug_printf>

    baud_valid = detect_baud_rate(&bl_baud); // Detects the baud rate. Returns true if a valid baud rate was found
    c2a2:	f607 2324 	addw	r3, r7, #2596	; 0xa24
    c2a6:	4618      	mov	r0, r3
    c2a8:	f000 f8ca 	bl	c440 <detect_baud_rate>
    c2ac:	4603      	mov	r3, r0
    c2ae:	f887 3a2f 	strb.w	r3, [r7, #2607]	; 0xa2f
    
    
    if (baud_valid == false)
    c2b2:	f897 3a2f 	ldrb.w	r3, [r7, #2607]	; 0xa2f
    c2b6:	f083 0301 	eor.w	r3, r3, #1
    c2ba:	b2db      	uxtb	r3, r3
    c2bc:	2b00      	cmp	r3, #0
    c2be:	d039      	beq.n	c334 <main+0x148>
    {
        
        //No valid baud rate found.  Double check the flash memory doesn't have a valid payload.  Launch app otherwise
        image_header * new_image = (image_header*)NEW_IMAGE_HEADER_LOCATION;
    c2c0:	f44f 2300 	mov.w	r3, #524288	; 0x80000
    c2c4:	f8c7 3a28 	str.w	r3, [r7, #2600]	; 0xa28
       
        if((UPDATING_FROM_FLASH == new_image->current_state) || ((new_image->ready == 0x5555beef) && (new_image->magic_number == 0xdeadbeef)) )
    c2c8:	f8d7 3a28 	ldr.w	r3, [r7, #2600]	; 0xa28
    c2cc:	695b      	ldr	r3, [r3, #20]
    c2ce:	4a36      	ldr	r2, [pc, #216]	; (c3a8 <main+0x1bc>)
    c2d0:	4293      	cmp	r3, r2
    c2d2:	d00b      	beq.n	c2ec <main+0x100>
    c2d4:	f8d7 3a28 	ldr.w	r3, [r7, #2600]	; 0xa28
    c2d8:	68db      	ldr	r3, [r3, #12]
    c2da:	4a34      	ldr	r2, [pc, #208]	; (c3ac <main+0x1c0>)
    c2dc:	4293      	cmp	r3, r2
    c2de:	d127      	bne.n	c330 <main+0x144>
    c2e0:	f8d7 3a28 	ldr.w	r3, [r7, #2600]	; 0xa28
    c2e4:	681b      	ldr	r3, [r3, #0]
    c2e6:	4a32      	ldr	r2, [pc, #200]	; (c3b0 <main+0x1c4>)
    c2e8:	4293      	cmp	r3, r2
    c2ea:	d121      	bne.n	c330 <main+0x144>
        {
            uint32_t current_flash_update_state = UPDATING_FROM_FLASH;
    c2ec:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c2f0:	f6a3 232c 	subw	r3, r3, #2604	; 0xa2c
    c2f4:	4a2c      	ldr	r2, [pc, #176]	; (c3a8 <main+0x1bc>)
    c2f6:	601a      	str	r2, [r3, #0]
            am_hal_flash_program_main(AM_HAL_FLASH_PROGRAM_KEY, (uint32_t *)(&current_flash_update_state),&new_image->current_state, 1);
    c2f8:	f8d7 3a28 	ldr.w	r3, [r7, #2600]	; 0xa28
    c2fc:	f103 0214 	add.w	r2, r3, #20
    c300:	1d39      	adds	r1, r7, #4
    c302:	2301      	movs	r3, #1
    c304:	482b      	ldr	r0, [pc, #172]	; (c3b4 <main+0x1c8>)
    c306:	f001 fcf7 	bl	dcf8 <am_hal_flash_program_main>

            update_from_flash(new_image);
    c30a:	f8d7 0a28 	ldr.w	r0, [r7, #2600]	; 0xa28
    c30e:	f000 fae7 	bl	c8e0 <update_from_flash>
            current_flash_update_state = DONE_WITH_FLASH_UPDATE;
    c312:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c316:	f6a3 232c 	subw	r3, r3, #2604	; 0xa2c
    c31a:	4a27      	ldr	r2, [pc, #156]	; (c3b8 <main+0x1cc>)
    c31c:	601a      	str	r2, [r3, #0]
            am_hal_flash_program_main(AM_HAL_FLASH_PROGRAM_KEY, (uint32_t *)(&current_flash_update_state),&new_image->current_state, 1);
    c31e:	f8d7 3a28 	ldr.w	r3, [r7, #2600]	; 0xa28
    c322:	f103 0214 	add.w	r2, r3, #20
    c326:	1d39      	adds	r1, r7, #4
    c328:	2301      	movs	r3, #1
    c32a:	4822      	ldr	r0, [pc, #136]	; (c3b4 <main+0x1c8>)
    c32c:	f001 fce4 	bl	dcf8 <am_hal_flash_program_main>
        }
        
        
        app_start(); // w/o valid baud rate jump t the app
    c330:	f000 fbec 	bl	cb0c <app_start>
    }

    start_uart_bl(bl_baud); // This will create a 23 us wide low 'blip' on the TX line (until possibly fixed)
    c334:	f8d7 3a24 	ldr.w	r3, [r7, #2596]	; 0xa24
    c338:	4618      	mov	r0, r3
    c33a:	f000 f9c1 	bl	c6c0 <start_uart_bl>
    am_util_delay_us(200);  // At the minimum baud rate of 115200 one byte (10 bits with start/stop) takes 10/115200 or 87 us. 87+23 = 100, double to be safe
    c33e:	20c8      	movs	r0, #200	; 0xc8
    c340:	f000 fc98 	bl	cc74 <am_util_delay_us>

    debug_printf("phase:\tconfirm bootloading entry\n");
    c344:	481d      	ldr	r0, [pc, #116]	; (c3bc <main+0x1d0>)
    c346:	f000 fbf9 	bl	cb3c <debug_printf>
    debug_printf("\tsending Artemis SVL version packet\n");
    c34a:	481d      	ldr	r0, [pc, #116]	; (c3c0 <main+0x1d4>)
    c34c:	f000 fbf6 	bl	cb3c <debug_printf>
    svl_packet_send(&svl_packet_version); // when baud rate is determined send the version packet
    c350:	f107 0314 	add.w	r3, r7, #20
    c354:	4618      	mov	r0, r3
    c356:	f000 fd4b 	bl	cdf0 <svl_packet_send>

    debug_printf("\twaiting for bootloader confirmation\n");
    c35a:	481a      	ldr	r0, [pc, #104]	; (c3c4 <main+0x1d8>)
    c35c:	f000 fbee 	bl	cb3c <debug_printf>
    if (svl_packet_wait(&svl_packet_blmode) != 0)
    c360:	f107 0308 	add.w	r3, r7, #8
    c364:	4618      	mov	r0, r3
    c366:	f000 fe3b 	bl	cfe0 <svl_packet_wait>
    c36a:	4603      	mov	r3, r0
    c36c:	2b00      	cmp	r3, #0
    c36e:	d004      	beq.n	c37a <main+0x18e>
    { // wait for the bootloader to confirm bootloader mode entry
        debug_printf("\tno confirmation received\n");
    c370:	4815      	ldr	r0, [pc, #84]	; (c3c8 <main+0x1dc>)
    c372:	f000 fbe3 	bl	cb3c <debug_printf>
        app_start(); // break to app
    c376:	f000 fbc9 	bl	cb0c <app_start>
    }
    debug_printf("\tentering bootloader\n\n");
    c37a:	4814      	ldr	r0, [pc, #80]	; (c3cc <main+0x1e0>)
    c37c:	f000 fbde 	bl	cb3c <debug_printf>

    enter_bootload(); // Now we are locked in
    c380:	f000 fa08 	bl	c794 <enter_bootload>
    am_util_delay_ms(10);
    c384:	200a      	movs	r0, #10
    c386:	f000 fc57 	bl	cc38 <am_util_delay_ms>

    am_hal_reset_control(AM_HAL_RESET_CONTROL_SWPOI, 0); //Cause a system Power On Init to release as much of the stack as possible
    c38a:	2100      	movs	r1, #0
    c38c:	2001      	movs	r0, #1
    c38e:	f001 ff63 	bl	e258 <am_hal_reset_control>

    debug_printf("ERROR - runoff");
    c392:	480f      	ldr	r0, [pc, #60]	; (c3d0 <main+0x1e4>)
    c394:	f000 fbd2 	bl	cb3c <debug_printf>
    while (1)
    {                                                    // Loop forever while sleeping.
        am_hal_sysctrl_sleep(AM_HAL_SYSCTRL_SLEEP_DEEP); // Go to Deep Sleep.
    c398:	2001      	movs	r0, #1
    c39a:	f001 ffa7 	bl	e2ec <am_hal_sysctrl_sleep>
    c39e:	e7fb      	b.n	c398 <main+0x1ac>
    c3a0:	10000210 	.word	0x10000210
    c3a4:	0000ed6c 	.word	0x0000ed6c
    c3a8:	beefbeef 	.word	0xbeefbeef
    c3ac:	5555beef 	.word	0x5555beef
    c3b0:	deadbeef 	.word	0xdeadbeef
    c3b4:	12344321 	.word	0x12344321
    c3b8:	beef0000 	.word	0xbeef0000
    c3bc:	0000ed90 	.word	0x0000ed90
    c3c0:	0000edb4 	.word	0x0000edb4
    c3c4:	0000eddc 	.word	0x0000eddc
    c3c8:	0000ee04 	.word	0x0000ee04
    c3cc:	0000ee20 	.word	0x0000ee20
    c3d0:	0000ee38 	.word	0x0000ee38

0000c3d4 <setup>:
//
// Setup
//
//*****************************************************************************
void setup(void)
{
    c3d4:	b580      	push	{r7, lr}
    c3d6:	af00      	add	r7, sp, #0
    // Set the clock frequency.
    am_hal_clkgen_control(AM_HAL_CLKGEN_CONTROL_SYSCLK_MAX, 0);
    c3d8:	2100      	movs	r1, #0
    c3da:	2000      	movs	r0, #0
    c3dc:	f001 fbce 	bl	db7c <am_hal_clkgen_control>

    // Set the default cache configuration
    am_hal_cachectrl_config(&am_hal_cachectrl_defaults);
    c3e0:	480b      	ldr	r0, [pc, #44]	; (c410 <setup+0x3c>)
    c3e2:	f001 fb9d 	bl	db20 <am_hal_cachectrl_config>
    am_hal_cachectrl_enable();
    c3e6:	f001 fbbf 	bl	db68 <am_hal_cachectrl_enable>

    // Configure the stimer
    am_hal_stimer_int_enable(AM_HAL_STIMER_INT_OVERFLOW);
    c3ea:	f44f 7080 	mov.w	r0, #256	; 0x100
    c3ee:	f001 ff63 	bl	e2b8 <am_hal_stimer_int_enable>
    NVIC_EnableIRQ(STIMER_IRQn);
    c3f2:	2016      	movs	r0, #22
    c3f4:	f7ff fe9e 	bl	c134 <__NVIC_EnableIRQ>
    am_hal_stimer_config(AM_HAL_STIMER_CFG_CLEAR | AM_HAL_STIMER_CFG_FREEZE);
    c3f8:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
    c3fc:	f001 ff4c 	bl	e298 <am_hal_stimer_config>
    am_hal_stimer_config(AM_HAL_STIMER_HFRC_3MHZ);
    c400:	2001      	movs	r0, #1
    c402:	f001 ff49 	bl	e298 <am_hal_stimer_config>
#ifdef DEBUG
    start_uart_debug();
#endif

    // Enable interrupts.
    am_hal_interrupt_master_enable();
    c406:	f001 fe9d 	bl	e144 <am_hal_interrupt_master_enable>
}
    c40a:	bf00      	nop
    c40c:	bd80      	pop	{r7, pc}
    c40e:	bf00      	nop
    c410:	0000f070 	.word	0x0000f070

0000c414 <unsetup>:
//
// Un-set-up
//
//*****************************************************************************
void unsetup(void)
{
    c414:	b580      	push	{r7, lr}
    c416:	af00      	add	r7, sp, #0
    disable_burst_mode();
    c418:	f001 f8ba 	bl	d590 <disable_burst_mode>

    // Deconfigure the stimer
    am_hal_stimer_int_disable(AM_HAL_STIMER_INT_OVERFLOW);
    c41c:	f44f 7080 	mov.w	r0, #256	; 0x100
    c420:	f001 ff54 	bl	e2cc <am_hal_stimer_int_disable>
    NVIC_DisableIRQ(STIMER_IRQn);
    c424:	2016      	movs	r0, #22
    c426:	f7ff fea3 	bl	c170 <__NVIC_DisableIRQ>
    am_hal_stimer_config(AM_HAL_STIMER_CFG_CLEAR | AM_HAL_STIMER_CFG_FREEZE);
    c42a:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
    c42e:	f001 ff33 	bl	e298 <am_hal_stimer_config>
    am_hal_stimer_config(AM_HAL_STIMER_NO_CLK);
    c432:	2000      	movs	r0, #0
    c434:	f001 ff30 	bl	e298 <am_hal_stimer_config>
#ifdef DEBUG
    stop_uart_debug();
#endif

    // Disable interrupts.
    am_hal_interrupt_master_disable();
    c438:	f001 fe88 	bl	e14c <am_hal_interrupt_master_disable>
}
    c43c:	bf00      	nop
    c43e:	bd80      	pop	{r7, pc}

0000c440 <detect_baud_rate>:
//
// Baud Rate Detect Phase
//
// ****************************************
bool detect_baud_rate(uint32_t *baud)
{
    c440:	b580      	push	{r7, lr}
    c442:	b088      	sub	sp, #32
    c444:	af00      	add	r7, sp, #0
    c446:	6078      	str	r0, [r7, #4]
    uint32_t bl_entry_timeout_ms = 200;
    c448:	23c8      	movs	r3, #200	; 0xc8
    c44a:	613b      	str	r3, [r7, #16]
    uint32_t bl_entry_timeout_start = millis();
    c44c:	f001 f872 	bl	d534 <millis>
    c450:	60f8      	str	r0, [r7, #12]
    bool baud_is_valid = false;
    c452:	2300      	movs	r3, #0
    c454:	77fb      	strb	r3, [r7, #31]
    bool timed_out = true;
    c456:	2301      	movs	r3, #1
    c458:	77bb      	strb	r3, [r7, #30]

    debug_printf("phase:\tdetect baud rate\n");
    c45a:	488f      	ldr	r0, [pc, #572]	; (c698 <detect_baud_rate+0x258>)
    c45c:	f000 fb6e 	bl	cb3c <debug_printf>

    enable_burst_mode();
    c460:	f001 f87c 	bl	d55c <enable_burst_mode>

    am_hal_gpio_pinconfig(BL_RX_PAD, g_AM_HAL_GPIO_INPUT_PULLUP);
    c464:	4b8d      	ldr	r3, [pc, #564]	; (c69c <detect_baud_rate+0x25c>)
    c466:	6819      	ldr	r1, [r3, #0]
    c468:	2031      	movs	r0, #49	; 0x31
    c46a:	f001 fcc3 	bl	ddf4 <am_hal_gpio_pinconfig>

    ap3_gpio_enable_interrupts(BL_RX_PAD, AM_HAL_GPIO_PIN_INTDIR_LO2HI);
    c46e:	2100      	movs	r1, #0
    c470:	2031      	movs	r0, #49	; 0x31
    c472:	f001 f8a3 	bl	d5bc <ap3_gpio_enable_interrupts>
    am_hal_gpio_interrupt_clear(AM_HAL_GPIO_BIT(BL_RX_PAD));
    c476:	f04f 0000 	mov.w	r0, #0
    c47a:	f44f 3100 	mov.w	r1, #131072	; 0x20000
    c47e:	f001 fe43 	bl	e108 <am_hal_gpio_interrupt_clear>
    am_hal_gpio_interrupt_enable(AM_HAL_GPIO_BIT(BL_RX_PAD));
    c482:	f04f 0000 	mov.w	r0, #0
    c486:	f44f 3100 	mov.w	r1, #131072	; 0x20000
    c48a:	f001 fdf3 	bl	e074 <am_hal_gpio_interrupt_enable>
    NVIC_EnableIRQ(GPIO_IRQn);
    c48e:	200d      	movs	r0, #13
    c490:	f7ff fe50 	bl	c134 <__NVIC_EnableIRQ>

    while ((millis() - bl_entry_timeout_start) < bl_entry_timeout_ms)
    c494:	e0c9      	b.n	c62a <detect_baud_rate+0x1ea>
    {
        // try to detect baud rate

        // debug_printf("\ttime (ms):\t%d\n", millis());

        if (bl_baud_ticks_index == BL_BAUD_SAMPLES)
    c496:	4b82      	ldr	r3, [pc, #520]	; (c6a0 <detect_baud_rate+0x260>)
    c498:	781b      	ldrb	r3, [r3, #0]
    c49a:	b2db      	uxtb	r3, r3
    c49c:	2b05      	cmp	r3, #5
    c49e:	f040 80c4 	bne.w	c62a <detect_baud_rate+0x1ea>
        {

            // compute differences between samples
            for (uint8_t indi = 0; indi < (BL_BAUD_SAMPLES - 1); indi++)
    c4a2:	2300      	movs	r3, #0
    c4a4:	777b      	strb	r3, [r7, #29]
    c4a6:	e010      	b.n	c4ca <detect_baud_rate+0x8a>
            {
                bl_baud_ticks[indi] = bl_baud_ticks[indi + 1] - bl_baud_ticks[indi];
    c4a8:	7f7b      	ldrb	r3, [r7, #29]
    c4aa:	3301      	adds	r3, #1
    c4ac:	4a7d      	ldr	r2, [pc, #500]	; (c6a4 <detect_baud_rate+0x264>)
    c4ae:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
    c4b2:	7f7b      	ldrb	r3, [r7, #29]
    c4b4:	4a7b      	ldr	r2, [pc, #492]	; (c6a4 <detect_baud_rate+0x264>)
    c4b6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
    c4ba:	7f7b      	ldrb	r3, [r7, #29]
    c4bc:	1a8a      	subs	r2, r1, r2
    c4be:	4979      	ldr	r1, [pc, #484]	; (c6a4 <detect_baud_rate+0x264>)
    c4c0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
            for (uint8_t indi = 0; indi < (BL_BAUD_SAMPLES - 1); indi++)
    c4c4:	7f7b      	ldrb	r3, [r7, #29]
    c4c6:	3301      	adds	r3, #1
    c4c8:	777b      	strb	r3, [r7, #29]
    c4ca:	7f7b      	ldrb	r3, [r7, #29]
    c4cc:	2b03      	cmp	r3, #3
    c4ce:	d9eb      	bls.n	c4a8 <detect_baud_rate+0x68>
            }

            float mean = 0.0;
    c4d0:	f04f 0300 	mov.w	r3, #0
    c4d4:	61bb      	str	r3, [r7, #24]
            for (uint8_t indi = 0; indi < (BL_BAUD_SAMPLES - 1); indi++)
    c4d6:	2300      	movs	r3, #0
    c4d8:	75fb      	strb	r3, [r7, #23]
    c4da:	e010      	b.n	c4fe <detect_baud_rate+0xbe>
            {
                mean += bl_baud_ticks[indi];
    c4dc:	7dfb      	ldrb	r3, [r7, #23]
    c4de:	4a71      	ldr	r2, [pc, #452]	; (c6a4 <detect_baud_rate+0x264>)
    c4e0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    c4e4:	ee07 3a90 	vmov	s15, r3
    c4e8:	eef8 7a67 	vcvt.f32.u32	s15, s15
    c4ec:	ed97 7a06 	vldr	s14, [r7, #24]
    c4f0:	ee77 7a27 	vadd.f32	s15, s14, s15
    c4f4:	edc7 7a06 	vstr	s15, [r7, #24]
            for (uint8_t indi = 0; indi < (BL_BAUD_SAMPLES - 1); indi++)
    c4f8:	7dfb      	ldrb	r3, [r7, #23]
    c4fa:	3301      	adds	r3, #1
    c4fc:	75fb      	strb	r3, [r7, #23]
    c4fe:	7dfb      	ldrb	r3, [r7, #23]
    c500:	2b03      	cmp	r3, #3
    c502:	d9eb      	bls.n	c4dc <detect_baud_rate+0x9c>
            }
            mean /= (BL_BAUD_SAMPLES - 1);
    c504:	ed97 7a06 	vldr	s14, [r7, #24]
    c508:	eef1 6a00 	vmov.f32	s13, #16	; 0x40800000  4.0
    c50c:	eec7 7a26 	vdiv.f32	s15, s14, s13
    c510:	edc7 7a06 	vstr	s15, [r7, #24]

            if (mean < 3)
    c514:	edd7 7a06 	vldr	s15, [r7, #24]
    c518:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
    c51c:	eef4 7ac7 	vcmpe.f32	s15, s14
    c520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c524:	d47b      	bmi.n	c61e <detect_baud_rate+0x1de>
            {
                // invalid
            }
            else if ((mean >= 4) && (mean <= 8))
    c526:	edd7 7a06 	vldr	s15, [r7, #24]
    c52a:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
    c52e:	eef4 7ac7 	vcmpe.f32	s15, s14
    c532:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c536:	db0f      	blt.n	c558 <detect_baud_rate+0x118>
    c538:	edd7 7a06 	vldr	s15, [r7, #24]
    c53c:	eeb2 7a00 	vmov.f32	s14, #32	; 0x41000000  8.0
    c540:	eef4 7ac7 	vcmpe.f32	s15, s14
    c544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c548:	d806      	bhi.n	c558 <detect_baud_rate+0x118>
            {
                *baud = 921600;
    c54a:	687b      	ldr	r3, [r7, #4]
    c54c:	f44f 2261 	mov.w	r2, #921600	; 0xe1000
    c550:	601a      	str	r2, [r3, #0]
                baud_is_valid = true;
    c552:	2301      	movs	r3, #1
    c554:	77fb      	strb	r3, [r7, #31]
    c556:	e062      	b.n	c61e <detect_baud_rate+0x1de>
            }
            else if ((mean >= 10) && (mean <= 14))
    c558:	edd7 7a06 	vldr	s15, [r7, #24]
    c55c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
    c560:	eef4 7ac7 	vcmpe.f32	s15, s14
    c564:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c568:	db0f      	blt.n	c58a <detect_baud_rate+0x14a>
    c56a:	edd7 7a06 	vldr	s15, [r7, #24]
    c56e:	eeb2 7a0c 	vmov.f32	s14, #44	; 0x41600000  14.0
    c572:	eef4 7ac7 	vcmpe.f32	s15, s14
    c576:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c57a:	d806      	bhi.n	c58a <detect_baud_rate+0x14a>
            {
                *baud = 460800;
    c57c:	687b      	ldr	r3, [r7, #4]
    c57e:	f44f 22e1 	mov.w	r2, #460800	; 0x70800
    c582:	601a      	str	r2, [r3, #0]
                baud_is_valid = true;
    c584:	2301      	movs	r3, #1
    c586:	77fb      	strb	r3, [r7, #31]
    c588:	e049      	b.n	c61e <detect_baud_rate+0x1de>
            }
            else if ((mean >= 25) && (mean <= 30))
    c58a:	edd7 7a06 	vldr	s15, [r7, #24]
    c58e:	eeb3 7a09 	vmov.f32	s14, #57	; 0x41c80000  25.0
    c592:	eef4 7ac7 	vcmpe.f32	s15, s14
    c596:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c59a:	db0f      	blt.n	c5bc <detect_baud_rate+0x17c>
    c59c:	edd7 7a06 	vldr	s15, [r7, #24]
    c5a0:	eeb3 7a0e 	vmov.f32	s14, #62	; 0x41f00000  30.0
    c5a4:	eef4 7ac7 	vcmpe.f32	s15, s14
    c5a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c5ac:	d806      	bhi.n	c5bc <detect_baud_rate+0x17c>
            {
                *baud = 230400;
    c5ae:	687b      	ldr	r3, [r7, #4]
    c5b0:	f44f 3261 	mov.w	r2, #230400	; 0x38400
    c5b4:	601a      	str	r2, [r3, #0]
                baud_is_valid = true;
    c5b6:	2301      	movs	r3, #1
    c5b8:	77fb      	strb	r3, [r7, #31]
    c5ba:	e030      	b.n	c61e <detect_baud_rate+0x1de>
            }
            else if ((mean >= 45) && (mean <= 55))
    c5bc:	edd7 7a06 	vldr	s15, [r7, #24]
    c5c0:	ed9f 7a39 	vldr	s14, [pc, #228]	; c6a8 <detect_baud_rate+0x268>
    c5c4:	eef4 7ac7 	vcmpe.f32	s15, s14
    c5c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c5cc:	db0f      	blt.n	c5ee <detect_baud_rate+0x1ae>
    c5ce:	edd7 7a06 	vldr	s15, [r7, #24]
    c5d2:	ed9f 7a36 	vldr	s14, [pc, #216]	; c6ac <detect_baud_rate+0x26c>
    c5d6:	eef4 7ac7 	vcmpe.f32	s15, s14
    c5da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c5de:	d806      	bhi.n	c5ee <detect_baud_rate+0x1ae>
            {
                *baud = 115200;
    c5e0:	687b      	ldr	r3, [r7, #4]
    c5e2:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
    c5e6:	601a      	str	r2, [r3, #0]
                baud_is_valid = true;
    c5e8:	2301      	movs	r3, #1
    c5ea:	77fb      	strb	r3, [r7, #31]
    c5ec:	e017      	b.n	c61e <detect_baud_rate+0x1de>
            }
            else if ((mean >= 91) && (mean <= 111))
    c5ee:	edd7 7a06 	vldr	s15, [r7, #24]
    c5f2:	ed9f 7a2f 	vldr	s14, [pc, #188]	; c6b0 <detect_baud_rate+0x270>
    c5f6:	eef4 7ac7 	vcmpe.f32	s15, s14
    c5fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c5fe:	db0e      	blt.n	c61e <detect_baud_rate+0x1de>
    c600:	edd7 7a06 	vldr	s15, [r7, #24]
    c604:	ed9f 7a2b 	vldr	s14, [pc, #172]	; c6b4 <detect_baud_rate+0x274>
    c608:	eef4 7ac7 	vcmpe.f32	s15, s14
    c60c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c610:	d805      	bhi.n	c61e <detect_baud_rate+0x1de>
            {
                *baud = 57600;
    c612:	687b      	ldr	r3, [r7, #4]
    c614:	f44f 4261 	mov.w	r2, #57600	; 0xe100
    c618:	601a      	str	r2, [r3, #0]
                baud_is_valid = true;
    c61a:	2301      	movs	r3, #1
    c61c:	77fb      	strb	r3, [r7, #31]
            else
            {
                // invalid
            }

            if (baud_is_valid)
    c61e:	7ffb      	ldrb	r3, [r7, #31]
    c620:	2b00      	cmp	r3, #0
    c622:	d00c      	beq.n	c63e <detect_baud_rate+0x1fe>
            {
                timed_out = false;
    c624:	2300      	movs	r3, #0
    c626:	77bb      	strb	r3, [r7, #30]
            }

            break; // exit the timeout loop
    c628:	e009      	b.n	c63e <detect_baud_rate+0x1fe>
    while ((millis() - bl_entry_timeout_start) < bl_entry_timeout_ms)
    c62a:	f000 ff83 	bl	d534 <millis>
    c62e:	4602      	mov	r2, r0
    c630:	68fb      	ldr	r3, [r7, #12]
    c632:	1ad3      	subs	r3, r2, r3
    c634:	693a      	ldr	r2, [r7, #16]
    c636:	429a      	cmp	r2, r3
    c638:	f63f af2d 	bhi.w	c496 <detect_baud_rate+0x56>
    c63c:	e000      	b.n	c640 <detect_baud_rate+0x200>
            break; // exit the timeout loop
    c63e:	bf00      	nop
        }
    }

    am_hal_gpio_interrupt_disable(AM_HAL_GPIO_BIT(BL_RX_PAD));
    c640:	f04f 0000 	mov.w	r0, #0
    c644:	f44f 3100 	mov.w	r1, #131072	; 0x20000
    c648:	f001 fd38 	bl	e0bc <am_hal_gpio_interrupt_disable>
    am_hal_gpio_interrupt_clear(AM_HAL_GPIO_BIT(BL_RX_PAD));
    c64c:	f04f 0000 	mov.w	r0, #0
    c650:	f44f 3100 	mov.w	r1, #131072	; 0x20000
    c654:	f001 fd58 	bl	e108 <am_hal_gpio_interrupt_clear>
    NVIC_DisableIRQ(GPIO_IRQn);
    c658:	200d      	movs	r0, #13
    c65a:	f7ff fd89 	bl	c170 <__NVIC_DisableIRQ>

    disable_burst_mode();
    c65e:	f000 ff97 	bl	d590 <disable_burst_mode>
        }
    }
    debug_printf("}\n");
#endif // DEBUG

    if (!baud_is_valid)
    c662:	7ffb      	ldrb	r3, [r7, #31]
    c664:	f083 0301 	eor.w	r3, r3, #1
    c668:	b2db      	uxtb	r3, r3
    c66a:	2b00      	cmp	r3, #0
    c66c:	d009      	beq.n	c682 <detect_baud_rate+0x242>
    {
        debug_printf("\tbaud rate not detected.\n\t\trising edges:\t%d\n\t\ttimed out:\t%d\n\n", bl_baud_ticks_index, timed_out);
    c66e:	4b0c      	ldr	r3, [pc, #48]	; (c6a0 <detect_baud_rate+0x260>)
    c670:	781b      	ldrb	r3, [r3, #0]
    c672:	b2db      	uxtb	r3, r3
    c674:	4619      	mov	r1, r3
    c676:	7fbb      	ldrb	r3, [r7, #30]
    c678:	461a      	mov	r2, r3
    c67a:	480f      	ldr	r0, [pc, #60]	; (c6b8 <detect_baud_rate+0x278>)
    c67c:	f000 fa5e 	bl	cb3c <debug_printf>
    c680:	e005      	b.n	c68e <detect_baud_rate+0x24e>
    }
    else
    {
        debug_printf("\tdetected valid baud rate:\t%d\n\n", *baud);
    c682:	687b      	ldr	r3, [r7, #4]
    c684:	681b      	ldr	r3, [r3, #0]
    c686:	4619      	mov	r1, r3
    c688:	480c      	ldr	r0, [pc, #48]	; (c6bc <detect_baud_rate+0x27c>)
    c68a:	f000 fa57 	bl	cb3c <debug_printf>
    }

    return baud_is_valid;
    c68e:	7ffb      	ldrb	r3, [r7, #31]
}
    c690:	4618      	mov	r0, r3
    c692:	3720      	adds	r7, #32
    c694:	46bd      	mov	sp, r7
    c696:	bd80      	pop	{r7, pc}
    c698:	0000ee48 	.word	0x0000ee48
    c69c:	0000f078 	.word	0x0000f078
    c6a0:	10000224 	.word	0x10000224
    c6a4:	10000228 	.word	0x10000228
    c6a8:	42340000 	.word	0x42340000
    c6ac:	425c0000 	.word	0x425c0000
    c6b0:	42b60000 	.word	0x42b60000
    c6b4:	42de0000 	.word	0x42de0000
    c6b8:	0000ee64 	.word	0x0000ee64
    c6bc:	0000eea4 	.word	0x0000eea4

0000c6c0 <start_uart_bl>:
//
// Start BL UART at desired baud
//
//*****************************************************************************
void start_uart_bl(uint32_t baud)
{
    c6c0:	b580      	push	{r7, lr}
    c6c2:	b08e      	sub	sp, #56	; 0x38
    c6c4:	af00      	add	r7, sp, #0
    c6c6:	6078      	str	r0, [r7, #4]
    const am_hal_gpio_pincfg_t bl_uart_tx_pinconfig = UART_GPIO_PINCONFIG(BL_UART_INST, TX, BL_TX_PAD);
    c6c8:	2300      	movs	r3, #0
    c6ca:	637b      	str	r3, [r7, #52]	; 0x34
    const am_hal_gpio_pincfg_t bl_uart_rx_pinconfig = UART_GPIO_PINCONFIG(BL_UART_INST, RX, BL_RX_PAD);
    c6cc:	2300      	movs	r3, #0
    c6ce:	633b      	str	r3, [r7, #48]	; 0x30
    am_hal_uart_config_t bl_uart_config =
    c6d0:	687b      	ldr	r3, [r7, #4]
    c6d2:	60bb      	str	r3, [r7, #8]
    c6d4:	2360      	movs	r3, #96	; 0x60
    c6d6:	60fb      	str	r3, [r7, #12]
    c6d8:	2300      	movs	r3, #0
    c6da:	613b      	str	r3, [r7, #16]
    c6dc:	2300      	movs	r3, #0
    c6de:	617b      	str	r3, [r7, #20]
    c6e0:	2300      	movs	r3, #0
    c6e2:	61bb      	str	r3, [r7, #24]
    c6e4:	2312      	movs	r3, #18
    c6e6:	61fb      	str	r3, [r7, #28]
    c6e8:	2300      	movs	r3, #0
    c6ea:	623b      	str	r3, [r7, #32]
    c6ec:	2300      	movs	r3, #0
    c6ee:	627b      	str	r3, [r7, #36]	; 0x24
    c6f0:	2300      	movs	r3, #0
    c6f2:	62bb      	str	r3, [r7, #40]	; 0x28
    c6f4:	2300      	movs	r3, #0
    c6f6:	62fb      	str	r3, [r7, #44]	; 0x2c
            .pui8RxBuffer = NULL,
            .ui32RxBufferSize = 0,
        };

    // Initialize the printf interface for UART output.
    am_hal_uart_initialize(BL_UART_INST, &hUART_bl);
    c6f8:	491f      	ldr	r1, [pc, #124]	; (c778 <start_uart_bl+0xb8>)
    c6fa:	2000      	movs	r0, #0
    c6fc:	f001 fe2e 	bl	e35c <am_hal_uart_initialize>
    am_hal_uart_power_control(hUART_bl, AM_HAL_SYSCTRL_WAKE, false);
    c700:	4b1d      	ldr	r3, [pc, #116]	; (c778 <start_uart_bl+0xb8>)
    c702:	681b      	ldr	r3, [r3, #0]
    c704:	2200      	movs	r2, #0
    c706:	2100      	movs	r1, #0
    c708:	4618      	mov	r0, r3
    c70a:	f001 fe4f 	bl	e3ac <am_hal_uart_power_control>
    am_hal_uart_configure(hUART_bl, &bl_uart_config);
    c70e:	4b1a      	ldr	r3, [pc, #104]	; (c778 <start_uart_bl+0xb8>)
    c710:	681b      	ldr	r3, [r3, #0]
    c712:	f107 0208 	add.w	r2, r7, #8
    c716:	4611      	mov	r1, r2
    c718:	4618      	mov	r0, r3
    c71a:	f001 febf 	bl	e49c <am_hal_uart_configure>

    // Disable that pesky FIFO
    UARTn(BL_UART_INST)->LCRH_b.FEN = 0;
    c71e:	4a17      	ldr	r2, [pc, #92]	; (c77c <start_uart_bl+0xbc>)
    c720:	f892 302c 	ldrb.w	r3, [r2, #44]	; 0x2c
    c724:	f36f 1304 	bfc	r3, #4, #1
    c728:	f882 302c 	strb.w	r3, [r2, #44]	; 0x2c

    // Enable the UART pins.
    am_hal_gpio_pinconfig(BL_TX_PAD, bl_uart_tx_pinconfig);
    c72c:	6b79      	ldr	r1, [r7, #52]	; 0x34
    c72e:	2030      	movs	r0, #48	; 0x30
    c730:	f001 fb60 	bl	ddf4 <am_hal_gpio_pinconfig>
    am_hal_gpio_pinconfig(BL_RX_PAD, bl_uart_rx_pinconfig);
    c734:	6b39      	ldr	r1, [r7, #48]	; 0x30
    c736:	2031      	movs	r0, #49	; 0x31
    c738:	f001 fb5c 	bl	ddf4 <am_hal_gpio_pinconfig>

    // Enable interrupts.
    NVIC_EnableIRQ((IRQn_Type)(UART0_IRQn + BL_UART_INST));
    c73c:	200f      	movs	r0, #15
    c73e:	f7ff fcf9 	bl	c134 <__NVIC_EnableIRQ>
    am_hal_uart_interrupt_enable(hUART_bl, (AM_HAL_UART_INT_RX));
    c742:	4b0d      	ldr	r3, [pc, #52]	; (c778 <start_uart_bl+0xb8>)
    c744:	681b      	ldr	r3, [r3, #0]
    c746:	2110      	movs	r1, #16
    c748:	4618      	mov	r0, r3
    c74a:	f002 fa45 	bl	ebd8 <am_hal_uart_interrupt_enable>

    // Provide SVL Packet interfaces
    svl_packet_link_read_fn(art_svl_ringbuf_read, &bl_rx_ringbuf);
    c74e:	490c      	ldr	r1, [pc, #48]	; (c780 <start_uart_bl+0xc0>)
    c750:	480c      	ldr	r0, [pc, #48]	; (c784 <start_uart_bl+0xc4>)
    c752:	f000 fafb 	bl	cd4c <svl_packet_link_read_fn>
    svl_packet_link_avail_fn(art_svl_ringbuf_available, &bl_rx_ringbuf);
    c756:	490a      	ldr	r1, [pc, #40]	; (c780 <start_uart_bl+0xc0>)
    c758:	480b      	ldr	r0, [pc, #44]	; (c788 <start_uart_bl+0xc8>)
    c75a:	f000 fb23 	bl	cda4 <svl_packet_link_avail_fn>
    svl_packet_link_millis_fn(millis);
    c75e:	480b      	ldr	r0, [pc, #44]	; (c78c <start_uart_bl+0xcc>)
    c760:	f000 fb36 	bl	cdd0 <svl_packet_link_millis_fn>
    svl_packet_link_write_fn(svl_uart_write_byte, hUART_bl);
    c764:	4b04      	ldr	r3, [pc, #16]	; (c778 <start_uart_bl+0xb8>)
    c766:	681b      	ldr	r3, [r3, #0]
    c768:	4619      	mov	r1, r3
    c76a:	4809      	ldr	r0, [pc, #36]	; (c790 <start_uart_bl+0xd0>)
    c76c:	f000 fb04 	bl	cd78 <svl_packet_link_write_fn>
}
    c770:	bf00      	nop
    c772:	3738      	adds	r7, #56	; 0x38
    c774:	46bd      	mov	sp, r7
    c776:	bd80      	pop	{r7, pc}
    c778:	10000220 	.word	0x10000220
    c77c:	4001c000 	.word	0x4001c000
    c780:	10000210 	.word	0x10000210
    c784:	0000d3dd 	.word	0x0000d3dd
    c788:	0000d2d3 	.word	0x0000d2d3
    c78c:	0000d535 	.word	0x0000d535
    c790:	0000d4b5 	.word	0x0000d4b5

0000c794 <enter_bootload>:
//
// Bootload phase
//
// ****************************************
void enter_bootload(void)
{
    c794:	b580      	push	{r7, lr}
    c796:	b08c      	sub	sp, #48	; 0x30
    c798:	af00      	add	r7, sp, #0
    enable_burst_mode();
    c79a:	f000 fedf 	bl	d55c <enable_burst_mode>
    bool done = false;
    c79e:	2300      	movs	r3, #0
    c7a0:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    uint32_t frame_address = 0;
    c7a4:	2300      	movs	r3, #0
    c7a6:	62bb      	str	r3, [r7, #40]	; 0x28
    uint16_t last_page_erased = 0;
    c7a8:	2300      	movs	r3, #0
    c7aa:	84fb      	strh	r3, [r7, #38]	; 0x26
    uint8_t retransmit = 0;
    c7ac:	2300      	movs	r3, #0
    c7ae:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
    static uint32_t frame_buffer[FRAME_BUFFER_SIZE];

    svl_packet_t svl_packet_incoming_frame = {CMD_FRAME, (uint8_t *)frame_buffer, sizeof(frame_buffer) / sizeof(uint8_t), sizeof(frame_buffer) / sizeof(uint8_t)};
    c7b2:	4a41      	ldr	r2, [pc, #260]	; (c8b8 <enter_bootload+0x124>)
    c7b4:	f107 0318 	add.w	r3, r7, #24
    c7b8:	ca07      	ldmia	r2, {r0, r1, r2}
    c7ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    svl_packet_t svl_packet_retry = {CMD_RETRY, NULL, 0, 0};
    c7be:	2305      	movs	r3, #5
    c7c0:	733b      	strb	r3, [r7, #12]
    c7c2:	2300      	movs	r3, #0
    c7c4:	613b      	str	r3, [r7, #16]
    c7c6:	2300      	movs	r3, #0
    c7c8:	82bb      	strh	r3, [r7, #20]
    c7ca:	2300      	movs	r3, #0
    c7cc:	82fb      	strh	r3, [r7, #22]
    svl_packet_t svl_packet_next = {CMD_NEXT, NULL, 0, 0};
    c7ce:	2303      	movs	r3, #3
    c7d0:	703b      	strb	r3, [r7, #0]
    c7d2:	2300      	movs	r3, #0
    c7d4:	607b      	str	r3, [r7, #4]
    c7d6:	2300      	movs	r3, #0
    c7d8:	813b      	strh	r3, [r7, #8]
    c7da:	2300      	movs	r3, #0
    c7dc:	817b      	strh	r3, [r7, #10]

    debug_printf("phase:\tbootload\n");
    c7de:	4837      	ldr	r0, [pc, #220]	; (c8bc <enter_bootload+0x128>)
    c7e0:	f000 f9ac 	bl	cb3c <debug_printf>

    while (!done)
    c7e4:	e05c      	b.n	c8a0 <enter_bootload+0x10c>
    {

        if (retransmit != 0)
    c7e6:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
    c7ea:	2b00      	cmp	r3, #0
    c7ec:	d008      	beq.n	c800 <enter_bootload+0x6c>
        {
            debug_printf("\trequesting retransmission\n");
    c7ee:	4834      	ldr	r0, [pc, #208]	; (c8c0 <enter_bootload+0x12c>)
    c7f0:	f000 f9a4 	bl	cb3c <debug_printf>
            svl_packet_send((svl_packet_t *)&svl_packet_retry); // Ask to retransmit
    c7f4:	f107 030c 	add.w	r3, r7, #12
    c7f8:	4618      	mov	r0, r3
    c7fa:	f000 faf9 	bl	cdf0 <svl_packet_send>
    c7fe:	e006      	b.n	c80e <enter_bootload+0x7a>
        }
        else
        {
            debug_printf("\trequesting next app frame\n");
    c800:	4830      	ldr	r0, [pc, #192]	; (c8c4 <enter_bootload+0x130>)
    c802:	f000 f99b 	bl	cb3c <debug_printf>
            svl_packet_send((svl_packet_t *)&svl_packet_next); // Ask for the next frame packet
    c806:	463b      	mov	r3, r7
    c808:	4618      	mov	r0, r3
    c80a:	f000 faf1 	bl	cdf0 <svl_packet_send>
        }
        retransmit = 0;
    c80e:	2300      	movs	r3, #0
    c810:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e

        uint8_t stat = svl_packet_wait(&svl_packet_incoming_frame);
    c814:	f107 0318 	add.w	r3, r7, #24
    c818:	4618      	mov	r0, r3
    c81a:	f000 fbe1 	bl	cfe0 <svl_packet_wait>
    c81e:	4603      	mov	r3, r0
    c820:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
        if (stat != 0)
    c824:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
    c828:	2b00      	cmp	r3, #0
    c82a:	d012      	beq.n	c852 <enter_bootload+0xbe>
        { // wait for either a frame or the done command
            debug_printf("\t\terror receiving packet (%d)\n", stat);
    c82c:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
    c830:	4619      	mov	r1, r3
    c832:	4825      	ldr	r0, [pc, #148]	; (c8c8 <enter_bootload+0x134>)
    c834:	f000 f982 	bl	cb3c <debug_printf>
            retransmit = 1;
    c838:	2301      	movs	r3, #1
    c83a:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
            am_util_delay_us(177000); //Worst case: wait 177ms for 2048 byte transfer at 115200bps to complete
    c83e:	4823      	ldr	r0, [pc, #140]	; (c8cc <enter_bootload+0x138>)
    c840:	f000 fa18 	bl	cc74 <am_util_delay_us>

            //Flush the buffers to remove any inbound or outbound garbage
            bl_rx_ringbuf.r_offset = 0;
    c844:	4b22      	ldr	r3, [pc, #136]	; (c8d0 <enter_bootload+0x13c>)
    c846:	2200      	movs	r2, #0
    c848:	609a      	str	r2, [r3, #8]
            bl_rx_ringbuf.w_offset = 0;
    c84a:	4b21      	ldr	r3, [pc, #132]	; (c8d0 <enter_bootload+0x13c>)
    c84c:	2200      	movs	r2, #0
    c84e:	60da      	str	r2, [r3, #12]
            continue;
    c850:	e026      	b.n	c8a0 <enter_bootload+0x10c>
        }

        // debug_printf("Successfully received incoming frame packet (todo: add extra details in debug)\n", stat);

        if (svl_packet_incoming_frame.cmd == CMD_FRAME)
    c852:	7e3b      	ldrb	r3, [r7, #24]
    c854:	2b04      	cmp	r3, #4
    c856:	d112      	bne.n	c87e <enter_bootload+0xea>
        {
            debug_printf("\t\treceived an app frame\n");
    c858:	481e      	ldr	r0, [pc, #120]	; (c8d4 <enter_bootload+0x140>)
    c85a:	f000 f96f 	bl	cb3c <debug_printf>
            if (handle_frame_packet(&svl_packet_incoming_frame, &frame_address, &last_page_erased) != 0)
    c85e:	f107 0226 	add.w	r2, r7, #38	; 0x26
    c862:	f107 0128 	add.w	r1, r7, #40	; 0x28
    c866:	f107 0318 	add.w	r3, r7, #24
    c86a:	4618      	mov	r0, r3
    c86c:	f000 f8c6 	bl	c9fc <handle_frame_packet>
    c870:	4603      	mov	r3, r0
    c872:	2b00      	cmp	r3, #0
    c874:	d014      	beq.n	c8a0 <enter_bootload+0x10c>
            {
                // debug_printf("\t\t\tbootload error - packet could not be handled\n");
                retransmit = 1;
    c876:	2301      	movs	r3, #1
    c878:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
                continue;
    c87c:	e010      	b.n	c8a0 <enter_bootload+0x10c>
            }
        }
        else if (svl_packet_incoming_frame.cmd == CMD_DONE)
    c87e:	7e3b      	ldrb	r3, [r7, #24]
    c880:	2b06      	cmp	r3, #6
    c882:	d106      	bne.n	c892 <enter_bootload+0xfe>
        {
            debug_printf("\t\treceived done signal!\n\n");
    c884:	4814      	ldr	r0, [pc, #80]	; (c8d8 <enter_bootload+0x144>)
    c886:	f000 f959 	bl	cb3c <debug_printf>
            done = true;
    c88a:	2301      	movs	r3, #1
    c88c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    c890:	e006      	b.n	c8a0 <enter_bootload+0x10c>
        }
        else
        {
            debug_printf("bootload error - unknown command\n");
    c892:	4812      	ldr	r0, [pc, #72]	; (c8dc <enter_bootload+0x148>)
    c894:	f000 f952 	bl	cb3c <debug_printf>
            retransmit = 1;
    c898:	2301      	movs	r3, #1
    c89a:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
            continue;
    c89e:	bf00      	nop
    while (!done)
    c8a0:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
    c8a4:	f083 0301 	eor.w	r3, r3, #1
    c8a8:	b2db      	uxtb	r3, r3
    c8aa:	2b00      	cmp	r3, #0
    c8ac:	d19b      	bne.n	c7e6 <enter_bootload+0x52>
        }
    }
    
    
    // finish bootloading
}
    c8ae:	bf00      	nop
    c8b0:	bf00      	nop
    c8b2:	3730      	adds	r7, #48	; 0x30
    c8b4:	46bd      	mov	sp, r7
    c8b6:	bd80      	pop	{r7, pc}
    c8b8:	0000ef8c 	.word	0x0000ef8c
    c8bc:	0000eec4 	.word	0x0000eec4
    c8c0:	0000eed8 	.word	0x0000eed8
    c8c4:	0000eef4 	.word	0x0000eef4
    c8c8:	0000ef10 	.word	0x0000ef10
    c8cc:	0002b368 	.word	0x0002b368
    c8d0:	10000210 	.word	0x10000210
    c8d4:	0000ef30 	.word	0x0000ef30
    c8d8:	0000ef4c 	.word	0x0000ef4c
    c8dc:	0000ef68 	.word	0x0000ef68

0000c8e0 <update_from_flash>:
//
// ****************************************
#define FLASH_PAYLOAD_SIZE AM_HAL_FLASH_PAGE_SIZE

uint8_t update_from_flash(image_header * new_image)
{
    c8e0:	b580      	push	{r7, lr}
    c8e2:	b08a      	sub	sp, #40	; 0x28
    c8e4:	af00      	add	r7, sp, #0
    c8e6:	6078      	str	r0, [r7, #4]

    uint32_t length_remaining = new_image->length;
    c8e8:	687b      	ldr	r3, [r7, #4]
    c8ea:	685b      	ldr	r3, [r3, #4]
    c8ec:	61fb      	str	r3, [r7, #28]
    uint32_t amount_to_write = 0;
    c8ee:	2300      	movs	r3, #0
    c8f0:	627b      	str	r3, [r7, #36]	; 0x24
    uint32_t itr = 0;
    c8f2:	2300      	movs	r3, #0
    c8f4:	623b      	str	r3, [r7, #32]
    
    for(itr = 0; (itr < new_image->length) && (itr < (NEW_IMAGE_HEADER_LOCATION - USERCODE_OFFSET)); itr= itr + FLASH_PAYLOAD_SIZE)
    c8f6:	2300      	movs	r3, #0
    c8f8:	623b      	str	r3, [r7, #32]
    c8fa:	e064      	b.n	c9c6 <update_from_flash+0xe6>
    {
        log_debug(0x7f, 0);
    c8fc:	2100      	movs	r1, #0
    c8fe:	207f      	movs	r0, #127	; 0x7f
    c900:	f7ff fc5a 	bl	c1b8 <log_debug>
        uint32_t offset_address_write = itr + USERCODE_OFFSET;
    c904:	6a3b      	ldr	r3, [r7, #32]
    c906:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
    c90a:	61bb      	str	r3, [r7, #24]
        uint32_t offset_address_read = itr + SECOND_IMAGE_LOCATION;
    c90c:	6a3b      	ldr	r3, [r7, #32]
    c90e:	f503 2310 	add.w	r3, r3, #589824	; 0x90000
    c912:	617b      	str	r3, [r7, #20]
        
        //Erase the 8k page for this address
        uint32_t i32ReturnCode = 0;
    c914:	2300      	movs	r3, #0
    c916:	613b      	str	r3, [r7, #16]
        log_debug(AM_HAL_FLASH_ADDR2INST(offset_address_write), 1);
    c918:	69bb      	ldr	r3, [r7, #24]
    c91a:	0cdb      	lsrs	r3, r3, #19
    c91c:	f003 0301 	and.w	r3, r3, #1
    c920:	2101      	movs	r1, #1
    c922:	4618      	mov	r0, r3
    c924:	f7ff fc48 	bl	c1b8 <log_debug>
        log_debug(AM_HAL_FLASH_ADDR2PAGE(offset_address_write), 2);
    c928:	69bb      	ldr	r3, [r7, #24]
    c92a:	0b5b      	lsrs	r3, r3, #13
    c92c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    c930:	2102      	movs	r1, #2
    c932:	4618      	mov	r0, r3
    c934:	f7ff fc40 	bl	c1b8 <log_debug>
        log_debug(offset_address_write, 3);
    c938:	2103      	movs	r1, #3
    c93a:	69b8      	ldr	r0, [r7, #24]
    c93c:	f7ff fc3c 	bl	c1b8 <log_debug>
        
        i32ReturnCode = am_hal_flash_page_erase(AM_HAL_FLASH_PROGRAM_KEY, AM_HAL_FLASH_ADDR2INST(offset_address_write), AM_HAL_FLASH_ADDR2PAGE(offset_address_write));
    c940:	69bb      	ldr	r3, [r7, #24]
    c942:	0cdb      	lsrs	r3, r3, #19
    c944:	f003 0101 	and.w	r1, r3, #1
    c948:	69bb      	ldr	r3, [r7, #24]
    c94a:	0b5b      	lsrs	r3, r3, #13
    c94c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    c950:	461a      	mov	r2, r3
    c952:	4829      	ldr	r0, [pc, #164]	; (c9f8 <update_from_flash+0x118>)
    c954:	f001 f9cc 	bl	dcf0 <am_hal_flash_page_erase>
    c958:	4603      	mov	r3, r0
    c95a:	613b      	str	r3, [r7, #16]
        if (i32ReturnCode)
    c95c:	693b      	ldr	r3, [r7, #16]
    c95e:	2b00      	cmp	r3, #0
    c960:	d006      	beq.n	c970 <update_from_flash+0x90>
        {
            log_debug(i32ReturnCode, 4);
    c962:	2104      	movs	r1, #4
    c964:	6938      	ldr	r0, [r7, #16]
    c966:	f7ff fc27 	bl	c1b8 <log_debug>
            return i32ReturnCode;
    c96a:	693b      	ldr	r3, [r7, #16]
    c96c:	b2db      	uxtb	r3, r3
    c96e:	e03f      	b.n	c9f0 <update_from_flash+0x110>
        }
        log_debug(0x00ee00ee, 5);
    c970:	2105      	movs	r1, #5
    c972:	f04f 10ee 	mov.w	r0, #15597806	; 0xee00ee
    c976:	f7ff fc1f 	bl	c1b8 <log_debug>
        
        if(length_remaining > FLASH_PAYLOAD_SIZE)
    c97a:	69fb      	ldr	r3, [r7, #28]
    c97c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
    c980:	d903      	bls.n	c98a <update_from_flash+0xaa>
        {
            amount_to_write = FLASH_PAYLOAD_SIZE;
    c982:	f44f 5300 	mov.w	r3, #8192	; 0x2000
    c986:	627b      	str	r3, [r7, #36]	; 0x24
    c988:	e001      	b.n	c98e <update_from_flash+0xae>
        }
        else
        {
            amount_to_write = length_remaining;
    c98a:	69fb      	ldr	r3, [r7, #28]
    c98c:	627b      	str	r3, [r7, #36]	; 0x24
        }
        
        
        i32ReturnCode = am_hal_flash_program_main(AM_HAL_FLASH_PROGRAM_KEY, (uint32_t *)offset_address_read, (uint32_t *)offset_address_write, amount_to_write);
    c98e:	6979      	ldr	r1, [r7, #20]
    c990:	69ba      	ldr	r2, [r7, #24]
    c992:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c994:	4818      	ldr	r0, [pc, #96]	; (c9f8 <update_from_flash+0x118>)
    c996:	f001 f9af 	bl	dcf8 <am_hal_flash_program_main>
    c99a:	4603      	mov	r3, r0
    c99c:	613b      	str	r3, [r7, #16]
        
        log_debug(0x33333333, 6);
    c99e:	2106      	movs	r1, #6
    c9a0:	f04f 3033 	mov.w	r0, #858993459	; 0x33333333
    c9a4:	f7ff fc08 	bl	c1b8 <log_debug>
        
        uint32_t current_flash_update_state = i32ReturnCode;
    c9a8:	693b      	ldr	r3, [r7, #16]
    c9aa:	60bb      	str	r3, [r7, #8]
        am_hal_flash_program_main(AM_HAL_FLASH_PROGRAM_KEY, (uint32_t *)(&current_flash_update_state),&new_image->checksum, 1);
    c9ac:	687b      	ldr	r3, [r7, #4]
    c9ae:	f103 0210 	add.w	r2, r3, #16
    c9b2:	f107 0108 	add.w	r1, r7, #8
    c9b6:	2301      	movs	r3, #1
    c9b8:	480f      	ldr	r0, [pc, #60]	; (c9f8 <update_from_flash+0x118>)
    c9ba:	f001 f99d 	bl	dcf8 <am_hal_flash_program_main>
    for(itr = 0; (itr < new_image->length) && (itr < (NEW_IMAGE_HEADER_LOCATION - USERCODE_OFFSET)); itr= itr + FLASH_PAYLOAD_SIZE)
    c9be:	6a3b      	ldr	r3, [r7, #32]
    c9c0:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
    c9c4:	623b      	str	r3, [r7, #32]
    c9c6:	687b      	ldr	r3, [r7, #4]
    c9c8:	685b      	ldr	r3, [r3, #4]
    c9ca:	6a3a      	ldr	r2, [r7, #32]
    c9cc:	429a      	cmp	r2, r3
    c9ce:	d203      	bcs.n	c9d8 <update_from_flash+0xf8>
    c9d0:	6a3b      	ldr	r3, [r7, #32]
    c9d2:	f5b3 2fe0 	cmp.w	r3, #458752	; 0x70000
    c9d6:	d391      	bcc.n	c8fc <update_from_flash+0x1c>
    }
    
    //image_header * new_image = (image_header*)NEW_IMAGE_HEADER_LOCATION;
    
    uint32_t data[] = {0x0};
    c9d8:	2300      	movs	r3, #0
    c9da:	60fb      	str	r3, [r7, #12]
    am_hal_flash_program_main(AM_HAL_FLASH_PROGRAM_KEY, data, (uint32_t *)(&(new_image->ready)), 1);
    c9dc:	687b      	ldr	r3, [r7, #4]
    c9de:	f103 020c 	add.w	r2, r3, #12
    c9e2:	f107 010c 	add.w	r1, r7, #12
    c9e6:	2301      	movs	r3, #1
    c9e8:	4803      	ldr	r0, [pc, #12]	; (c9f8 <update_from_flash+0x118>)
    c9ea:	f001 f985 	bl	dcf8 <am_hal_flash_program_main>
    
    return 0;
    c9ee:	2300      	movs	r3, #0
}
    c9f0:	4618      	mov	r0, r3
    c9f2:	3728      	adds	r7, #40	; 0x28
    c9f4:	46bd      	mov	sp, r7
    c9f6:	bd80      	pop	{r7, pc}
    c9f8:	12344321 	.word	0x12344321

0000c9fc <handle_frame_packet>:
        
// p_frame_address : Address of frame to write as referenced from the image zero
// p_last_page_erased : Last page that was erased to make room for new firmware
// ****************************************
uint8_t handle_frame_packet(svl_packet_t *packet, uint32_t *p_frame_address, uint16_t *p_last_page_erased)
{
    c9fc:	b580      	push	{r7, lr}
    c9fe:	b088      	sub	sp, #32
    ca00:	af00      	add	r7, sp, #0
    ca02:	60f8      	str	r0, [r7, #12]
    ca04:	60b9      	str	r1, [r7, #8]
    ca06:	607a      	str	r2, [r7, #4]
    // debug_printf("\t\thandling frame\n");
    uint32_t num_words = (packet->pl_len / 4);
    ca08:	68fb      	ldr	r3, [r7, #12]
    ca0a:	891b      	ldrh	r3, [r3, #8]
    ca0c:	089b      	lsrs	r3, r3, #2
    ca0e:	b29b      	uxth	r3, r3
    ca10:	61fb      	str	r3, [r7, #28]

    debug_printf("\t\tframe_address = 0x%08X, num_words = %d\n", *(p_frame_address), num_words);
    ca12:	68bb      	ldr	r3, [r7, #8]
    ca14:	681b      	ldr	r3, [r3, #0]
    ca16:	69fa      	ldr	r2, [r7, #28]
    ca18:	4619      	mov	r1, r3
    ca1a:	4837      	ldr	r0, [pc, #220]	; (caf8 <handle_frame_packet+0xfc>)
    ca1c:	f000 f88e 	bl	cb3c <debug_printf>

    // Check payload length is multiple of words
    if ((packet->pl_len % 4))
    ca20:	68fb      	ldr	r3, [r7, #12]
    ca22:	891b      	ldrh	r3, [r3, #8]
    ca24:	f003 0303 	and.w	r3, r3, #3
    ca28:	b29b      	uxth	r3, r3
    ca2a:	2b00      	cmp	r3, #0
    ca2c:	d004      	beq.n	ca38 <handle_frame_packet+0x3c>
    {
        debug_printf("Error: frame packet not integer multiple of words (4 bytes per word)\n");
    ca2e:	4833      	ldr	r0, [pc, #204]	; (cafc <handle_frame_packet+0x100>)
    ca30:	f000 f884 	bl	cb3c <debug_printf>
        return 1;
    ca34:	2301      	movs	r3, #1
    ca36:	e05b      	b.n	caf0 <handle_frame_packet+0xf4>
    }

    int32_t i32ReturnCode = 0;
    ca38:	2300      	movs	r3, #0
    ca3a:	61bb      	str	r3, [r7, #24]
    uint32_t offset_address = (*(p_frame_address) + USERCODE_OFFSET);
    ca3c:	68bb      	ldr	r3, [r7, #8]
    ca3e:	681b      	ldr	r3, [r3, #0]
    ca40:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
    ca44:	617b      	str	r3, [r7, #20]
    if ((*p_last_page_erased) < AM_HAL_FLASH_ADDR2PAGE(offset_address))
    ca46:	687b      	ldr	r3, [r7, #4]
    ca48:	881b      	ldrh	r3, [r3, #0]
    ca4a:	461a      	mov	r2, r3
    ca4c:	697b      	ldr	r3, [r7, #20]
    ca4e:	0b5b      	lsrs	r3, r3, #13
    ca50:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    ca54:	429a      	cmp	r2, r3
    ca56:	d21b      	bcs.n	ca90 <handle_frame_packet+0x94>
    { // Prevent erasing partially-filled pages
        // debug_printf("Erasing instance %d, page %d\n\r", AM_HAL_FLASH_ADDR2INST( offset_address ), AM_HAL_FLASH_ADDR2PAGE(offset_address) );

        //Erase the 8k page for this address
        i32ReturnCode = am_hal_flash_page_erase(AM_HAL_FLASH_PROGRAM_KEY, AM_HAL_FLASH_ADDR2INST(offset_address), AM_HAL_FLASH_ADDR2PAGE(offset_address));
    ca58:	697b      	ldr	r3, [r7, #20]
    ca5a:	0cdb      	lsrs	r3, r3, #19
    ca5c:	f003 0101 	and.w	r1, r3, #1
    ca60:	697b      	ldr	r3, [r7, #20]
    ca62:	0b5b      	lsrs	r3, r3, #13
    ca64:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    ca68:	461a      	mov	r2, r3
    ca6a:	4825      	ldr	r0, [pc, #148]	; (cb00 <handle_frame_packet+0x104>)
    ca6c:	f001 f940 	bl	dcf0 <am_hal_flash_page_erase>
    ca70:	61b8      	str	r0, [r7, #24]
        *(p_last_page_erased) = AM_HAL_FLASH_ADDR2PAGE(offset_address);
    ca72:	697b      	ldr	r3, [r7, #20]
    ca74:	0b5b      	lsrs	r3, r3, #13
    ca76:	b29b      	uxth	r3, r3
    ca78:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    ca7c:	b29a      	uxth	r2, r3
    ca7e:	687b      	ldr	r3, [r7, #4]
    ca80:	801a      	strh	r2, [r3, #0]

        if (i32ReturnCode)
    ca82:	69bb      	ldr	r3, [r7, #24]
    ca84:	2b00      	cmp	r3, #0
    ca86:	d003      	beq.n	ca90 <handle_frame_packet+0x94>
        {
            debug_printf("FLASH_MASS_ERASE i32ReturnCode = 0x%x.\n\r", i32ReturnCode);
    ca88:	69b9      	ldr	r1, [r7, #24]
    ca8a:	481e      	ldr	r0, [pc, #120]	; (cb04 <handle_frame_packet+0x108>)
    ca8c:	f000 f856 	bl	cb3c <debug_printf>
        }
    }

    log_debug((uint32_t)(packet->pl), 0);
    ca90:	68fb      	ldr	r3, [r7, #12]
    ca92:	685b      	ldr	r3, [r3, #4]
    ca94:	2100      	movs	r1, #0
    ca96:	4618      	mov	r0, r3
    ca98:	f7ff fb8e 	bl	c1b8 <log_debug>
    log_debug((uint32_t)(*(p_frame_address) + USERCODE_OFFSET), 1);
    ca9c:	68bb      	ldr	r3, [r7, #8]
    ca9e:	681b      	ldr	r3, [r3, #0]
    caa0:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
    caa4:	2101      	movs	r1, #1
    caa6:	4618      	mov	r0, r3
    caa8:	f7ff fb86 	bl	c1b8 <log_debug>
    log_debug(num_words, 2);
    caac:	2102      	movs	r1, #2
    caae:	69f8      	ldr	r0, [r7, #28]
    cab0:	f7ff fb82 	bl	c1b8 <log_debug>
    
    //Record the array
    //debug_printf("Recording %d words (%d bytes) to memory\n", num_words, 4 * num_words);
    i32ReturnCode = am_hal_flash_program_main(AM_HAL_FLASH_PROGRAM_KEY, (uint32_t *)packet->pl, (uint32_t *)(*(p_frame_address) + USERCODE_OFFSET), num_words);
    cab4:	68fb      	ldr	r3, [r7, #12]
    cab6:	6859      	ldr	r1, [r3, #4]
    cab8:	68bb      	ldr	r3, [r7, #8]
    caba:	681b      	ldr	r3, [r3, #0]
    cabc:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
    cac0:	461a      	mov	r2, r3
    cac2:	69fb      	ldr	r3, [r7, #28]
    cac4:	480e      	ldr	r0, [pc, #56]	; (cb00 <handle_frame_packet+0x104>)
    cac6:	f001 f917 	bl	dcf8 <am_hal_flash_program_main>
    caca:	61b8      	str	r0, [r7, #24]
    if (i32ReturnCode)
    cacc:	69bb      	ldr	r3, [r7, #24]
    cace:	2b00      	cmp	r3, #0
    cad0:	d006      	beq.n	cae0 <handle_frame_packet+0xe4>
    {
        debug_printf("FLASH_WRITE error = 0x%x.\n\r", i32ReturnCode);
    cad2:	69b9      	ldr	r1, [r7, #24]
    cad4:	480c      	ldr	r0, [pc, #48]	; (cb08 <handle_frame_packet+0x10c>)
    cad6:	f000 f831 	bl	cb3c <debug_printf>
        return i32ReturnCode;
    cada:	69bb      	ldr	r3, [r7, #24]
    cadc:	b2db      	uxtb	r3, r3
    cade:	e007      	b.n	caf0 <handle_frame_packet+0xf4>
    }
    *(p_frame_address) += num_words * 4;
    cae0:	68bb      	ldr	r3, [r7, #8]
    cae2:	681a      	ldr	r2, [r3, #0]
    cae4:	69fb      	ldr	r3, [r7, #28]
    cae6:	009b      	lsls	r3, r3, #2
    cae8:	441a      	add	r2, r3
    caea:	68bb      	ldr	r3, [r7, #8]
    caec:	601a      	str	r2, [r3, #0]

    // debug_printf("Array recorded to flash\n");
    return 0;
    caee:	2300      	movs	r3, #0
}
    caf0:	4618      	mov	r0, r3
    caf2:	3720      	adds	r7, #32
    caf4:	46bd      	mov	sp, r7
    caf6:	bd80      	pop	{r7, pc}
    caf8:	0000ef98 	.word	0x0000ef98
    cafc:	0000efc4 	.word	0x0000efc4
    cb00:	12344321 	.word	0x12344321
    cb04:	0000f00c 	.word	0x0000f00c
    cb08:	0000f038 	.word	0x0000f038

0000cb0c <app_start>:
//
// Jump to the application
//
// ****************************************
void app_start(void)
{
    cb0c:	b580      	push	{r7, lr}
    cb0e:	b082      	sub	sp, #8
    cb10:	af00      	add	r7, sp, #0
    // #endif // DEBUG_PRINT_APP
    // #endif // DEBUG

    
    
    void *entryPoint = (void *)(*((uint32_t *)(USERCODE_OFFSET + 4)));
    cb12:	4b08      	ldr	r3, [pc, #32]	; (cb34 <app_start+0x28>)
    cb14:	681b      	ldr	r3, [r3, #0]
    cb16:	607b      	str	r3, [r7, #4]
    debug_printf("\nJump to App at 0x%08X\n\n", (uint32_t)entryPoint);
    cb18:	687b      	ldr	r3, [r7, #4]
    cb1a:	4619      	mov	r1, r3
    cb1c:	4806      	ldr	r0, [pc, #24]	; (cb38 <app_start+0x2c>)
    cb1e:	f000 f80d 	bl	cb3c <debug_printf>
    am_util_delay_ms(10); // Wait for prints to complete
    cb22:	200a      	movs	r0, #10
    cb24:	f000 f888 	bl	cc38 <am_util_delay_ms>
    unsetup();            // Undoes configuration to provide users with a clean slate
    cb28:	f7ff fc74 	bl	c414 <unsetup>
    goto *entryPoint;     // Jump to start of user code
    cb2c:	687b      	ldr	r3, [r7, #4]
    cb2e:	f043 0301 	orr.w	r3, r3, #1
    cb32:	4718      	bx	r3
    cb34:	00010004 	.word	0x00010004
    cb38:	0000f054 	.word	0x0000f054

0000cb3c <debug_printf>:
//
// Debug printf function
//
// ****************************************
void debug_printf(char *fmt, ...)
{
    cb3c:	b40f      	push	{r0, r1, r2, r3}
    cb3e:	b480      	push	{r7}
    cb40:	af00      	add	r7, sp, #0
    vsnprintf(debug_buffer, DEBUG_UART_BUF_LEN, (const char *)fmt, args);
    va_end(args);

    svl_uart_print(hUART_debug, debug_buffer);
#endif //DEBUG
}
    cb42:	bf00      	nop
    cb44:	46bd      	mov	sp, r7
    cb46:	f85d 7b04 	ldr.w	r7, [sp], #4
    cb4a:	b004      	add	sp, #16
    cb4c:	4770      	bx	lr
	...

0000cb50 <am_uart_isr>:
//
// UART interrupt handlers
//
//*****************************************************************************
void am_uart_isr(void)
{
    cb50:	b580      	push	{r7, lr}
    cb52:	b084      	sub	sp, #16
    cb54:	af00      	add	r7, sp, #0
    // Service the FIFOs as necessary, and clear the interrupts.
#if BL_UART_INST == 0
    uint32_t ui32Status, ui32Idle;
    am_hal_uart_interrupt_status_get(hUART_bl, &ui32Status, true);
    cb56:	4b18      	ldr	r3, [pc, #96]	; (cbb8 <am_uart_isr+0x68>)
    cb58:	681b      	ldr	r3, [r3, #0]
    cb5a:	f107 010c 	add.w	r1, r7, #12
    cb5e:	2201      	movs	r2, #1
    cb60:	4618      	mov	r0, r3
    cb62:	f002 f85f 	bl	ec24 <am_hal_uart_interrupt_status_get>
    am_hal_uart_interrupt_clear(hUART_bl, ui32Status);
    cb66:	4b14      	ldr	r3, [pc, #80]	; (cbb8 <am_uart_isr+0x68>)
    cb68:	681b      	ldr	r3, [r3, #0]
    cb6a:	68fa      	ldr	r2, [r7, #12]
    cb6c:	4611      	mov	r1, r2
    cb6e:	4618      	mov	r0, r3
    cb70:	f002 f846 	bl	ec00 <am_hal_uart_interrupt_clear>
    am_hal_uart_interrupt_service(hUART_bl, ui32Status, &ui32Idle);
    cb74:	4b10      	ldr	r3, [pc, #64]	; (cbb8 <am_uart_isr+0x68>)
    cb76:	681b      	ldr	r3, [r3, #0]
    cb78:	68f9      	ldr	r1, [r7, #12]
    cb7a:	f107 0208 	add.w	r2, r7, #8
    cb7e:	4618      	mov	r0, r3
    cb80:	f001 ff94 	bl	eaac <am_hal_uart_interrupt_service>
    if (ui32Status & AM_HAL_UART_INT_RX)
    cb84:	68fb      	ldr	r3, [r7, #12]
    cb86:	f003 0310 	and.w	r3, r3, #16
    cb8a:	2b00      	cmp	r3, #0
    cb8c:	d010      	beq.n	cbb0 <am_uart_isr+0x60>
    {
        uint8_t c = 0x00;
    cb8e:	2300      	movs	r3, #0
    cb90:	71fb      	strb	r3, [r7, #7]
        if (svl_uart_read(hUART_bl, (char *)&c, 1) != 0)
    cb92:	4b09      	ldr	r3, [pc, #36]	; (cbb8 <am_uart_isr+0x68>)
    cb94:	681b      	ldr	r3, [r3, #0]
    cb96:	1df9      	adds	r1, r7, #7
    cb98:	2201      	movs	r2, #1
    cb9a:	4618      	mov	r0, r3
    cb9c:	f000 fc4d 	bl	d43a <svl_uart_read>
    cba0:	4603      	mov	r3, r0
    cba2:	2b00      	cmp	r3, #0
    cba4:	d004      	beq.n	cbb0 <am_uart_isr+0x60>
        {
            art_svl_ringbuf_write(&bl_rx_ringbuf, c);
    cba6:	79fb      	ldrb	r3, [r7, #7]
    cba8:	4619      	mov	r1, r3
    cbaa:	4804      	ldr	r0, [pc, #16]	; (cbbc <am_uart_isr+0x6c>)
    cbac:	f000 fbe7 	bl	d37e <art_svl_ringbuf_write>
    am_hal_uart_interrupt_status_get(hUART_debug, &ui32Status, true);
    am_hal_uart_interrupt_clear(hUART_debug, ui32Status);
    am_hal_uart_interrupt_service(hUART_debug, ui32Status, &ui32Idle);
#endif // DEBUG
#endif // BL_UART_INST == 0
}
    cbb0:	bf00      	nop
    cbb2:	3710      	adds	r7, #16
    cbb4:	46bd      	mov	sp, r7
    cbb6:	bd80      	pop	{r7, pc}
    cbb8:	10000220 	.word	0x10000220
    cbbc:	10000210 	.word	0x10000210

0000cbc0 <am_uart1_isr>:

void am_uart1_isr(void)
{
    cbc0:	b480      	push	{r7}
    cbc2:	af00      	add	r7, sp, #0
    am_hal_uart_interrupt_status_get(hUART_debug, &ui32Status, true);
    am_hal_uart_interrupt_clear(hUART_debug, ui32Status);
    am_hal_uart_interrupt_service(hUART_debug, ui32Status, &ui32Idle);
#endif // DEBUG
#endif // BL_UART_INST == 0
}
    cbc4:	bf00      	nop
    cbc6:	46bd      	mov	sp, r7
    cbc8:	f85d 7b04 	ldr.w	r7, [sp], #4
    cbcc:	4770      	bx	lr
	...

0000cbd0 <am_gpio_isr>:
//
// GPIO interrupt handler
//
//*****************************************************************************
void am_gpio_isr(void)
{
    cbd0:	b580      	push	{r7, lr}
    cbd2:	af00      	add	r7, sp, #0
    am_hal_gpio_interrupt_clear(AM_HAL_GPIO_BIT(BL_RX_PAD));
    cbd4:	f04f 0000 	mov.w	r0, #0
    cbd8:	f44f 3100 	mov.w	r1, #131072	; 0x20000
    cbdc:	f001 fa94 	bl	e108 <am_hal_gpio_interrupt_clear>
    if (bl_baud_ticks_index < BL_BAUD_SAMPLES)
    cbe0:	4b0a      	ldr	r3, [pc, #40]	; (cc0c <am_gpio_isr+0x3c>)
    cbe2:	781b      	ldrb	r3, [r3, #0]
    cbe4:	b2db      	uxtb	r3, r3
    cbe6:	2b04      	cmp	r3, #4
    cbe8:	d80d      	bhi.n	cc06 <am_gpio_isr+0x36>
    {
        bl_baud_ticks[bl_baud_ticks_index++] = CTIMER->STTMR;
    cbea:	4a09      	ldr	r2, [pc, #36]	; (cc10 <am_gpio_isr+0x40>)
    cbec:	4b07      	ldr	r3, [pc, #28]	; (cc0c <am_gpio_isr+0x3c>)
    cbee:	781b      	ldrb	r3, [r3, #0]
    cbf0:	b2db      	uxtb	r3, r3
    cbf2:	1c59      	adds	r1, r3, #1
    cbf4:	b2c8      	uxtb	r0, r1
    cbf6:	4905      	ldr	r1, [pc, #20]	; (cc0c <am_gpio_isr+0x3c>)
    cbf8:	7008      	strb	r0, [r1, #0]
    cbfa:	4619      	mov	r1, r3
    cbfc:	f8d2 3144 	ldr.w	r3, [r2, #324]	; 0x144
    cc00:	4a04      	ldr	r2, [pc, #16]	; (cc14 <am_gpio_isr+0x44>)
    cc02:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
    }
}
    cc06:	bf00      	nop
    cc08:	bd80      	pop	{r7, pc}
    cc0a:	bf00      	nop
    cc0c:	10000224 	.word	0x10000224
    cc10:	40008000 	.word	0x40008000
    cc14:	10000228 	.word	0x10000228

0000cc18 <am_stimer_isr>:
//
// STimer interrupt handler
//
//*****************************************************************************
void am_stimer_isr(void)
{
    cc18:	b580      	push	{r7, lr}
    cc1a:	af00      	add	r7, sp, #0
    am_hal_stimer_int_clear(AM_HAL_STIMER_INT_OVERFLOW);
    cc1c:	f44f 7080 	mov.w	r0, #256	; 0x100
    cc20:	f001 fb5e 	bl	e2e0 <am_hal_stimer_int_clear>
    ap3_stimer_overflows += 1;
    cc24:	4b03      	ldr	r3, [pc, #12]	; (cc34 <am_stimer_isr+0x1c>)
    cc26:	681b      	ldr	r3, [r3, #0]
    cc28:	3301      	adds	r3, #1
    cc2a:	4a02      	ldr	r2, [pc, #8]	; (cc34 <am_stimer_isr+0x1c>)
    cc2c:	6013      	str	r3, [r2, #0]
    // At the fastest rate (3MHz) the 64 bits of the stimer
    // along with this overflow counter can keep track of
    // the time for ~ 195,000 years without wrapping to 0
}
    cc2e:	bf00      	nop
    cc30:	bd80      	pop	{r7, pc}
    cc32:	bf00      	nop
    cc34:	10000a5c 	.word	0x10000a5c

0000cc38 <am_util_delay_ms>:
//! @returns None
//
//*****************************************************************************
void
am_util_delay_ms(uint32_t ui32MilliSeconds)
{
    cc38:	b580      	push	{r7, lr}
    cc3a:	b088      	sub	sp, #32
    cc3c:	af00      	add	r7, sp, #0
    cc3e:	6078      	str	r0, [r7, #4]
    uint32_t ui32Loops, ui32HFRC;
#if AM_APOLLO3_CLKGEN
    am_hal_clkgen_status_t sClkgenStatus;
    am_hal_clkgen_status_get(&sClkgenStatus);
    cc40:	f107 030c 	add.w	r3, r7, #12
    cc44:	4618      	mov	r0, r3
    cc46:	f001 f835 	bl	dcb4 <am_hal_clkgen_status_get>
    ui32HFRC = sClkgenStatus.ui32SysclkFreq;
    cc4a:	68fb      	ldr	r3, [r7, #12]
    cc4c:	61fb      	str	r3, [r7, #28]
#else // AM_APOLLO3_CLKGEN
    ui32HFRC = am_hal_clkgen_sysclk_get();
#endif // AM_APOLLO3_CLKGEN
    ui32Loops = ui32MilliSeconds * (ui32HFRC / 3000);
    cc4e:	69fb      	ldr	r3, [r7, #28]
    cc50:	4a07      	ldr	r2, [pc, #28]	; (cc70 <am_util_delay_ms+0x38>)
    cc52:	fba2 2303 	umull	r2, r3, r2, r3
    cc56:	099a      	lsrs	r2, r3, #6
    cc58:	687b      	ldr	r3, [r7, #4]
    cc5a:	fb02 f303 	mul.w	r3, r2, r3
    cc5e:	61bb      	str	r3, [r7, #24]

    //
    // Call the BOOTROM cycle delay function
    //
    am_hal_flash_delay(ui32Loops);
    cc60:	69b8      	ldr	r0, [r7, #24]
    cc62:	f001 f877 	bl	dd54 <am_hal_flash_delay>
}
    cc66:	bf00      	nop
    cc68:	3720      	adds	r7, #32
    cc6a:	46bd      	mov	sp, r7
    cc6c:	bd80      	pop	{r7, pc}
    cc6e:	bf00      	nop
    cc70:	057619f1 	.word	0x057619f1

0000cc74 <am_util_delay_us>:
//! @returns None
//
//*****************************************************************************
void
am_util_delay_us(uint32_t ui32MicroSeconds)
{
    cc74:	b580      	push	{r7, lr}
    cc76:	b088      	sub	sp, #32
    cc78:	af00      	add	r7, sp, #0
    cc7a:	6078      	str	r0, [r7, #4]
    uint32_t ui32Loops, ui32HFRC;

#if AM_APOLLO3_CLKGEN
    am_hal_clkgen_status_t sClkgenStatus;
    am_hal_clkgen_status_get(&sClkgenStatus);
    cc7c:	f107 030c 	add.w	r3, r7, #12
    cc80:	4618      	mov	r0, r3
    cc82:	f001 f817 	bl	dcb4 <am_hal_clkgen_status_get>
    ui32HFRC = sClkgenStatus.ui32SysclkFreq;
    cc86:	68fb      	ldr	r3, [r7, #12]
    cc88:	61fb      	str	r3, [r7, #28]
#else // AM_APOLLO3_CLKGEN
    ui32HFRC = am_hal_clkgen_sysclk_get();
#endif // AM_APOLLO3_CLKGEN
    ui32Loops = ui32MicroSeconds * (ui32HFRC / 3000000);
    cc8a:	69fb      	ldr	r3, [r7, #28]
    cc8c:	4a07      	ldr	r2, [pc, #28]	; (ccac <am_util_delay_us+0x38>)
    cc8e:	fba2 2303 	umull	r2, r3, r2, r3
    cc92:	0c9a      	lsrs	r2, r3, #18
    cc94:	687b      	ldr	r3, [r7, #4]
    cc96:	fb02 f303 	mul.w	r3, r2, r3
    cc9a:	61bb      	str	r3, [r7, #24]

    //
    // Call the BOOTROM cycle delay function
    //
    am_hal_flash_delay(ui32Loops);
    cc9c:	69b8      	ldr	r0, [r7, #24]
    cc9e:	f001 f859 	bl	dd54 <am_hal_flash_delay>
}
    cca2:	bf00      	nop
    cca4:	3720      	adds	r7, #32
    cca6:	46bd      	mov	sp, r7
    cca8:	bd80      	pop	{r7, pc}
    ccaa:	bf00      	nop
    ccac:	165e9f81 	.word	0x165e9f81

0000ccb0 <Reset_Handler>:
Reset_Handler(void)
{
    //
    // Set the vector table pointer.
    //
    __asm("    ldr    r0, =0xE000ED08\n"
    ccb0:	4818      	ldr	r0, [pc, #96]	; (cd14 <zero_loop+0x2c>)
    ccb2:	4919      	ldr	r1, [pc, #100]	; (cd18 <zero_loop+0x30>)
    ccb4:	6001      	str	r1, [r0, #0]
          "    str    r1, [r0]");

    //
    // Set the stack pointer.
    //
    __asm("    ldr    sp, [r1]");
    ccb6:	f8d1 d000 	ldr.w	sp, [r1]

#ifndef NOFPU
    //
    // Enable the FPU.
    //
    __asm("ldr  r0, =0xE000ED88\n"
    ccba:	4818      	ldr	r0, [pc, #96]	; (cd1c <zero_loop+0x34>)
    ccbc:	6801      	ldr	r1, [r0, #0]
    ccbe:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    ccc2:	6001      	str	r1, [r0, #0]
    ccc4:	f3bf 8f4f 	dsb	sy
    ccc8:	f3bf 8f6f 	isb	sy
          "isb\n");
#endif
    //
    // Copy the data segment initializers from flash to SRAM.
    //
    __asm("    ldr     r0, =_init_data\n"
    cccc:	4814      	ldr	r0, [pc, #80]	; (cd20 <zero_loop+0x38>)
    ccce:	4915      	ldr	r1, [pc, #84]	; (cd24 <zero_loop+0x3c>)
    ccd0:	4a15      	ldr	r2, [pc, #84]	; (cd28 <zero_loop+0x40>)

0000ccd2 <copy_loop>:
    ccd2:	4291      	cmp	r1, r2
    ccd4:	d004      	beq.n	cce0 <copy_end>
    ccd6:	f850 3b04 	ldr.w	r3, [r0], #4
    ccda:	f841 3b04 	str.w	r3, [r1], #4
    ccde:	e7f8      	b.n	ccd2 <copy_loop>

0000cce0 <copy_end>:
          "copy_end:\n");
    
    //
    // Zero fill the bss segment.
    //
    __asm("    ldr     r0, =_sbss\n"
    cce0:	4812      	ldr	r0, [pc, #72]	; (cd2c <zero_loop+0x44>)
    cce2:	4913      	ldr	r1, [pc, #76]	; (cd30 <zero_loop+0x48>)
    cce4:	f04f 0200 	mov.w	r2, #0

0000cce8 <zero_loop>:
    cce8:	4288      	cmp	r0, r1
    ccea:	bfb8      	it	lt
    ccec:	f840 2b04 	strlt.w	r2, [r0], #4
    ccf0:	dbfa      	blt.n	cce8 <zero_loop>
    //
    // Call Global Static Constructors for C++ support
    //
    extern void (*__init_array_start)(void);    // symbols must be
    extern void (*__init_array_end)(void);      // provided by linker
    for (void (**p)() = &__init_array_start; p < &__init_array_end; ++p) {  
    ccf2:	4c06      	ldr	r4, [pc, #24]	; (cd0c <zero_loop+0x24>)
    ccf4:	e002      	b.n	ccfc <zero_loop+0x14>
        (*p)();                                 // Call each function in the list
    ccf6:	6823      	ldr	r3, [r4, #0]
    ccf8:	4798      	blx	r3
    for (void (**p)() = &__init_array_start; p < &__init_array_end; ++p) {  
    ccfa:	3404      	adds	r4, #4
    ccfc:	4b04      	ldr	r3, [pc, #16]	; (cd10 <zero_loop+0x28>)
    ccfe:	429c      	cmp	r4, r3
    cd00:	d3f9      	bcc.n	ccf6 <zero_loop+0xe>
    }

    //
    // Call the application's entry point.
    //
    main();
    cd02:	f7ff fa73 	bl	c1ec <main>

    //
    // If main returns then execute a break point instruction
    //
    __asm("    bkpt     ");
    cd06:	be00      	bkpt	0x0000
}
    cd08:	bf00      	nop
    cd0a:	bf00      	nop
    cd0c:	0000ed6c 	.word	0x0000ed6c
    cd10:	0000ed6c 	.word	0x0000ed6c
    cd14:	e000ed08 	.word	0xe000ed08
    cd18:	0000c000 	.word	0x0000c000
    cd1c:	e000ed88 	.word	0xe000ed88
    cd20:	0000f2ac 	.word	0x0000f2ac
    cd24:	10000000 	.word	0x10000000
    cd28:	10000210 	.word	0x10000210
    cd2c:	10000210 	.word	0x10000210
    cd30:	10000b3c 	.word	0x10000b3c

0000cd34 <NMI_Handler>:
// by a debugger.
//
//*****************************************************************************
void
NMI_Handler(void)
{
    cd34:	b480      	push	{r7}
    cd36:	af00      	add	r7, sp, #0
    //
    // Go into an infinite loop.
    //
    while(1)
    cd38:	bf00      	nop
    cd3a:	e7fd      	b.n	cd38 <NMI_Handler+0x4>

0000cd3c <BusFault_Handler>:
// for examination by a debugger.
//
//*****************************************************************************
void
HardFault_Handler(void)
{
    cd3c:	b480      	push	{r7}
    cd3e:	af00      	add	r7, sp, #0
    //
    // Go into an infinite loop.
    //
    while(1)
    cd40:	bf00      	nop
    cd42:	e7fd      	b.n	cd40 <BusFault_Handler+0x4>

0000cd44 <DebugMon_Handler>:
// for examination by a debugger.
//
//*****************************************************************************
void
am_default_isr(void)
{
    cd44:	b480      	push	{r7}
    cd46:	af00      	add	r7, sp, #0
    //
    // Go into an infinite loop.
    //
    while(1)
    cd48:	bf00      	nop
    cd4a:	e7fd      	b.n	cd48 <DebugMon_Handler+0x4>

0000cd4c <svl_packet_link_read_fn>:
    cd4c:	b480      	push	{r7}
    cd4e:	b083      	sub	sp, #12
    cd50:	af00      	add	r7, sp, #0
    cd52:	6078      	str	r0, [r7, #4]
    cd54:	6039      	str	r1, [r7, #0]
    cd56:	4a06      	ldr	r2, [pc, #24]	; (cd70 <svl_packet_link_read_fn+0x24>)
    cd58:	683b      	ldr	r3, [r7, #0]
    cd5a:	6013      	str	r3, [r2, #0]
    cd5c:	4a05      	ldr	r2, [pc, #20]	; (cd74 <svl_packet_link_read_fn+0x28>)
    cd5e:	687b      	ldr	r3, [r7, #4]
    cd60:	6013      	str	r3, [r2, #0]
    cd62:	bf00      	nop
    cd64:	370c      	adds	r7, #12
    cd66:	46bd      	mov	sp, r7
    cd68:	f85d 7b04 	ldr.w	r7, [sp], #4
    cd6c:	4770      	bx	lr
    cd6e:	bf00      	nop
    cd70:	10000a3c 	.word	0x10000a3c
    cd74:	10000a48 	.word	0x10000a48

0000cd78 <svl_packet_link_write_fn>:
    cd78:	b480      	push	{r7}
    cd7a:	b083      	sub	sp, #12
    cd7c:	af00      	add	r7, sp, #0
    cd7e:	6078      	str	r0, [r7, #4]
    cd80:	6039      	str	r1, [r7, #0]
    cd82:	4a06      	ldr	r2, [pc, #24]	; (cd9c <svl_packet_link_write_fn+0x24>)
    cd84:	683b      	ldr	r3, [r7, #0]
    cd86:	6013      	str	r3, [r2, #0]
    cd88:	4a05      	ldr	r2, [pc, #20]	; (cda0 <svl_packet_link_write_fn+0x28>)
    cd8a:	687b      	ldr	r3, [r7, #4]
    cd8c:	6013      	str	r3, [r2, #0]
    cd8e:	bf00      	nop
    cd90:	370c      	adds	r7, #12
    cd92:	46bd      	mov	sp, r7
    cd94:	f85d 7b04 	ldr.w	r7, [sp], #4
    cd98:	4770      	bx	lr
    cd9a:	bf00      	nop
    cd9c:	10000a40 	.word	0x10000a40
    cda0:	10000a4c 	.word	0x10000a4c

0000cda4 <svl_packet_link_avail_fn>:
    cda4:	b480      	push	{r7}
    cda6:	b083      	sub	sp, #12
    cda8:	af00      	add	r7, sp, #0
    cdaa:	6078      	str	r0, [r7, #4]
    cdac:	6039      	str	r1, [r7, #0]
    cdae:	4a06      	ldr	r2, [pc, #24]	; (cdc8 <svl_packet_link_avail_fn+0x24>)
    cdb0:	683b      	ldr	r3, [r7, #0]
    cdb2:	6013      	str	r3, [r2, #0]
    cdb4:	4a05      	ldr	r2, [pc, #20]	; (cdcc <svl_packet_link_avail_fn+0x28>)
    cdb6:	687b      	ldr	r3, [r7, #4]
    cdb8:	6013      	str	r3, [r2, #0]
    cdba:	bf00      	nop
    cdbc:	370c      	adds	r7, #12
    cdbe:	46bd      	mov	sp, r7
    cdc0:	f85d 7b04 	ldr.w	r7, [sp], #4
    cdc4:	4770      	bx	lr
    cdc6:	bf00      	nop
    cdc8:	10000a44 	.word	0x10000a44
    cdcc:	10000a50 	.word	0x10000a50

0000cdd0 <svl_packet_link_millis_fn>:
    cdd0:	b480      	push	{r7}
    cdd2:	b083      	sub	sp, #12
    cdd4:	af00      	add	r7, sp, #0
    cdd6:	6078      	str	r0, [r7, #4]
    cdd8:	4a04      	ldr	r2, [pc, #16]	; (cdec <svl_packet_link_millis_fn+0x1c>)
    cdda:	687b      	ldr	r3, [r7, #4]
    cddc:	6013      	str	r3, [r2, #0]
    cdde:	bf00      	nop
    cde0:	370c      	adds	r7, #12
    cde2:	46bd      	mov	sp, r7
    cde4:	f85d 7b04 	ldr.w	r7, [sp], #4
    cde8:	4770      	bx	lr
    cdea:	bf00      	nop
    cdec:	10000a54 	.word	0x10000a54

0000cdf0 <svl_packet_send>:
    cdf0:	b580      	push	{r7, lr}
    cdf2:	b092      	sub	sp, #72	; 0x48
    cdf4:	af00      	add	r7, sp, #0
    cdf6:	6078      	str	r0, [r7, #4]
    cdf8:	4b74      	ldr	r3, [pc, #464]	; (cfcc <svl_packet_send+0x1dc>)
    cdfa:	2200      	movs	r2, #0
    cdfc:	701a      	strb	r2, [r3, #0]
    cdfe:	4b74      	ldr	r3, [pc, #464]	; (cfd0 <svl_packet_send+0x1e0>)
    ce00:	2200      	movs	r2, #0
    ce02:	701a      	strb	r2, [r3, #0]
    ce04:	687b      	ldr	r3, [r7, #4]
    ce06:	781b      	ldrb	r3, [r3, #0]
    ce08:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
    ce0c:	4b70      	ldr	r3, [pc, #448]	; (cfd0 <svl_packet_send+0x1e0>)
    ce0e:	781a      	ldrb	r2, [r3, #0]
    ce10:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
    ce14:	4053      	eors	r3, r2
    ce16:	b2db      	uxtb	r3, r3
    ce18:	87fb      	strh	r3, [r7, #62]	; 0x3e
    ce1a:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
    ce1c:	4a6d      	ldr	r2, [pc, #436]	; (cfd4 <svl_packet_send+0x1e4>)
    ce1e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
    ce22:	0a1b      	lsrs	r3, r3, #8
    ce24:	b29b      	uxth	r3, r3
    ce26:	b2da      	uxtb	r2, r3
    ce28:	4b68      	ldr	r3, [pc, #416]	; (cfcc <svl_packet_send+0x1dc>)
    ce2a:	781b      	ldrb	r3, [r3, #0]
    ce2c:	4053      	eors	r3, r2
    ce2e:	b2da      	uxtb	r2, r3
    ce30:	4b67      	ldr	r3, [pc, #412]	; (cfd0 <svl_packet_send+0x1e0>)
    ce32:	701a      	strb	r2, [r3, #0]
    ce34:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
    ce36:	4a67      	ldr	r2, [pc, #412]	; (cfd4 <svl_packet_send+0x1e4>)
    ce38:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
    ce3c:	b2da      	uxtb	r2, r3
    ce3e:	4b63      	ldr	r3, [pc, #396]	; (cfcc <svl_packet_send+0x1dc>)
    ce40:	701a      	strb	r2, [r3, #0]
    ce42:	bf00      	nop
    ce44:	2300      	movs	r3, #0
    ce46:	647b      	str	r3, [r7, #68]	; 0x44
    ce48:	e025      	b.n	ce96 <svl_packet_send+0xa6>
    ce4a:	687b      	ldr	r3, [r7, #4]
    ce4c:	685a      	ldr	r2, [r3, #4]
    ce4e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    ce50:	4413      	add	r3, r2
    ce52:	781b      	ldrb	r3, [r3, #0]
    ce54:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
    ce58:	4b5d      	ldr	r3, [pc, #372]	; (cfd0 <svl_packet_send+0x1e0>)
    ce5a:	781a      	ldrb	r2, [r3, #0]
    ce5c:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
    ce60:	4053      	eors	r3, r2
    ce62:	b2db      	uxtb	r3, r3
    ce64:	877b      	strh	r3, [r7, #58]	; 0x3a
    ce66:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
    ce68:	4a5a      	ldr	r2, [pc, #360]	; (cfd4 <svl_packet_send+0x1e4>)
    ce6a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
    ce6e:	0a1b      	lsrs	r3, r3, #8
    ce70:	b29b      	uxth	r3, r3
    ce72:	b2da      	uxtb	r2, r3
    ce74:	4b55      	ldr	r3, [pc, #340]	; (cfcc <svl_packet_send+0x1dc>)
    ce76:	781b      	ldrb	r3, [r3, #0]
    ce78:	4053      	eors	r3, r2
    ce7a:	b2da      	uxtb	r2, r3
    ce7c:	4b54      	ldr	r3, [pc, #336]	; (cfd0 <svl_packet_send+0x1e0>)
    ce7e:	701a      	strb	r2, [r3, #0]
    ce80:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
    ce82:	4a54      	ldr	r2, [pc, #336]	; (cfd4 <svl_packet_send+0x1e4>)
    ce84:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
    ce88:	b2da      	uxtb	r2, r3
    ce8a:	4b50      	ldr	r3, [pc, #320]	; (cfcc <svl_packet_send+0x1dc>)
    ce8c:	701a      	strb	r2, [r3, #0]
    ce8e:	bf00      	nop
    ce90:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    ce92:	3301      	adds	r3, #1
    ce94:	647b      	str	r3, [r7, #68]	; 0x44
    ce96:	687b      	ldr	r3, [r7, #4]
    ce98:	891b      	ldrh	r3, [r3, #8]
    ce9a:	461a      	mov	r2, r3
    ce9c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    ce9e:	4293      	cmp	r3, r2
    cea0:	d3d3      	bcc.n	ce4a <svl_packet_send+0x5a>
    cea2:	687b      	ldr	r3, [r7, #4]
    cea4:	891b      	ldrh	r3, [r3, #8]
    cea6:	3303      	adds	r3, #3
    cea8:	121b      	asrs	r3, r3, #8
    ceaa:	b2db      	uxtb	r3, r3
    ceac:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    ceb0:	2300      	movs	r3, #0
    ceb2:	627b      	str	r3, [r7, #36]	; 0x24
    ceb4:	4b48      	ldr	r3, [pc, #288]	; (cfd8 <svl_packet_send+0x1e8>)
    ceb6:	681b      	ldr	r3, [r3, #0]
    ceb8:	2b00      	cmp	r3, #0
    ceba:	d008      	beq.n	cece <svl_packet_send+0xde>
    cebc:	4b46      	ldr	r3, [pc, #280]	; (cfd8 <svl_packet_send+0x1e8>)
    cebe:	681b      	ldr	r3, [r3, #0]
    cec0:	4a46      	ldr	r2, [pc, #280]	; (cfdc <svl_packet_send+0x1ec>)
    cec2:	6812      	ldr	r2, [r2, #0]
    cec4:	f897 102b 	ldrb.w	r1, [r7, #43]	; 0x2b
    cec8:	4610      	mov	r0, r2
    ceca:	4798      	blx	r3
    cecc:	6278      	str	r0, [r7, #36]	; 0x24
    cece:	687b      	ldr	r3, [r7, #4]
    ced0:	891b      	ldrh	r3, [r3, #8]
    ced2:	b2db      	uxtb	r3, r3
    ced4:	3303      	adds	r3, #3
    ced6:	b2db      	uxtb	r3, r3
    ced8:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
    cedc:	2300      	movs	r3, #0
    cede:	62fb      	str	r3, [r7, #44]	; 0x2c
    cee0:	4b3d      	ldr	r3, [pc, #244]	; (cfd8 <svl_packet_send+0x1e8>)
    cee2:	681b      	ldr	r3, [r3, #0]
    cee4:	2b00      	cmp	r3, #0
    cee6:	d008      	beq.n	cefa <svl_packet_send+0x10a>
    cee8:	4b3b      	ldr	r3, [pc, #236]	; (cfd8 <svl_packet_send+0x1e8>)
    ceea:	681b      	ldr	r3, [r3, #0]
    ceec:	4a3b      	ldr	r2, [pc, #236]	; (cfdc <svl_packet_send+0x1ec>)
    ceee:	6812      	ldr	r2, [r2, #0]
    cef0:	f897 1033 	ldrb.w	r1, [r7, #51]	; 0x33
    cef4:	4610      	mov	r0, r2
    cef6:	4798      	blx	r3
    cef8:	62f8      	str	r0, [r7, #44]	; 0x2c
    cefa:	687b      	ldr	r3, [r7, #4]
    cefc:	781b      	ldrb	r3, [r3, #0]
    cefe:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
    cf02:	2300      	movs	r3, #0
    cf04:	637b      	str	r3, [r7, #52]	; 0x34
    cf06:	4b34      	ldr	r3, [pc, #208]	; (cfd8 <svl_packet_send+0x1e8>)
    cf08:	681b      	ldr	r3, [r3, #0]
    cf0a:	2b00      	cmp	r3, #0
    cf0c:	d008      	beq.n	cf20 <svl_packet_send+0x130>
    cf0e:	4b32      	ldr	r3, [pc, #200]	; (cfd8 <svl_packet_send+0x1e8>)
    cf10:	681b      	ldr	r3, [r3, #0]
    cf12:	4a32      	ldr	r2, [pc, #200]	; (cfdc <svl_packet_send+0x1ec>)
    cf14:	6812      	ldr	r2, [r2, #0]
    cf16:	f897 1039 	ldrb.w	r1, [r7, #57]	; 0x39
    cf1a:	4610      	mov	r0, r2
    cf1c:	4798      	blx	r3
    cf1e:	6378      	str	r0, [r7, #52]	; 0x34
    cf20:	687b      	ldr	r3, [r7, #4]
    cf22:	685b      	ldr	r3, [r3, #4]
    cf24:	2b00      	cmp	r3, #0
    cf26:	d02a      	beq.n	cf7e <svl_packet_send+0x18e>
    cf28:	687b      	ldr	r3, [r7, #4]
    cf2a:	891b      	ldrh	r3, [r3, #8]
    cf2c:	2b00      	cmp	r3, #0
    cf2e:	d026      	beq.n	cf7e <svl_packet_send+0x18e>
    cf30:	2300      	movs	r3, #0
    cf32:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
    cf36:	e01c      	b.n	cf72 <svl_packet_send+0x182>
    cf38:	687b      	ldr	r3, [r7, #4]
    cf3a:	685a      	ldr	r2, [r3, #4]
    cf3c:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
    cf40:	4413      	add	r3, r2
    cf42:	781b      	ldrb	r3, [r3, #0]
    cf44:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
    cf48:	2300      	movs	r3, #0
    cf4a:	61fb      	str	r3, [r7, #28]
    cf4c:	4b22      	ldr	r3, [pc, #136]	; (cfd8 <svl_packet_send+0x1e8>)
    cf4e:	681b      	ldr	r3, [r3, #0]
    cf50:	2b00      	cmp	r3, #0
    cf52:	d008      	beq.n	cf66 <svl_packet_send+0x176>
    cf54:	4b20      	ldr	r3, [pc, #128]	; (cfd8 <svl_packet_send+0x1e8>)
    cf56:	681b      	ldr	r3, [r3, #0]
    cf58:	4a20      	ldr	r2, [pc, #128]	; (cfdc <svl_packet_send+0x1ec>)
    cf5a:	6812      	ldr	r2, [r2, #0]
    cf5c:	f897 1023 	ldrb.w	r1, [r7, #35]	; 0x23
    cf60:	4610      	mov	r0, r2
    cf62:	4798      	blx	r3
    cf64:	61f8      	str	r0, [r7, #28]
    cf66:	bf00      	nop
    cf68:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
    cf6c:	3301      	adds	r3, #1
    cf6e:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
    cf72:	687b      	ldr	r3, [r7, #4]
    cf74:	891b      	ldrh	r3, [r3, #8]
    cf76:	f8b7 2042 	ldrh.w	r2, [r7, #66]	; 0x42
    cf7a:	429a      	cmp	r2, r3
    cf7c:	d3dc      	bcc.n	cf38 <svl_packet_send+0x148>
    cf7e:	4b14      	ldr	r3, [pc, #80]	; (cfd0 <svl_packet_send+0x1e0>)
    cf80:	781b      	ldrb	r3, [r3, #0]
    cf82:	74fb      	strb	r3, [r7, #19]
    cf84:	2300      	movs	r3, #0
    cf86:	60fb      	str	r3, [r7, #12]
    cf88:	4b13      	ldr	r3, [pc, #76]	; (cfd8 <svl_packet_send+0x1e8>)
    cf8a:	681b      	ldr	r3, [r3, #0]
    cf8c:	2b00      	cmp	r3, #0
    cf8e:	d007      	beq.n	cfa0 <svl_packet_send+0x1b0>
    cf90:	4b11      	ldr	r3, [pc, #68]	; (cfd8 <svl_packet_send+0x1e8>)
    cf92:	681b      	ldr	r3, [r3, #0]
    cf94:	4a11      	ldr	r2, [pc, #68]	; (cfdc <svl_packet_send+0x1ec>)
    cf96:	6812      	ldr	r2, [r2, #0]
    cf98:	7cf9      	ldrb	r1, [r7, #19]
    cf9a:	4610      	mov	r0, r2
    cf9c:	4798      	blx	r3
    cf9e:	60f8      	str	r0, [r7, #12]
    cfa0:	4b0a      	ldr	r3, [pc, #40]	; (cfcc <svl_packet_send+0x1dc>)
    cfa2:	781b      	ldrb	r3, [r3, #0]
    cfa4:	76fb      	strb	r3, [r7, #27]
    cfa6:	2300      	movs	r3, #0
    cfa8:	617b      	str	r3, [r7, #20]
    cfaa:	4b0b      	ldr	r3, [pc, #44]	; (cfd8 <svl_packet_send+0x1e8>)
    cfac:	681b      	ldr	r3, [r3, #0]
    cfae:	2b00      	cmp	r3, #0
    cfb0:	d007      	beq.n	cfc2 <svl_packet_send+0x1d2>
    cfb2:	4b09      	ldr	r3, [pc, #36]	; (cfd8 <svl_packet_send+0x1e8>)
    cfb4:	681b      	ldr	r3, [r3, #0]
    cfb6:	4a09      	ldr	r2, [pc, #36]	; (cfdc <svl_packet_send+0x1ec>)
    cfb8:	6812      	ldr	r2, [r2, #0]
    cfba:	7ef9      	ldrb	r1, [r7, #27]
    cfbc:	4610      	mov	r0, r2
    cfbe:	4798      	blx	r3
    cfc0:	6178      	str	r0, [r7, #20]
    cfc2:	bf00      	nop
    cfc4:	3748      	adds	r7, #72	; 0x48
    cfc6:	46bd      	mov	sp, r7
    cfc8:	bd80      	pop	{r7, pc}
    cfca:	bf00      	nop
    cfcc:	10000a58 	.word	0x10000a58
    cfd0:	10000a59 	.word	0x10000a59
    cfd4:	10000004 	.word	0x10000004
    cfd8:	10000a4c 	.word	0x10000a4c
    cfdc:	10000a40 	.word	0x10000a40

0000cfe0 <svl_packet_wait>:
    cfe0:	b580      	push	{r7, lr}
    cfe2:	b08c      	sub	sp, #48	; 0x30
    cfe4:	af00      	add	r7, sp, #0
    cfe6:	6078      	str	r0, [r7, #4]
    cfe8:	687b      	ldr	r3, [r7, #4]
    cfea:	2b00      	cmp	r3, #0
    cfec:	d101      	bne.n	cff2 <svl_packet_wait+0x12>
    cfee:	2301      	movs	r3, #1
    cff0:	e0c1      	b.n	d176 <svl_packet_wait+0x196>
    cff2:	2302      	movs	r3, #2
    cff4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    cff8:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
    cffc:	4618      	mov	r0, r3
    cffe:	f000 f901 	bl	d204 <svl_packet_wait_bytes>
    d002:	4603      	mov	r3, r0
    d004:	2b00      	cmp	r3, #0
    d006:	d001      	beq.n	d00c <svl_packet_wait+0x2c>
    d008:	2382      	movs	r3, #130	; 0x82
    d00a:	e0b4      	b.n	d176 <svl_packet_wait+0x196>
    d00c:	f000 f8c2 	bl	d194 <svl_packet_get_uint16_t>
    d010:	4603      	mov	r3, r0
    d012:	853b      	strh	r3, [r7, #40]	; 0x28
    d014:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
    d016:	2b00      	cmp	r3, #0
    d018:	d101      	bne.n	d01e <svl_packet_wait+0x3e>
    d01a:	2304      	movs	r3, #4
    d01c:	e0ab      	b.n	d176 <svl_packet_wait+0x196>
    d01e:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
    d020:	3b03      	subs	r3, #3
    d022:	687a      	ldr	r2, [r7, #4]
    d024:	8952      	ldrh	r2, [r2, #10]
    d026:	4293      	cmp	r3, r2
    d028:	dd01      	ble.n	d02e <svl_packet_wait+0x4e>
    d02a:	2348      	movs	r3, #72	; 0x48
    d02c:	e0a3      	b.n	d176 <svl_packet_wait+0x196>
    d02e:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
    d030:	4618      	mov	r0, r3
    d032:	f000 f8e7 	bl	d204 <svl_packet_wait_bytes>
    d036:	4603      	mov	r3, r0
    d038:	2b00      	cmp	r3, #0
    d03a:	d001      	beq.n	d040 <svl_packet_wait+0x60>
    d03c:	2342      	movs	r3, #66	; 0x42
    d03e:	e09a      	b.n	d176 <svl_packet_wait+0x196>
    d040:	4b4f      	ldr	r3, [pc, #316]	; (d180 <svl_packet_wait+0x1a0>)
    d042:	2200      	movs	r2, #0
    d044:	701a      	strb	r2, [r3, #0]
    d046:	4b4f      	ldr	r3, [pc, #316]	; (d184 <svl_packet_wait+0x1a4>)
    d048:	2200      	movs	r2, #0
    d04a:	701a      	strb	r2, [r3, #0]
    d04c:	f107 030b 	add.w	r3, r7, #11
    d050:	61fb      	str	r3, [r7, #28]
    d052:	2300      	movs	r3, #0
    d054:	61bb      	str	r3, [r7, #24]
    d056:	4b4c      	ldr	r3, [pc, #304]	; (d188 <svl_packet_wait+0x1a8>)
    d058:	681b      	ldr	r3, [r3, #0]
    d05a:	2b00      	cmp	r3, #0
    d05c:	d007      	beq.n	d06e <svl_packet_wait+0x8e>
    d05e:	4b4a      	ldr	r3, [pc, #296]	; (d188 <svl_packet_wait+0x1a8>)
    d060:	681b      	ldr	r3, [r3, #0]
    d062:	4a4a      	ldr	r2, [pc, #296]	; (d18c <svl_packet_wait+0x1ac>)
    d064:	6812      	ldr	r2, [r2, #0]
    d066:	69f9      	ldr	r1, [r7, #28]
    d068:	4610      	mov	r0, r2
    d06a:	4798      	blx	r3
    d06c:	61b8      	str	r0, [r7, #24]
    d06e:	7afa      	ldrb	r2, [r7, #11]
    d070:	687b      	ldr	r3, [r7, #4]
    d072:	701a      	strb	r2, [r3, #0]
    d074:	7afb      	ldrb	r3, [r7, #11]
    d076:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
    d07a:	4b42      	ldr	r3, [pc, #264]	; (d184 <svl_packet_wait+0x1a4>)
    d07c:	781a      	ldrb	r2, [r3, #0]
    d07e:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
    d082:	4053      	eors	r3, r2
    d084:	b2db      	uxtb	r3, r3
    d086:	843b      	strh	r3, [r7, #32]
    d088:	8c3b      	ldrh	r3, [r7, #32]
    d08a:	4a41      	ldr	r2, [pc, #260]	; (d190 <svl_packet_wait+0x1b0>)
    d08c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
    d090:	0a1b      	lsrs	r3, r3, #8
    d092:	b29b      	uxth	r3, r3
    d094:	b2da      	uxtb	r2, r3
    d096:	4b3a      	ldr	r3, [pc, #232]	; (d180 <svl_packet_wait+0x1a0>)
    d098:	781b      	ldrb	r3, [r3, #0]
    d09a:	4053      	eors	r3, r2
    d09c:	b2da      	uxtb	r2, r3
    d09e:	4b39      	ldr	r3, [pc, #228]	; (d184 <svl_packet_wait+0x1a4>)
    d0a0:	701a      	strb	r2, [r3, #0]
    d0a2:	8c3b      	ldrh	r3, [r7, #32]
    d0a4:	4a3a      	ldr	r2, [pc, #232]	; (d190 <svl_packet_wait+0x1b0>)
    d0a6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
    d0aa:	b2da      	uxtb	r2, r3
    d0ac:	4b34      	ldr	r3, [pc, #208]	; (d180 <svl_packet_wait+0x1a0>)
    d0ae:	701a      	strb	r2, [r3, #0]
    d0b0:	bf00      	nop
    d0b2:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
    d0b4:	3b03      	subs	r3, #3
    d0b6:	b29a      	uxth	r2, r3
    d0b8:	687b      	ldr	r3, [r7, #4]
    d0ba:	811a      	strh	r2, [r3, #8]
    d0bc:	687b      	ldr	r3, [r7, #4]
    d0be:	685b      	ldr	r3, [r3, #4]
    d0c0:	2b00      	cmp	r3, #0
    d0c2:	d043      	beq.n	d14c <svl_packet_wait+0x16c>
    d0c4:	687b      	ldr	r3, [r7, #4]
    d0c6:	895b      	ldrh	r3, [r3, #10]
    d0c8:	2b00      	cmp	r3, #0
    d0ca:	d03f      	beq.n	d14c <svl_packet_wait+0x16c>
    d0cc:	2300      	movs	r3, #0
    d0ce:	62fb      	str	r3, [r7, #44]	; 0x2c
    d0d0:	e036      	b.n	d140 <svl_packet_wait+0x160>
    d0d2:	f107 030b 	add.w	r3, r7, #11
    d0d6:	613b      	str	r3, [r7, #16]
    d0d8:	2300      	movs	r3, #0
    d0da:	60fb      	str	r3, [r7, #12]
    d0dc:	4b2a      	ldr	r3, [pc, #168]	; (d188 <svl_packet_wait+0x1a8>)
    d0de:	681b      	ldr	r3, [r3, #0]
    d0e0:	2b00      	cmp	r3, #0
    d0e2:	d007      	beq.n	d0f4 <svl_packet_wait+0x114>
    d0e4:	4b28      	ldr	r3, [pc, #160]	; (d188 <svl_packet_wait+0x1a8>)
    d0e6:	681b      	ldr	r3, [r3, #0]
    d0e8:	4a28      	ldr	r2, [pc, #160]	; (d18c <svl_packet_wait+0x1ac>)
    d0ea:	6812      	ldr	r2, [r2, #0]
    d0ec:	6939      	ldr	r1, [r7, #16]
    d0ee:	4610      	mov	r0, r2
    d0f0:	4798      	blx	r3
    d0f2:	60f8      	str	r0, [r7, #12]
    d0f4:	7afb      	ldrb	r3, [r7, #11]
    d0f6:	75fb      	strb	r3, [r7, #23]
    d0f8:	4b22      	ldr	r3, [pc, #136]	; (d184 <svl_packet_wait+0x1a4>)
    d0fa:	781a      	ldrb	r2, [r3, #0]
    d0fc:	7dfb      	ldrb	r3, [r7, #23]
    d0fe:	4053      	eors	r3, r2
    d100:	b2db      	uxtb	r3, r3
    d102:	82bb      	strh	r3, [r7, #20]
    d104:	8abb      	ldrh	r3, [r7, #20]
    d106:	4a22      	ldr	r2, [pc, #136]	; (d190 <svl_packet_wait+0x1b0>)
    d108:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
    d10c:	0a1b      	lsrs	r3, r3, #8
    d10e:	b29b      	uxth	r3, r3
    d110:	b2da      	uxtb	r2, r3
    d112:	4b1b      	ldr	r3, [pc, #108]	; (d180 <svl_packet_wait+0x1a0>)
    d114:	781b      	ldrb	r3, [r3, #0]
    d116:	4053      	eors	r3, r2
    d118:	b2da      	uxtb	r2, r3
    d11a:	4b1a      	ldr	r3, [pc, #104]	; (d184 <svl_packet_wait+0x1a4>)
    d11c:	701a      	strb	r2, [r3, #0]
    d11e:	8abb      	ldrh	r3, [r7, #20]
    d120:	4a1b      	ldr	r2, [pc, #108]	; (d190 <svl_packet_wait+0x1b0>)
    d122:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
    d126:	b2da      	uxtb	r2, r3
    d128:	4b15      	ldr	r3, [pc, #84]	; (d180 <svl_packet_wait+0x1a0>)
    d12a:	701a      	strb	r2, [r3, #0]
    d12c:	bf00      	nop
    d12e:	687b      	ldr	r3, [r7, #4]
    d130:	685a      	ldr	r2, [r3, #4]
    d132:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    d134:	4413      	add	r3, r2
    d136:	7afa      	ldrb	r2, [r7, #11]
    d138:	701a      	strb	r2, [r3, #0]
    d13a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    d13c:	3301      	adds	r3, #1
    d13e:	62fb      	str	r3, [r7, #44]	; 0x2c
    d140:	687b      	ldr	r3, [r7, #4]
    d142:	891b      	ldrh	r3, [r3, #8]
    d144:	461a      	mov	r2, r3
    d146:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    d148:	4293      	cmp	r3, r2
    d14a:	d3c2      	bcc.n	d0d2 <svl_packet_wait+0xf2>
    d14c:	f000 f822 	bl	d194 <svl_packet_get_uint16_t>
    d150:	4603      	mov	r3, r0
    d152:	84fb      	strh	r3, [r7, #38]	; 0x26
    d154:	4b0b      	ldr	r3, [pc, #44]	; (d184 <svl_packet_wait+0x1a4>)
    d156:	781b      	ldrb	r3, [r3, #0]
    d158:	021b      	lsls	r3, r3, #8
    d15a:	b21a      	sxth	r2, r3
    d15c:	4b08      	ldr	r3, [pc, #32]	; (d180 <svl_packet_wait+0x1a0>)
    d15e:	781b      	ldrb	r3, [r3, #0]
    d160:	b21b      	sxth	r3, r3
    d162:	4313      	orrs	r3, r2
    d164:	b21b      	sxth	r3, r3
    d166:	84bb      	strh	r3, [r7, #36]	; 0x24
    d168:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
    d16a:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
    d16c:	429a      	cmp	r2, r3
    d16e:	d001      	beq.n	d174 <svl_packet_wait+0x194>
    d170:	2310      	movs	r3, #16
    d172:	e000      	b.n	d176 <svl_packet_wait+0x196>
    d174:	2300      	movs	r3, #0
    d176:	4618      	mov	r0, r3
    d178:	3730      	adds	r7, #48	; 0x30
    d17a:	46bd      	mov	sp, r7
    d17c:	bd80      	pop	{r7, pc}
    d17e:	bf00      	nop
    d180:	10000a58 	.word	0x10000a58
    d184:	10000a59 	.word	0x10000a59
    d188:	10000a48 	.word	0x10000a48
    d18c:	10000a3c 	.word	0x10000a3c
    d190:	10000004 	.word	0x10000004

0000d194 <svl_packet_get_uint16_t>:
    d194:	b580      	push	{r7, lr}
    d196:	b086      	sub	sp, #24
    d198:	af00      	add	r7, sp, #0
    d19a:	2300      	movs	r3, #0
    d19c:	71fb      	strb	r3, [r7, #7]
    d19e:	2300      	movs	r3, #0
    d1a0:	71bb      	strb	r3, [r7, #6]
    d1a2:	1dfb      	adds	r3, r7, #7
    d1a4:	60fb      	str	r3, [r7, #12]
    d1a6:	2300      	movs	r3, #0
    d1a8:	60bb      	str	r3, [r7, #8]
    d1aa:	4b14      	ldr	r3, [pc, #80]	; (d1fc <svl_packet_get_uint16_t+0x68>)
    d1ac:	681b      	ldr	r3, [r3, #0]
    d1ae:	2b00      	cmp	r3, #0
    d1b0:	d007      	beq.n	d1c2 <svl_packet_get_uint16_t+0x2e>
    d1b2:	4b12      	ldr	r3, [pc, #72]	; (d1fc <svl_packet_get_uint16_t+0x68>)
    d1b4:	681b      	ldr	r3, [r3, #0]
    d1b6:	4a12      	ldr	r2, [pc, #72]	; (d200 <svl_packet_get_uint16_t+0x6c>)
    d1b8:	6812      	ldr	r2, [r2, #0]
    d1ba:	68f9      	ldr	r1, [r7, #12]
    d1bc:	4610      	mov	r0, r2
    d1be:	4798      	blx	r3
    d1c0:	60b8      	str	r0, [r7, #8]
    d1c2:	1dbb      	adds	r3, r7, #6
    d1c4:	617b      	str	r3, [r7, #20]
    d1c6:	2300      	movs	r3, #0
    d1c8:	613b      	str	r3, [r7, #16]
    d1ca:	4b0c      	ldr	r3, [pc, #48]	; (d1fc <svl_packet_get_uint16_t+0x68>)
    d1cc:	681b      	ldr	r3, [r3, #0]
    d1ce:	2b00      	cmp	r3, #0
    d1d0:	d007      	beq.n	d1e2 <svl_packet_get_uint16_t+0x4e>
    d1d2:	4b0a      	ldr	r3, [pc, #40]	; (d1fc <svl_packet_get_uint16_t+0x68>)
    d1d4:	681b      	ldr	r3, [r3, #0]
    d1d6:	4a0a      	ldr	r2, [pc, #40]	; (d200 <svl_packet_get_uint16_t+0x6c>)
    d1d8:	6812      	ldr	r2, [r2, #0]
    d1da:	6979      	ldr	r1, [r7, #20]
    d1dc:	4610      	mov	r0, r2
    d1de:	4798      	blx	r3
    d1e0:	6138      	str	r0, [r7, #16]
    d1e2:	79fb      	ldrb	r3, [r7, #7]
    d1e4:	021b      	lsls	r3, r3, #8
    d1e6:	b21a      	sxth	r2, r3
    d1e8:	79bb      	ldrb	r3, [r7, #6]
    d1ea:	b21b      	sxth	r3, r3
    d1ec:	4313      	orrs	r3, r2
    d1ee:	b21b      	sxth	r3, r3
    d1f0:	b29b      	uxth	r3, r3
    d1f2:	4618      	mov	r0, r3
    d1f4:	3718      	adds	r7, #24
    d1f6:	46bd      	mov	sp, r7
    d1f8:	bd80      	pop	{r7, pc}
    d1fa:	bf00      	nop
    d1fc:	10000a48 	.word	0x10000a48
    d200:	10000a3c 	.word	0x10000a3c

0000d204 <svl_packet_wait_bytes>:
    d204:	b580      	push	{r7, lr}
    d206:	b088      	sub	sp, #32
    d208:	af00      	add	r7, sp, #0
    d20a:	6078      	str	r0, [r7, #4]
    d20c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
    d210:	61fb      	str	r3, [r7, #28]
    d212:	2300      	movs	r3, #0
    d214:	613b      	str	r3, [r7, #16]
    d216:	4b1b      	ldr	r3, [pc, #108]	; (d284 <svl_packet_wait_bytes+0x80>)
    d218:	681b      	ldr	r3, [r3, #0]
    d21a:	2b00      	cmp	r3, #0
    d21c:	d003      	beq.n	d226 <svl_packet_wait_bytes+0x22>
    d21e:	4b19      	ldr	r3, [pc, #100]	; (d284 <svl_packet_wait_bytes+0x80>)
    d220:	681b      	ldr	r3, [r3, #0]
    d222:	4798      	blx	r3
    d224:	6138      	str	r0, [r7, #16]
    d226:	693b      	ldr	r3, [r7, #16]
    d228:	61bb      	str	r3, [r7, #24]
    d22a:	2300      	movs	r3, #0
    d22c:	617b      	str	r3, [r7, #20]
    d22e:	e014      	b.n	d25a <svl_packet_wait_bytes+0x56>
    d230:	2300      	movs	r3, #0
    d232:	60fb      	str	r3, [r7, #12]
    d234:	4b14      	ldr	r3, [pc, #80]	; (d288 <svl_packet_wait_bytes+0x84>)
    d236:	681b      	ldr	r3, [r3, #0]
    d238:	2b00      	cmp	r3, #0
    d23a:	d006      	beq.n	d24a <svl_packet_wait_bytes+0x46>
    d23c:	4b12      	ldr	r3, [pc, #72]	; (d288 <svl_packet_wait_bytes+0x84>)
    d23e:	681b      	ldr	r3, [r3, #0]
    d240:	4a12      	ldr	r2, [pc, #72]	; (d28c <svl_packet_wait_bytes+0x88>)
    d242:	6812      	ldr	r2, [r2, #0]
    d244:	4610      	mov	r0, r2
    d246:	4798      	blx	r3
    d248:	60f8      	str	r0, [r7, #12]
    d24a:	68fb      	ldr	r3, [r7, #12]
    d24c:	617b      	str	r3, [r7, #20]
    d24e:	697a      	ldr	r2, [r7, #20]
    d250:	687b      	ldr	r3, [r7, #4]
    d252:	429a      	cmp	r2, r3
    d254:	d301      	bcc.n	d25a <svl_packet_wait_bytes+0x56>
    d256:	2300      	movs	r3, #0
    d258:	e010      	b.n	d27c <svl_packet_wait_bytes+0x78>
    d25a:	2300      	movs	r3, #0
    d25c:	60bb      	str	r3, [r7, #8]
    d25e:	4b09      	ldr	r3, [pc, #36]	; (d284 <svl_packet_wait_bytes+0x80>)
    d260:	681b      	ldr	r3, [r3, #0]
    d262:	2b00      	cmp	r3, #0
    d264:	d003      	beq.n	d26e <svl_packet_wait_bytes+0x6a>
    d266:	4b07      	ldr	r3, [pc, #28]	; (d284 <svl_packet_wait_bytes+0x80>)
    d268:	681b      	ldr	r3, [r3, #0]
    d26a:	4798      	blx	r3
    d26c:	60b8      	str	r0, [r7, #8]
    d26e:	68ba      	ldr	r2, [r7, #8]
    d270:	69bb      	ldr	r3, [r7, #24]
    d272:	1ad3      	subs	r3, r2, r3
    d274:	69fa      	ldr	r2, [r7, #28]
    d276:	429a      	cmp	r2, r3
    d278:	d8da      	bhi.n	d230 <svl_packet_wait_bytes+0x2c>
    d27a:	2301      	movs	r3, #1
    d27c:	4618      	mov	r0, r3
    d27e:	3720      	adds	r7, #32
    d280:	46bd      	mov	sp, r7
    d282:	bd80      	pop	{r7, pc}
    d284:	10000a54 	.word	0x10000a54
    d288:	10000a50 	.word	0x10000a50
    d28c:	10000a44 	.word	0x10000a44

0000d290 <art_svl_ringbuf_init>:
    d290:	b480      	push	{r7}
    d292:	b087      	sub	sp, #28
    d294:	af00      	add	r7, sp, #0
    d296:	60f8      	str	r0, [r7, #12]
    d298:	60b9      	str	r1, [r7, #8]
    d29a:	607a      	str	r2, [r7, #4]
    d29c:	68fb      	ldr	r3, [r7, #12]
    d29e:	2b00      	cmp	r3, #0
    d2a0:	d101      	bne.n	d2a6 <art_svl_ringbuf_init+0x16>
    d2a2:	2300      	movs	r3, #0
    d2a4:	e00f      	b.n	d2c6 <art_svl_ringbuf_init+0x36>
    d2a6:	68fb      	ldr	r3, [r7, #12]
    d2a8:	617b      	str	r3, [r7, #20]
    d2aa:	697b      	ldr	r3, [r7, #20]
    d2ac:	68ba      	ldr	r2, [r7, #8]
    d2ae:	601a      	str	r2, [r3, #0]
    d2b0:	697b      	ldr	r3, [r7, #20]
    d2b2:	687a      	ldr	r2, [r7, #4]
    d2b4:	605a      	str	r2, [r3, #4]
    d2b6:	697b      	ldr	r3, [r7, #20]
    d2b8:	2200      	movs	r2, #0
    d2ba:	609a      	str	r2, [r3, #8]
    d2bc:	697b      	ldr	r3, [r7, #20]
    d2be:	2200      	movs	r2, #0
    d2c0:	60da      	str	r2, [r3, #12]
    d2c2:	697b      	ldr	r3, [r7, #20]
    d2c4:	685b      	ldr	r3, [r3, #4]
    d2c6:	4618      	mov	r0, r3
    d2c8:	371c      	adds	r7, #28
    d2ca:	46bd      	mov	sp, r7
    d2cc:	f85d 7b04 	ldr.w	r7, [sp], #4
    d2d0:	4770      	bx	lr

0000d2d2 <art_svl_ringbuf_available>:
    d2d2:	b480      	push	{r7}
    d2d4:	b085      	sub	sp, #20
    d2d6:	af00      	add	r7, sp, #0
    d2d8:	6078      	str	r0, [r7, #4]
    d2da:	687b      	ldr	r3, [r7, #4]
    d2dc:	2b00      	cmp	r3, #0
    d2de:	d101      	bne.n	d2e4 <art_svl_ringbuf_available+0x12>
    d2e0:	2300      	movs	r3, #0
    d2e2:	e01a      	b.n	d31a <art_svl_ringbuf_available+0x48>
    d2e4:	687b      	ldr	r3, [r7, #4]
    d2e6:	60bb      	str	r3, [r7, #8]
    d2e8:	2300      	movs	r3, #0
    d2ea:	60fb      	str	r3, [r7, #12]
    d2ec:	68bb      	ldr	r3, [r7, #8]
    d2ee:	68da      	ldr	r2, [r3, #12]
    d2f0:	68bb      	ldr	r3, [r7, #8]
    d2f2:	689b      	ldr	r3, [r3, #8]
    d2f4:	429a      	cmp	r2, r3
    d2f6:	d306      	bcc.n	d306 <art_svl_ringbuf_available+0x34>
    d2f8:	68bb      	ldr	r3, [r7, #8]
    d2fa:	68da      	ldr	r2, [r3, #12]
    d2fc:	68bb      	ldr	r3, [r7, #8]
    d2fe:	689b      	ldr	r3, [r3, #8]
    d300:	1ad3      	subs	r3, r2, r3
    d302:	60fb      	str	r3, [r7, #12]
    d304:	e008      	b.n	d318 <art_svl_ringbuf_available+0x46>
    d306:	68bb      	ldr	r3, [r7, #8]
    d308:	685a      	ldr	r2, [r3, #4]
    d30a:	68bb      	ldr	r3, [r7, #8]
    d30c:	68d9      	ldr	r1, [r3, #12]
    d30e:	68bb      	ldr	r3, [r7, #8]
    d310:	689b      	ldr	r3, [r3, #8]
    d312:	1acb      	subs	r3, r1, r3
    d314:	4413      	add	r3, r2
    d316:	60fb      	str	r3, [r7, #12]
    d318:	68fb      	ldr	r3, [r7, #12]
    d31a:	4618      	mov	r0, r3
    d31c:	3714      	adds	r7, #20
    d31e:	46bd      	mov	sp, r7
    d320:	f85d 7b04 	ldr.w	r7, [sp], #4
    d324:	4770      	bx	lr

0000d326 <art_svl_ringbuf_bytes_free>:
    d326:	b480      	push	{r7}
    d328:	b085      	sub	sp, #20
    d32a:	af00      	add	r7, sp, #0
    d32c:	6078      	str	r0, [r7, #4]
    d32e:	687b      	ldr	r3, [r7, #4]
    d330:	2b00      	cmp	r3, #0
    d332:	d101      	bne.n	d338 <art_svl_ringbuf_bytes_free+0x12>
    d334:	2300      	movs	r3, #0
    d336:	e01c      	b.n	d372 <art_svl_ringbuf_bytes_free+0x4c>
    d338:	687b      	ldr	r3, [r7, #4]
    d33a:	60bb      	str	r3, [r7, #8]
    d33c:	2300      	movs	r3, #0
    d33e:	60fb      	str	r3, [r7, #12]
    d340:	68bb      	ldr	r3, [r7, #8]
    d342:	68da      	ldr	r2, [r3, #12]
    d344:	68bb      	ldr	r3, [r7, #8]
    d346:	689b      	ldr	r3, [r3, #8]
    d348:	429a      	cmp	r2, r3
    d34a:	d30a      	bcc.n	d362 <art_svl_ringbuf_bytes_free+0x3c>
    d34c:	68bb      	ldr	r3, [r7, #8]
    d34e:	685a      	ldr	r2, [r3, #4]
    d350:	68bb      	ldr	r3, [r7, #8]
    d352:	68db      	ldr	r3, [r3, #12]
    d354:	1ad2      	subs	r2, r2, r3
    d356:	68bb      	ldr	r3, [r7, #8]
    d358:	689b      	ldr	r3, [r3, #8]
    d35a:	4413      	add	r3, r2
    d35c:	3b01      	subs	r3, #1
    d35e:	60fb      	str	r3, [r7, #12]
    d360:	e006      	b.n	d370 <art_svl_ringbuf_bytes_free+0x4a>
    d362:	68bb      	ldr	r3, [r7, #8]
    d364:	689a      	ldr	r2, [r3, #8]
    d366:	68bb      	ldr	r3, [r7, #8]
    d368:	68db      	ldr	r3, [r3, #12]
    d36a:	1ad3      	subs	r3, r2, r3
    d36c:	3b01      	subs	r3, #1
    d36e:	60fb      	str	r3, [r7, #12]
    d370:	68fb      	ldr	r3, [r7, #12]
    d372:	4618      	mov	r0, r3
    d374:	3714      	adds	r7, #20
    d376:	46bd      	mov	sp, r7
    d378:	f85d 7b04 	ldr.w	r7, [sp], #4
    d37c:	4770      	bx	lr

0000d37e <art_svl_ringbuf_write>:
    d37e:	b580      	push	{r7, lr}
    d380:	b084      	sub	sp, #16
    d382:	af00      	add	r7, sp, #0
    d384:	6078      	str	r0, [r7, #4]
    d386:	460b      	mov	r3, r1
    d388:	70fb      	strb	r3, [r7, #3]
    d38a:	687b      	ldr	r3, [r7, #4]
    d38c:	2b00      	cmp	r3, #0
    d38e:	d101      	bne.n	d394 <art_svl_ringbuf_write+0x16>
    d390:	2300      	movs	r3, #0
    d392:	e01f      	b.n	d3d4 <art_svl_ringbuf_write+0x56>
    d394:	687b      	ldr	r3, [r7, #4]
    d396:	60fb      	str	r3, [r7, #12]
    d398:	68f8      	ldr	r0, [r7, #12]
    d39a:	f7ff ffc4 	bl	d326 <art_svl_ringbuf_bytes_free>
    d39e:	4603      	mov	r3, r0
    d3a0:	2b00      	cmp	r3, #0
    d3a2:	d016      	beq.n	d3d2 <art_svl_ringbuf_write+0x54>
    d3a4:	68fb      	ldr	r3, [r7, #12]
    d3a6:	681a      	ldr	r2, [r3, #0]
    d3a8:	68fb      	ldr	r3, [r7, #12]
    d3aa:	68db      	ldr	r3, [r3, #12]
    d3ac:	4413      	add	r3, r2
    d3ae:	78fa      	ldrb	r2, [r7, #3]
    d3b0:	701a      	strb	r2, [r3, #0]
    d3b2:	68fb      	ldr	r3, [r7, #12]
    d3b4:	68db      	ldr	r3, [r3, #12]
    d3b6:	1c5a      	adds	r2, r3, #1
    d3b8:	68fb      	ldr	r3, [r7, #12]
    d3ba:	60da      	str	r2, [r3, #12]
    d3bc:	68fb      	ldr	r3, [r7, #12]
    d3be:	68da      	ldr	r2, [r3, #12]
    d3c0:	68fb      	ldr	r3, [r7, #12]
    d3c2:	685b      	ldr	r3, [r3, #4]
    d3c4:	429a      	cmp	r2, r3
    d3c6:	d302      	bcc.n	d3ce <art_svl_ringbuf_write+0x50>
    d3c8:	68fb      	ldr	r3, [r7, #12]
    d3ca:	2200      	movs	r2, #0
    d3cc:	60da      	str	r2, [r3, #12]
    d3ce:	2301      	movs	r3, #1
    d3d0:	e000      	b.n	d3d4 <art_svl_ringbuf_write+0x56>
    d3d2:	2300      	movs	r3, #0
    d3d4:	4618      	mov	r0, r3
    d3d6:	3710      	adds	r7, #16
    d3d8:	46bd      	mov	sp, r7
    d3da:	bd80      	pop	{r7, pc}

0000d3dc <art_svl_ringbuf_read>:
    d3dc:	b580      	push	{r7, lr}
    d3de:	b084      	sub	sp, #16
    d3e0:	af00      	add	r7, sp, #0
    d3e2:	6078      	str	r0, [r7, #4]
    d3e4:	6039      	str	r1, [r7, #0]
    d3e6:	687b      	ldr	r3, [r7, #4]
    d3e8:	2b00      	cmp	r3, #0
    d3ea:	d101      	bne.n	d3f0 <art_svl_ringbuf_read+0x14>
    d3ec:	2300      	movs	r3, #0
    d3ee:	e020      	b.n	d432 <art_svl_ringbuf_read+0x56>
    d3f0:	687b      	ldr	r3, [r7, #4]
    d3f2:	60fb      	str	r3, [r7, #12]
    d3f4:	68f8      	ldr	r0, [r7, #12]
    d3f6:	f7ff ff6c 	bl	d2d2 <art_svl_ringbuf_available>
    d3fa:	4603      	mov	r3, r0
    d3fc:	2b00      	cmp	r3, #0
    d3fe:	d017      	beq.n	d430 <art_svl_ringbuf_read+0x54>
    d400:	68fb      	ldr	r3, [r7, #12]
    d402:	681a      	ldr	r2, [r3, #0]
    d404:	68fb      	ldr	r3, [r7, #12]
    d406:	689b      	ldr	r3, [r3, #8]
    d408:	4413      	add	r3, r2
    d40a:	781a      	ldrb	r2, [r3, #0]
    d40c:	683b      	ldr	r3, [r7, #0]
    d40e:	701a      	strb	r2, [r3, #0]
    d410:	68fb      	ldr	r3, [r7, #12]
    d412:	689b      	ldr	r3, [r3, #8]
    d414:	1c5a      	adds	r2, r3, #1
    d416:	68fb      	ldr	r3, [r7, #12]
    d418:	609a      	str	r2, [r3, #8]
    d41a:	68fb      	ldr	r3, [r7, #12]
    d41c:	689a      	ldr	r2, [r3, #8]
    d41e:	68fb      	ldr	r3, [r7, #12]
    d420:	685b      	ldr	r3, [r3, #4]
    d422:	429a      	cmp	r2, r3
    d424:	d302      	bcc.n	d42c <art_svl_ringbuf_read+0x50>
    d426:	68fb      	ldr	r3, [r7, #12]
    d428:	2200      	movs	r2, #0
    d42a:	609a      	str	r2, [r3, #8]
    d42c:	2301      	movs	r3, #1
    d42e:	e000      	b.n	d432 <art_svl_ringbuf_read+0x56>
    d430:	2300      	movs	r3, #0
    d432:	4618      	mov	r0, r3
    d434:	3710      	adds	r7, #16
    d436:	46bd      	mov	sp, r7
    d438:	bd80      	pop	{r7, pc}

0000d43a <svl_uart_read>:
    d43a:	b580      	push	{r7, lr}
    d43c:	b08a      	sub	sp, #40	; 0x28
    d43e:	af00      	add	r7, sp, #0
    d440:	60f8      	str	r0, [r7, #12]
    d442:	60b9      	str	r1, [r7, #8]
    d444:	607a      	str	r2, [r7, #4]
    d446:	2300      	movs	r3, #0
    d448:	627b      	str	r3, [r7, #36]	; 0x24
    d44a:	2301      	movs	r3, #1
    d44c:	613b      	str	r3, [r7, #16]
    d44e:	68bb      	ldr	r3, [r7, #8]
    d450:	617b      	str	r3, [r7, #20]
    d452:	687b      	ldr	r3, [r7, #4]
    d454:	61bb      	str	r3, [r7, #24]
    d456:	2300      	movs	r3, #0
    d458:	61fb      	str	r3, [r7, #28]
    d45a:	f107 0324 	add.w	r3, r7, #36	; 0x24
    d45e:	623b      	str	r3, [r7, #32]
    d460:	f107 0310 	add.w	r3, r7, #16
    d464:	4619      	mov	r1, r3
    d466:	68f8      	ldr	r0, [r7, #12]
    d468:	f001 f916 	bl	e698 <am_hal_uart_transfer>
    d46c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    d46e:	4618      	mov	r0, r3
    d470:	3728      	adds	r7, #40	; 0x28
    d472:	46bd      	mov	sp, r7
    d474:	bd80      	pop	{r7, pc}

0000d476 <svl_uart_write>:
    d476:	b580      	push	{r7, lr}
    d478:	b08a      	sub	sp, #40	; 0x28
    d47a:	af00      	add	r7, sp, #0
    d47c:	60f8      	str	r0, [r7, #12]
    d47e:	60b9      	str	r1, [r7, #8]
    d480:	607a      	str	r2, [r7, #4]
    d482:	2300      	movs	r3, #0
    d484:	627b      	str	r3, [r7, #36]	; 0x24
    d486:	2300      	movs	r3, #0
    d488:	613b      	str	r3, [r7, #16]
    d48a:	68bb      	ldr	r3, [r7, #8]
    d48c:	617b      	str	r3, [r7, #20]
    d48e:	687b      	ldr	r3, [r7, #4]
    d490:	61bb      	str	r3, [r7, #24]
    d492:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    d496:	61fb      	str	r3, [r7, #28]
    d498:	f107 0324 	add.w	r3, r7, #36	; 0x24
    d49c:	623b      	str	r3, [r7, #32]
    d49e:	f107 0310 	add.w	r3, r7, #16
    d4a2:	4619      	mov	r1, r3
    d4a4:	68f8      	ldr	r0, [r7, #12]
    d4a6:	f001 f8f7 	bl	e698 <am_hal_uart_transfer>
    d4aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    d4ac:	4618      	mov	r0, r3
    d4ae:	3728      	adds	r7, #40	; 0x28
    d4b0:	46bd      	mov	sp, r7
    d4b2:	bd80      	pop	{r7, pc}

0000d4b4 <svl_uart_write_byte>:
    d4b4:	b580      	push	{r7, lr}
    d4b6:	b082      	sub	sp, #8
    d4b8:	af00      	add	r7, sp, #0
    d4ba:	6078      	str	r0, [r7, #4]
    d4bc:	460b      	mov	r3, r1
    d4be:	70fb      	strb	r3, [r7, #3]
    d4c0:	1cfb      	adds	r3, r7, #3
    d4c2:	2201      	movs	r2, #1
    d4c4:	4619      	mov	r1, r3
    d4c6:	6878      	ldr	r0, [r7, #4]
    d4c8:	f7ff ffd5 	bl	d476 <svl_uart_write>
    d4cc:	4603      	mov	r3, r0
    d4ce:	4618      	mov	r0, r3
    d4d0:	3708      	adds	r7, #8
    d4d2:	46bd      	mov	sp, r7
    d4d4:	bd80      	pop	{r7, pc}
	...

0000d4d8 <_fill_ticks>:
    d4d8:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
    d4dc:	af00      	add	r7, sp, #0
    d4de:	4913      	ldr	r1, [pc, #76]	; (d52c <_fill_ticks+0x54>)
    d4e0:	6809      	ldr	r1, [r1, #0]
    d4e2:	2000      	movs	r0, #0
    d4e4:	460a      	mov	r2, r1
    d4e6:	4603      	mov	r3, r0
    d4e8:	4911      	ldr	r1, [pc, #68]	; (d530 <_fill_ticks+0x58>)
    d4ea:	e9c1 2300 	strd	r2, r3, [r1]
    d4ee:	4b10      	ldr	r3, [pc, #64]	; (d530 <_fill_ticks+0x58>)
    d4f0:	e9d3 0100 	ldrd	r0, r1, [r3]
    d4f4:	f04f 0200 	mov.w	r2, #0
    d4f8:	f04f 0300 	mov.w	r3, #0
    d4fc:	0003      	movs	r3, r0
    d4fe:	2200      	movs	r2, #0
    d500:	490b      	ldr	r1, [pc, #44]	; (d530 <_fill_ticks+0x58>)
    d502:	e9c1 2300 	strd	r2, r3, [r1]
    d506:	f000 fed1 	bl	e2ac <am_hal_stimer_counter_get>
    d50a:	4603      	mov	r3, r0
    d50c:	2200      	movs	r2, #0
    d50e:	461c      	mov	r4, r3
    d510:	4615      	mov	r5, r2
    d512:	4b07      	ldr	r3, [pc, #28]	; (d530 <_fill_ticks+0x58>)
    d514:	e9d3 2300 	ldrd	r2, r3, [r3]
    d518:	ea44 0802 	orr.w	r8, r4, r2
    d51c:	ea45 0903 	orr.w	r9, r5, r3
    d520:	4b03      	ldr	r3, [pc, #12]	; (d530 <_fill_ticks+0x58>)
    d522:	e9c3 8900 	strd	r8, r9, [r3]
    d526:	bf00      	nop
    d528:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
    d52c:	10000a5c 	.word	0x10000a5c
    d530:	10000a60 	.word	0x10000a60

0000d534 <millis>:
    d534:	b580      	push	{r7, lr}
    d536:	af00      	add	r7, sp, #0
    d538:	f7ff ffce 	bl	d4d8 <_fill_ticks>
    d53c:	4b06      	ldr	r3, [pc, #24]	; (d558 <millis+0x24>)
    d53e:	e9d3 0100 	ldrd	r0, r1, [r3]
    d542:	f640 32b8 	movw	r2, #3000	; 0xbb8
    d546:	f04f 0300 	mov.w	r3, #0
    d54a:	f7fe fdd9 	bl	c100 <__aeabi_uldivmod>
    d54e:	4602      	mov	r2, r0
    d550:	460b      	mov	r3, r1
    d552:	4613      	mov	r3, r2
    d554:	4618      	mov	r0, r3
    d556:	bd80      	pop	{r7, pc}
    d558:	10000a60 	.word	0x10000a60

0000d55c <enable_burst_mode>:
    d55c:	b580      	push	{r7, lr}
    d55e:	b082      	sub	sp, #8
    d560:	af00      	add	r7, sp, #0
    d562:	1dfb      	adds	r3, r7, #7
    d564:	4618      	mov	r0, r3
    d566:	f000 fa3d 	bl	d9e4 <am_hal_burst_mode_initialize>
    d56a:	4603      	mov	r3, r0
    d56c:	2b00      	cmp	r3, #0
    d56e:	d001      	beq.n	d574 <enable_burst_mode+0x18>
    d570:	2300      	movs	r3, #0
    d572:	e009      	b.n	d588 <enable_burst_mode+0x2c>
    d574:	1dbb      	adds	r3, r7, #6
    d576:	4618      	mov	r0, r3
    d578:	f000 fa76 	bl	da68 <am_hal_burst_mode_enable>
    d57c:	4603      	mov	r3, r0
    d57e:	2b00      	cmp	r3, #0
    d580:	d001      	beq.n	d586 <enable_burst_mode+0x2a>
    d582:	2300      	movs	r3, #0
    d584:	e000      	b.n	d588 <enable_burst_mode+0x2c>
    d586:	2301      	movs	r3, #1
    d588:	4618      	mov	r0, r3
    d58a:	3708      	adds	r7, #8
    d58c:	46bd      	mov	sp, r7
    d58e:	bd80      	pop	{r7, pc}

0000d590 <disable_burst_mode>:
    d590:	b580      	push	{r7, lr}
    d592:	b082      	sub	sp, #8
    d594:	af00      	add	r7, sp, #0
    d596:	1dfb      	adds	r3, r7, #7
    d598:	4618      	mov	r0, r3
    d59a:	f000 fa95 	bl	dac8 <am_hal_burst_mode_disable>
    d59e:	4603      	mov	r3, r0
    d5a0:	2b00      	cmp	r3, #0
    d5a2:	d104      	bne.n	d5ae <disable_burst_mode+0x1e>
    d5a4:	79fb      	ldrb	r3, [r7, #7]
    d5a6:	2b01      	cmp	r3, #1
    d5a8:	d003      	beq.n	d5b2 <disable_burst_mode+0x22>
    d5aa:	2300      	movs	r3, #0
    d5ac:	e002      	b.n	d5b4 <disable_burst_mode+0x24>
    d5ae:	2300      	movs	r3, #0
    d5b0:	e000      	b.n	d5b4 <disable_burst_mode+0x24>
    d5b2:	2301      	movs	r3, #1
    d5b4:	4618      	mov	r0, r3
    d5b6:	3708      	adds	r7, #8
    d5b8:	46bd      	mov	sp, r7
    d5ba:	bd80      	pop	{r7, pc}

0000d5bc <ap3_gpio_enable_interrupts>:
    d5bc:	b580      	push	{r7, lr}
    d5be:	b08a      	sub	sp, #40	; 0x28
    d5c0:	af00      	add	r7, sp, #0
    d5c2:	6078      	str	r0, [r7, #4]
    d5c4:	6039      	str	r1, [r7, #0]
    d5c6:	2300      	movs	r3, #0
    d5c8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
    d5cc:	2300      	movs	r3, #0
    d5ce:	623b      	str	r3, [r7, #32]
    d5d0:	6a3b      	ldr	r3, [r7, #32]
    d5d2:	61fb      	str	r3, [r7, #28]
    d5d4:	69fb      	ldr	r3, [r7, #28]
    d5d6:	61bb      	str	r3, [r7, #24]
    d5d8:	683b      	ldr	r3, [r7, #0]
    d5da:	00db      	lsls	r3, r3, #3
    d5dc:	f003 0208 	and.w	r2, r3, #8
    d5e0:	683b      	ldr	r3, [r7, #0]
    d5e2:	085b      	lsrs	r3, r3, #1
    d5e4:	f003 0301 	and.w	r3, r3, #1
    d5e8:	4313      	orrs	r3, r2
    d5ea:	69ba      	ldr	r2, [r7, #24]
    d5ec:	4313      	orrs	r3, r2
    d5ee:	61bb      	str	r3, [r7, #24]
    d5f0:	687b      	ldr	r3, [r7, #4]
    d5f2:	009b      	lsls	r3, r3, #2
    d5f4:	f003 031c 	and.w	r3, r3, #28
    d5f8:	617b      	str	r3, [r7, #20]
    d5fa:	687b      	ldr	r3, [r7, #4]
    d5fc:	085b      	lsrs	r3, r3, #1
    d5fe:	f023 0203 	bic.w	r2, r3, #3
    d602:	4b1d      	ldr	r3, [pc, #116]	; (d678 <ap3_gpio_enable_interrupts+0xbc>)
    d604:	4413      	add	r3, r2
    d606:	613b      	str	r3, [r7, #16]
    d608:	220f      	movs	r2, #15
    d60a:	697b      	ldr	r3, [r7, #20]
    d60c:	fa02 f303 	lsl.w	r3, r2, r3
    d610:	43db      	mvns	r3, r3
    d612:	60fb      	str	r3, [r7, #12]
    d614:	69ba      	ldr	r2, [r7, #24]
    d616:	697b      	ldr	r3, [r7, #20]
    d618:	fa02 f303 	lsl.w	r3, r2, r3
    d61c:	61bb      	str	r3, [r7, #24]
    d61e:	f000 fd95 	bl	e14c <am_hal_interrupt_master_disable>
    d622:	4603      	mov	r3, r0
    d624:	60bb      	str	r3, [r7, #8]
    d626:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
    d62a:	2b00      	cmp	r3, #0
    d62c:	d00c      	beq.n	d648 <ap3_gpio_enable_interrupts+0x8c>
    d62e:	687b      	ldr	r3, [r7, #4]
    d630:	f003 021f 	and.w	r2, r3, #31
    d634:	687b      	ldr	r3, [r7, #4]
    d636:	08db      	lsrs	r3, r3, #3
    d638:	f003 0104 	and.w	r1, r3, #4
    d63c:	4b0f      	ldr	r3, [pc, #60]	; (d67c <ap3_gpio_enable_interrupts+0xc0>)
    d63e:	440b      	add	r3, r1
    d640:	4619      	mov	r1, r3
    d642:	2301      	movs	r3, #1
    d644:	4093      	lsls	r3, r2
    d646:	600b      	str	r3, [r1, #0]
    d648:	4b0d      	ldr	r3, [pc, #52]	; (d680 <ap3_gpio_enable_interrupts+0xc4>)
    d64a:	2273      	movs	r2, #115	; 0x73
    d64c:	661a      	str	r2, [r3, #96]	; 0x60
    d64e:	693b      	ldr	r3, [r7, #16]
    d650:	681a      	ldr	r2, [r3, #0]
    d652:	68fb      	ldr	r3, [r7, #12]
    d654:	ea02 0103 	and.w	r1, r2, r3
    d658:	693b      	ldr	r3, [r7, #16]
    d65a:	69ba      	ldr	r2, [r7, #24]
    d65c:	430a      	orrs	r2, r1
    d65e:	601a      	str	r2, [r3, #0]
    d660:	4b07      	ldr	r3, [pc, #28]	; (d680 <ap3_gpio_enable_interrupts+0xc4>)
    d662:	2200      	movs	r2, #0
    d664:	661a      	str	r2, [r3, #96]	; 0x60
    d666:	68bb      	ldr	r3, [r7, #8]
    d668:	4618      	mov	r0, r3
    d66a:	f000 fd73 	bl	e154 <am_hal_interrupt_master_set>
    d66e:	2300      	movs	r3, #0
    d670:	4618      	mov	r0, r3
    d672:	3728      	adds	r7, #40	; 0x28
    d674:	46bd      	mov	sp, r7
    d676:	bd80      	pop	{r7, pc}
    d678:	40010040 	.word	0x40010040
    d67c:	400100b4 	.word	0x400100b4
    d680:	40010000 	.word	0x40010000

0000d684 <memset>:
    d684:	0783      	lsls	r3, r0, #30
    d686:	b530      	push	{r4, r5, lr}
    d688:	d047      	beq.n	d71a <memset+0x96>
    d68a:	1e54      	subs	r4, r2, #1
    d68c:	2a00      	cmp	r2, #0
    d68e:	d03e      	beq.n	d70e <memset+0x8a>
    d690:	b2ca      	uxtb	r2, r1
    d692:	4603      	mov	r3, r0
    d694:	e001      	b.n	d69a <memset+0x16>
    d696:	3c01      	subs	r4, #1
    d698:	d339      	bcc.n	d70e <memset+0x8a>
    d69a:	f803 2b01 	strb.w	r2, [r3], #1
    d69e:	079d      	lsls	r5, r3, #30
    d6a0:	d1f9      	bne.n	d696 <memset+0x12>
    d6a2:	2c03      	cmp	r4, #3
    d6a4:	d92c      	bls.n	d700 <memset+0x7c>
    d6a6:	b2cd      	uxtb	r5, r1
    d6a8:	eb05 2505 	add.w	r5, r5, r5, lsl #8
    d6ac:	2c0f      	cmp	r4, #15
    d6ae:	eb05 4505 	add.w	r5, r5, r5, lsl #16
    d6b2:	d935      	bls.n	d720 <memset+0x9c>
    d6b4:	f1a4 0210 	sub.w	r2, r4, #16
    d6b8:	f022 0c0f 	bic.w	ip, r2, #15
    d6bc:	f103 0e10 	add.w	lr, r3, #16
    d6c0:	44e6      	add	lr, ip
    d6c2:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    d6c6:	461a      	mov	r2, r3
    d6c8:	6015      	str	r5, [r2, #0]
    d6ca:	6055      	str	r5, [r2, #4]
    d6cc:	6095      	str	r5, [r2, #8]
    d6ce:	60d5      	str	r5, [r2, #12]
    d6d0:	3210      	adds	r2, #16
    d6d2:	4572      	cmp	r2, lr
    d6d4:	d1f8      	bne.n	d6c8 <memset+0x44>
    d6d6:	f10c 0201 	add.w	r2, ip, #1
    d6da:	f014 0f0c 	tst.w	r4, #12
    d6de:	eb03 1202 	add.w	r2, r3, r2, lsl #4
    d6e2:	f004 0c0f 	and.w	ip, r4, #15
    d6e6:	d013      	beq.n	d710 <memset+0x8c>
    d6e8:	f1ac 0304 	sub.w	r3, ip, #4
    d6ec:	f023 0303 	bic.w	r3, r3, #3
    d6f0:	3304      	adds	r3, #4
    d6f2:	4413      	add	r3, r2
    d6f4:	f842 5b04 	str.w	r5, [r2], #4
    d6f8:	429a      	cmp	r2, r3
    d6fa:	d1fb      	bne.n	d6f4 <memset+0x70>
    d6fc:	f00c 0403 	and.w	r4, ip, #3
    d700:	b12c      	cbz	r4, d70e <memset+0x8a>
    d702:	b2c9      	uxtb	r1, r1
    d704:	441c      	add	r4, r3
    d706:	f803 1b01 	strb.w	r1, [r3], #1
    d70a:	429c      	cmp	r4, r3
    d70c:	d1fb      	bne.n	d706 <memset+0x82>
    d70e:	bd30      	pop	{r4, r5, pc}
    d710:	4664      	mov	r4, ip
    d712:	4613      	mov	r3, r2
    d714:	2c00      	cmp	r4, #0
    d716:	d1f4      	bne.n	d702 <memset+0x7e>
    d718:	e7f9      	b.n	d70e <memset+0x8a>
    d71a:	4603      	mov	r3, r0
    d71c:	4614      	mov	r4, r2
    d71e:	e7c0      	b.n	d6a2 <memset+0x1e>
    d720:	461a      	mov	r2, r3
    d722:	46a4      	mov	ip, r4
    d724:	e7e0      	b.n	d6e8 <memset+0x64>
    d726:	bf00      	nop

0000d728 <__udivmoddi4>:
    d728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    d72c:	9d08      	ldr	r5, [sp, #32]
    d72e:	460c      	mov	r4, r1
    d730:	2b00      	cmp	r3, #0
    d732:	d14e      	bne.n	d7d2 <__udivmoddi4+0xaa>
    d734:	4694      	mov	ip, r2
    d736:	458c      	cmp	ip, r1
    d738:	4686      	mov	lr, r0
    d73a:	fab2 f282 	clz	r2, r2
    d73e:	d962      	bls.n	d806 <__udivmoddi4+0xde>
    d740:	b14a      	cbz	r2, d756 <__udivmoddi4+0x2e>
    d742:	f1c2 0320 	rsb	r3, r2, #32
    d746:	4091      	lsls	r1, r2
    d748:	fa20 f303 	lsr.w	r3, r0, r3
    d74c:	fa0c fc02 	lsl.w	ip, ip, r2
    d750:	4319      	orrs	r1, r3
    d752:	fa00 fe02 	lsl.w	lr, r0, r2
    d756:	ea4f 471c 	mov.w	r7, ip, lsr #16
    d75a:	fa1f f68c 	uxth.w	r6, ip
    d75e:	fbb1 f4f7 	udiv	r4, r1, r7
    d762:	ea4f 431e 	mov.w	r3, lr, lsr #16
    d766:	fb07 1114 	mls	r1, r7, r4, r1
    d76a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    d76e:	fb04 f106 	mul.w	r1, r4, r6
    d772:	4299      	cmp	r1, r3
    d774:	d90a      	bls.n	d78c <__udivmoddi4+0x64>
    d776:	eb1c 0303 	adds.w	r3, ip, r3
    d77a:	f104 30ff 	add.w	r0, r4, #4294967295	; 0xffffffff
    d77e:	f080 8113 	bcs.w	d9a8 <__udivmoddi4+0x280>
    d782:	4299      	cmp	r1, r3
    d784:	f240 8110 	bls.w	d9a8 <__udivmoddi4+0x280>
    d788:	3c02      	subs	r4, #2
    d78a:	4463      	add	r3, ip
    d78c:	1a59      	subs	r1, r3, r1
    d78e:	fa1f f38e 	uxth.w	r3, lr
    d792:	fbb1 f0f7 	udiv	r0, r1, r7
    d796:	fb07 1110 	mls	r1, r7, r0, r1
    d79a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    d79e:	fb00 f606 	mul.w	r6, r0, r6
    d7a2:	429e      	cmp	r6, r3
    d7a4:	d90a      	bls.n	d7bc <__udivmoddi4+0x94>
    d7a6:	eb1c 0303 	adds.w	r3, ip, r3
    d7aa:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
    d7ae:	f080 80fd 	bcs.w	d9ac <__udivmoddi4+0x284>
    d7b2:	429e      	cmp	r6, r3
    d7b4:	f240 80fa 	bls.w	d9ac <__udivmoddi4+0x284>
    d7b8:	4463      	add	r3, ip
    d7ba:	3802      	subs	r0, #2
    d7bc:	1b9b      	subs	r3, r3, r6
    d7be:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
    d7c2:	2100      	movs	r1, #0
    d7c4:	b11d      	cbz	r5, d7ce <__udivmoddi4+0xa6>
    d7c6:	40d3      	lsrs	r3, r2
    d7c8:	2200      	movs	r2, #0
    d7ca:	e9c5 3200 	strd	r3, r2, [r5]
    d7ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    d7d2:	428b      	cmp	r3, r1
    d7d4:	d905      	bls.n	d7e2 <__udivmoddi4+0xba>
    d7d6:	b10d      	cbz	r5, d7dc <__udivmoddi4+0xb4>
    d7d8:	e9c5 0100 	strd	r0, r1, [r5]
    d7dc:	2100      	movs	r1, #0
    d7de:	4608      	mov	r0, r1
    d7e0:	e7f5      	b.n	d7ce <__udivmoddi4+0xa6>
    d7e2:	fab3 f183 	clz	r1, r3
    d7e6:	2900      	cmp	r1, #0
    d7e8:	d146      	bne.n	d878 <__udivmoddi4+0x150>
    d7ea:	42a3      	cmp	r3, r4
    d7ec:	d302      	bcc.n	d7f4 <__udivmoddi4+0xcc>
    d7ee:	4290      	cmp	r0, r2
    d7f0:	f0c0 80f1 	bcc.w	d9d6 <__udivmoddi4+0x2ae>
    d7f4:	1a86      	subs	r6, r0, r2
    d7f6:	eb64 0303 	sbc.w	r3, r4, r3
    d7fa:	2001      	movs	r0, #1
    d7fc:	2d00      	cmp	r5, #0
    d7fe:	d0e6      	beq.n	d7ce <__udivmoddi4+0xa6>
    d800:	e9c5 6300 	strd	r6, r3, [r5]
    d804:	e7e3      	b.n	d7ce <__udivmoddi4+0xa6>
    d806:	2a00      	cmp	r2, #0
    d808:	f040 8091 	bne.w	d92e <__udivmoddi4+0x206>
    d80c:	eba1 040c 	sub.w	r4, r1, ip
    d810:	ea4f 481c 	mov.w	r8, ip, lsr #16
    d814:	fa1f f78c 	uxth.w	r7, ip
    d818:	2101      	movs	r1, #1
    d81a:	fbb4 f6f8 	udiv	r6, r4, r8
    d81e:	ea4f 431e 	mov.w	r3, lr, lsr #16
    d822:	fb08 4416 	mls	r4, r8, r6, r4
    d826:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
    d82a:	fb07 f006 	mul.w	r0, r7, r6
    d82e:	4298      	cmp	r0, r3
    d830:	d908      	bls.n	d844 <__udivmoddi4+0x11c>
    d832:	eb1c 0303 	adds.w	r3, ip, r3
    d836:	f106 34ff 	add.w	r4, r6, #4294967295	; 0xffffffff
    d83a:	d202      	bcs.n	d842 <__udivmoddi4+0x11a>
    d83c:	4298      	cmp	r0, r3
    d83e:	f200 80ce 	bhi.w	d9de <__udivmoddi4+0x2b6>
    d842:	4626      	mov	r6, r4
    d844:	1a1c      	subs	r4, r3, r0
    d846:	fa1f f38e 	uxth.w	r3, lr
    d84a:	fbb4 f0f8 	udiv	r0, r4, r8
    d84e:	fb08 4410 	mls	r4, r8, r0, r4
    d852:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
    d856:	fb00 f707 	mul.w	r7, r0, r7
    d85a:	429f      	cmp	r7, r3
    d85c:	d908      	bls.n	d870 <__udivmoddi4+0x148>
    d85e:	eb1c 0303 	adds.w	r3, ip, r3
    d862:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
    d866:	d202      	bcs.n	d86e <__udivmoddi4+0x146>
    d868:	429f      	cmp	r7, r3
    d86a:	f200 80b1 	bhi.w	d9d0 <__udivmoddi4+0x2a8>
    d86e:	4620      	mov	r0, r4
    d870:	1bdb      	subs	r3, r3, r7
    d872:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
    d876:	e7a5      	b.n	d7c4 <__udivmoddi4+0x9c>
    d878:	f1c1 0620 	rsb	r6, r1, #32
    d87c:	408b      	lsls	r3, r1
    d87e:	fa22 f706 	lsr.w	r7, r2, r6
    d882:	431f      	orrs	r7, r3
    d884:	fa20 fc06 	lsr.w	ip, r0, r6
    d888:	fa04 f301 	lsl.w	r3, r4, r1
    d88c:	ea43 030c 	orr.w	r3, r3, ip
    d890:	40f4      	lsrs	r4, r6
    d892:	fa00 f801 	lsl.w	r8, r0, r1
    d896:	0c38      	lsrs	r0, r7, #16
    d898:	ea4f 4913 	mov.w	r9, r3, lsr #16
    d89c:	fbb4 fef0 	udiv	lr, r4, r0
    d8a0:	fa1f fc87 	uxth.w	ip, r7
    d8a4:	fb00 441e 	mls	r4, r0, lr, r4
    d8a8:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
    d8ac:	fb0e f90c 	mul.w	r9, lr, ip
    d8b0:	45a1      	cmp	r9, r4
    d8b2:	fa02 f201 	lsl.w	r2, r2, r1
    d8b6:	d90a      	bls.n	d8ce <__udivmoddi4+0x1a6>
    d8b8:	193c      	adds	r4, r7, r4
    d8ba:	f10e 3aff 	add.w	sl, lr, #4294967295	; 0xffffffff
    d8be:	f080 8085 	bcs.w	d9cc <__udivmoddi4+0x2a4>
    d8c2:	45a1      	cmp	r9, r4
    d8c4:	f240 8082 	bls.w	d9cc <__udivmoddi4+0x2a4>
    d8c8:	f1ae 0e02 	sub.w	lr, lr, #2
    d8cc:	443c      	add	r4, r7
    d8ce:	eba4 0409 	sub.w	r4, r4, r9
    d8d2:	fa1f f983 	uxth.w	r9, r3
    d8d6:	fbb4 f3f0 	udiv	r3, r4, r0
    d8da:	fb00 4413 	mls	r4, r0, r3, r4
    d8de:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
    d8e2:	fb03 fc0c 	mul.w	ip, r3, ip
    d8e6:	45a4      	cmp	ip, r4
    d8e8:	d907      	bls.n	d8fa <__udivmoddi4+0x1d2>
    d8ea:	193c      	adds	r4, r7, r4
    d8ec:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
    d8f0:	d268      	bcs.n	d9c4 <__udivmoddi4+0x29c>
    d8f2:	45a4      	cmp	ip, r4
    d8f4:	d966      	bls.n	d9c4 <__udivmoddi4+0x29c>
    d8f6:	3b02      	subs	r3, #2
    d8f8:	443c      	add	r4, r7
    d8fa:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
    d8fe:	fba0 9302 	umull	r9, r3, r0, r2
    d902:	eba4 040c 	sub.w	r4, r4, ip
    d906:	429c      	cmp	r4, r3
    d908:	46ce      	mov	lr, r9
    d90a:	469c      	mov	ip, r3
    d90c:	d352      	bcc.n	d9b4 <__udivmoddi4+0x28c>
    d90e:	d04f      	beq.n	d9b0 <__udivmoddi4+0x288>
    d910:	b155      	cbz	r5, d928 <__udivmoddi4+0x200>
    d912:	ebb8 030e 	subs.w	r3, r8, lr
    d916:	eb64 040c 	sbc.w	r4, r4, ip
    d91a:	fa04 f606 	lsl.w	r6, r4, r6
    d91e:	40cb      	lsrs	r3, r1
    d920:	40cc      	lsrs	r4, r1
    d922:	431e      	orrs	r6, r3
    d924:	e9c5 6400 	strd	r6, r4, [r5]
    d928:	2100      	movs	r1, #0
    d92a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    d92e:	f1c2 0320 	rsb	r3, r2, #32
    d932:	fa20 f103 	lsr.w	r1, r0, r3
    d936:	fa0c fc02 	lsl.w	ip, ip, r2
    d93a:	fa24 f303 	lsr.w	r3, r4, r3
    d93e:	4094      	lsls	r4, r2
    d940:	430c      	orrs	r4, r1
    d942:	ea4f 481c 	mov.w	r8, ip, lsr #16
    d946:	fa00 fe02 	lsl.w	lr, r0, r2
    d94a:	fa1f f78c 	uxth.w	r7, ip
    d94e:	fbb3 f0f8 	udiv	r0, r3, r8
    d952:	fb08 3110 	mls	r1, r8, r0, r3
    d956:	0c23      	lsrs	r3, r4, #16
    d958:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    d95c:	fb00 f107 	mul.w	r1, r0, r7
    d960:	4299      	cmp	r1, r3
    d962:	d908      	bls.n	d976 <__udivmoddi4+0x24e>
    d964:	eb1c 0303 	adds.w	r3, ip, r3
    d968:	f100 36ff 	add.w	r6, r0, #4294967295	; 0xffffffff
    d96c:	d22c      	bcs.n	d9c8 <__udivmoddi4+0x2a0>
    d96e:	4299      	cmp	r1, r3
    d970:	d92a      	bls.n	d9c8 <__udivmoddi4+0x2a0>
    d972:	3802      	subs	r0, #2
    d974:	4463      	add	r3, ip
    d976:	1a5b      	subs	r3, r3, r1
    d978:	b2a4      	uxth	r4, r4
    d97a:	fbb3 f1f8 	udiv	r1, r3, r8
    d97e:	fb08 3311 	mls	r3, r8, r1, r3
    d982:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    d986:	fb01 f307 	mul.w	r3, r1, r7
    d98a:	42a3      	cmp	r3, r4
    d98c:	d908      	bls.n	d9a0 <__udivmoddi4+0x278>
    d98e:	eb1c 0404 	adds.w	r4, ip, r4
    d992:	f101 36ff 	add.w	r6, r1, #4294967295	; 0xffffffff
    d996:	d213      	bcs.n	d9c0 <__udivmoddi4+0x298>
    d998:	42a3      	cmp	r3, r4
    d99a:	d911      	bls.n	d9c0 <__udivmoddi4+0x298>
    d99c:	3902      	subs	r1, #2
    d99e:	4464      	add	r4, ip
    d9a0:	1ae4      	subs	r4, r4, r3
    d9a2:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
    d9a6:	e738      	b.n	d81a <__udivmoddi4+0xf2>
    d9a8:	4604      	mov	r4, r0
    d9aa:	e6ef      	b.n	d78c <__udivmoddi4+0x64>
    d9ac:	4608      	mov	r0, r1
    d9ae:	e705      	b.n	d7bc <__udivmoddi4+0x94>
    d9b0:	45c8      	cmp	r8, r9
    d9b2:	d2ad      	bcs.n	d910 <__udivmoddi4+0x1e8>
    d9b4:	ebb9 0e02 	subs.w	lr, r9, r2
    d9b8:	eb63 0c07 	sbc.w	ip, r3, r7
    d9bc:	3801      	subs	r0, #1
    d9be:	e7a7      	b.n	d910 <__udivmoddi4+0x1e8>
    d9c0:	4631      	mov	r1, r6
    d9c2:	e7ed      	b.n	d9a0 <__udivmoddi4+0x278>
    d9c4:	4603      	mov	r3, r0
    d9c6:	e798      	b.n	d8fa <__udivmoddi4+0x1d2>
    d9c8:	4630      	mov	r0, r6
    d9ca:	e7d4      	b.n	d976 <__udivmoddi4+0x24e>
    d9cc:	46d6      	mov	lr, sl
    d9ce:	e77e      	b.n	d8ce <__udivmoddi4+0x1a6>
    d9d0:	4463      	add	r3, ip
    d9d2:	3802      	subs	r0, #2
    d9d4:	e74c      	b.n	d870 <__udivmoddi4+0x148>
    d9d6:	4606      	mov	r6, r0
    d9d8:	4623      	mov	r3, r4
    d9da:	4608      	mov	r0, r1
    d9dc:	e70e      	b.n	d7fc <__udivmoddi4+0xd4>
    d9de:	3e02      	subs	r6, #2
    d9e0:	4463      	add	r3, ip
    d9e2:	e72f      	b.n	d844 <__udivmoddi4+0x11c>

0000d9e4 <am_hal_burst_mode_initialize>:
    d9e4:	b570      	push	{r4, r5, r6, lr}
    d9e6:	4b1c      	ldr	r3, [pc, #112]	; (da58 <am_hal_burst_mode_initialize+0x74>)
    d9e8:	695b      	ldr	r3, [r3, #20]
    d9ea:	4604      	mov	r4, r0
    d9ec:	07d8      	lsls	r0, r3, #31
    d9ee:	b082      	sub	sp, #8
    d9f0:	d521      	bpl.n	da36 <am_hal_burst_mode_initialize+0x52>
    d9f2:	4b1a      	ldr	r3, [pc, #104]	; (da5c <am_hal_burst_mode_initialize+0x78>)
    d9f4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    d9f6:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
    d9fa:	629a      	str	r2, [r3, #40]	; 0x28
    d9fc:	681b      	ldr	r3, [r3, #0]
    d9fe:	07d9      	lsls	r1, r3, #31
    da00:	d427      	bmi.n	da52 <am_hal_burst_mode_initialize+0x6e>
    da02:	4d15      	ldr	r5, [pc, #84]	; (da58 <am_hal_burst_mode_initialize+0x74>)
    da04:	4916      	ldr	r1, [pc, #88]	; (da60 <am_hal_burst_mode_initialize+0x7c>)
    da06:	7e2a      	ldrb	r2, [r5, #24]
    da08:	2601      	movs	r6, #1
    da0a:	f042 0210 	orr.w	r2, r2, #16
    da0e:	2320      	movs	r3, #32
    da10:	762a      	strb	r2, [r5, #24]
    da12:	f242 7010 	movw	r0, #10000	; 0x2710
    da16:	461a      	mov	r2, r3
    da18:	9600      	str	r6, [sp, #0]
    da1a:	f000 f9ab 	bl	dd74 <am_hal_flash_delay_status_check>
    da1e:	b990      	cbnz	r0, da46 <am_hal_burst_mode_initialize+0x62>
    da20:	69ab      	ldr	r3, [r5, #24]
    da22:	065a      	lsls	r2, r3, #25
    da24:	d507      	bpl.n	da36 <am_hal_burst_mode_initialize+0x52>
    da26:	69ab      	ldr	r3, [r5, #24]
    da28:	069b      	lsls	r3, r3, #26
    da2a:	d504      	bpl.n	da36 <am_hal_burst_mode_initialize+0x52>
    da2c:	4b0d      	ldr	r3, [pc, #52]	; (da64 <am_hal_burst_mode_initialize+0x80>)
    da2e:	701e      	strb	r6, [r3, #0]
    da30:	7020      	strb	r0, [r4, #0]
    da32:	b002      	add	sp, #8
    da34:	bd70      	pop	{r4, r5, r6, pc}
    da36:	4a0b      	ldr	r2, [pc, #44]	; (da64 <am_hal_burst_mode_initialize+0x80>)
    da38:	2100      	movs	r1, #0
    da3a:	2301      	movs	r3, #1
    da3c:	2007      	movs	r0, #7
    da3e:	7011      	strb	r1, [r2, #0]
    da40:	7023      	strb	r3, [r4, #0]
    da42:	b002      	add	sp, #8
    da44:	bd70      	pop	{r4, r5, r6, pc}
    da46:	4b07      	ldr	r3, [pc, #28]	; (da64 <am_hal_burst_mode_initialize+0x80>)
    da48:	2200      	movs	r2, #0
    da4a:	701a      	strb	r2, [r3, #0]
    da4c:	7026      	strb	r6, [r4, #0]
    da4e:	b002      	add	sp, #8
    da50:	bd70      	pop	{r4, r5, r6, pc}
    da52:	f000 fbd9 	bl	e208 <am_hal_pwrctrl_blebuck_trim>
    da56:	e7d4      	b.n	da02 <am_hal_burst_mode_initialize+0x1e>
    da58:	40020000 	.word	0x40020000
    da5c:	40021000 	.word	0x40021000
    da60:	40020018 	.word	0x40020018
    da64:	10000a68 	.word	0x10000a68

0000da68 <am_hal_burst_mode_enable>:
    da68:	b570      	push	{r4, r5, r6, lr}
    da6a:	4b15      	ldr	r3, [pc, #84]	; (dac0 <am_hal_burst_mode_enable+0x58>)
    da6c:	781b      	ldrb	r3, [r3, #0]
    da6e:	b082      	sub	sp, #8
    da70:	4604      	mov	r4, r0
    da72:	b1db      	cbz	r3, daac <am_hal_burst_mode_enable+0x44>
    da74:	f04f 2540 	mov.w	r5, #1073758208	; 0x40004000
    da78:	2601      	movs	r6, #1
    da7a:	f895 2034 	ldrb.w	r2, [r5, #52]	; 0x34
    da7e:	4911      	ldr	r1, [pc, #68]	; (dac4 <am_hal_burst_mode_enable+0x5c>)
    da80:	4332      	orrs	r2, r6
    da82:	2304      	movs	r3, #4
    da84:	f885 2034 	strb.w	r2, [r5, #52]	; 0x34
    da88:	f242 7010 	movw	r0, #10000	; 0x2710
    da8c:	461a      	mov	r2, r3
    da8e:	9600      	str	r6, [sp, #0]
    da90:	f000 f970 	bl	dd74 <am_hal_flash_delay_status_check>
    da94:	b938      	cbnz	r0, daa6 <am_hal_burst_mode_enable+0x3e>
    da96:	6b6b      	ldr	r3, [r5, #52]	; 0x34
    da98:	079b      	lsls	r3, r3, #30
    da9a:	d50c      	bpl.n	dab6 <am_hal_burst_mode_enable+0x4e>
    da9c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
    da9e:	f013 0f04 	tst.w	r3, #4
    daa2:	bf18      	it	ne
    daa4:	4606      	movne	r6, r0
    daa6:	7026      	strb	r6, [r4, #0]
    daa8:	b002      	add	sp, #8
    daaa:	bd70      	pop	{r4, r5, r6, pc}
    daac:	2301      	movs	r3, #1
    daae:	7003      	strb	r3, [r0, #0]
    dab0:	2007      	movs	r0, #7
    dab2:	b002      	add	sp, #8
    dab4:	bd70      	pop	{r4, r5, r6, pc}
    dab6:	4630      	mov	r0, r6
    dab8:	7026      	strb	r6, [r4, #0]
    daba:	b002      	add	sp, #8
    dabc:	bd70      	pop	{r4, r5, r6, pc}
    dabe:	bf00      	nop
    dac0:	10000a68 	.word	0x10000a68
    dac4:	40004034 	.word	0x40004034

0000dac8 <am_hal_burst_mode_disable>:
    dac8:	b530      	push	{r4, r5, lr}
    daca:	b085      	sub	sp, #20
    dacc:	4605      	mov	r5, r0
    dace:	f000 fb3d 	bl	e14c <am_hal_interrupt_master_disable>
    dad2:	2100      	movs	r1, #0
    dad4:	4603      	mov	r3, r0
    dad6:	4810      	ldr	r0, [pc, #64]	; (db18 <am_hal_burst_mode_disable+0x50>)
    dad8:	9303      	str	r3, [sp, #12]
    dada:	f000 f985 	bl	dde8 <am_hal_flash_store_ui32>
    dade:	9803      	ldr	r0, [sp, #12]
    dae0:	f000 fb38 	bl	e154 <am_hal_interrupt_master_set>
    dae4:	4b0d      	ldr	r3, [pc, #52]	; (db1c <am_hal_burst_mode_disable+0x54>)
    dae6:	490c      	ldr	r1, [pc, #48]	; (db18 <am_hal_burst_mode_disable+0x50>)
    dae8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    daea:	2401      	movs	r4, #1
    daec:	f36f 72df 	bfc	r2, #31, #1
    daf0:	629a      	str	r2, [r3, #40]	; 0x28
    daf2:	f242 7010 	movw	r0, #10000	; 0x2710
    daf6:	2300      	movs	r3, #0
    daf8:	9400      	str	r4, [sp, #0]
    dafa:	2204      	movs	r2, #4
    dafc:	f000 f93a 	bl	dd74 <am_hal_flash_delay_status_check>
    db00:	b930      	cbnz	r0, db10 <am_hal_burst_mode_disable+0x48>
    db02:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    db06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    db08:	f013 0f04 	tst.w	r3, #4
    db0c:	bf18      	it	ne
    db0e:	4604      	movne	r4, r0
    db10:	702c      	strb	r4, [r5, #0]
    db12:	b005      	add	sp, #20
    db14:	bd30      	pop	{r4, r5, pc}
    db16:	bf00      	nop
    db18:	40004034 	.word	0x40004034
    db1c:	40021000 	.word	0x40021000

0000db20 <am_hal_cachectrl_config>:
    db20:	b530      	push	{r4, r5, lr}
    db22:	b083      	sub	sp, #12
    db24:	4604      	mov	r4, r0
    db26:	f000 fb11 	bl	e14c <am_hal_interrupt_master_disable>
    db2a:	4d0e      	ldr	r5, [pc, #56]	; (db64 <am_hal_cachectrl_config+0x44>)
    db2c:	9001      	str	r0, [sp, #4]
    db2e:	682b      	ldr	r3, [r5, #0]
    db30:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    db34:	602b      	str	r3, [r5, #0]
    db36:	9801      	ldr	r0, [sp, #4]
    db38:	f000 fb0c 	bl	e154 <am_hal_interrupt_master_set>
    db3c:	7863      	ldrb	r3, [r4, #1]
    db3e:	7822      	ldrb	r2, [r4, #0]
    db40:	78a1      	ldrb	r1, [r4, #2]
    db42:	021b      	lsls	r3, r3, #8
    db44:	f403 7340 	and.w	r3, r3, #768	; 0x300
    db48:	0112      	lsls	r2, r2, #4
    db4a:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    db4e:	b2d2      	uxtb	r2, r2
    db50:	4313      	orrs	r3, r2
    db52:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    db56:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
    db5a:	2000      	movs	r0, #0
    db5c:	602b      	str	r3, [r5, #0]
    db5e:	b003      	add	sp, #12
    db60:	bd30      	pop	{r4, r5, pc}
    db62:	bf00      	nop
    db64:	40018000 	.word	0x40018000

0000db68 <am_hal_cachectrl_enable>:
    db68:	4a03      	ldr	r2, [pc, #12]	; (db78 <am_hal_cachectrl_enable+0x10>)
    db6a:	6813      	ldr	r3, [r2, #0]
    db6c:	f043 0301 	orr.w	r3, r3, #1
    db70:	6013      	str	r3, [r2, #0]
    db72:	2000      	movs	r0, #0
    db74:	4770      	bx	lr
    db76:	bf00      	nop
    db78:	40018000 	.word	0x40018000

0000db7c <am_hal_clkgen_control>:
    db7c:	4b49      	ldr	r3, [pc, #292]	; (dca4 <am_hal_clkgen_control+0x128>)
    db7e:	681a      	ldr	r2, [r3, #0]
    db80:	b912      	cbnz	r2, db88 <am_hal_clkgen_control+0xc>
    db82:	4a49      	ldr	r2, [pc, #292]	; (dca8 <am_hal_clkgen_control+0x12c>)
    db84:	6812      	ldr	r2, [r2, #0]
    db86:	601a      	str	r2, [r3, #0]
    db88:	2809      	cmp	r0, #9
    db8a:	f200 8089 	bhi.w	dca0 <am_hal_clkgen_control+0x124>
    db8e:	e8df f000 	tbb	[pc, r0]
    db92:	160d      	.short	0x160d
    db94:	423a261e 	.word	0x423a261e
    db98:	055c544c 	.word	0x055c544c
    db9c:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    dba0:	2000      	movs	r0, #0
    dba2:	6a1a      	ldr	r2, [r3, #32]
    dba4:	f36f 0200 	bfc	r2, #0, #1
    dba8:	621a      	str	r2, [r3, #32]
    dbaa:	4770      	bx	lr
    dbac:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    dbb0:	2200      	movs	r2, #0
    dbb2:	2147      	movs	r1, #71	; 0x47
    dbb4:	6159      	str	r1, [r3, #20]
    dbb6:	4610      	mov	r0, r2
    dbb8:	619a      	str	r2, [r3, #24]
    dbba:	615a      	str	r2, [r3, #20]
    dbbc:	4770      	bx	lr
    dbbe:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    dbc2:	2000      	movs	r0, #0
    dbc4:	899a      	ldrh	r2, [r3, #12]
    dbc6:	f36f 0200 	bfc	r2, #0, #1
    dbca:	819a      	strh	r2, [r3, #12]
    dbcc:	4770      	bx	lr
    dbce:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    dbd2:	2000      	movs	r0, #0
    dbd4:	899a      	ldrh	r2, [r3, #12]
    dbd6:	f36f 0241 	bfc	r2, #1, #1
    dbda:	819a      	strh	r2, [r3, #12]
    dbdc:	4770      	bx	lr
    dbde:	4a33      	ldr	r2, [pc, #204]	; (dcac <am_hal_clkgen_control+0x130>)
    dbe0:	68d3      	ldr	r3, [r2, #12]
    dbe2:	b2db      	uxtb	r3, r3
    dbe4:	2b21      	cmp	r3, #33	; 0x21
    dbe6:	d106      	bne.n	dbf6 <am_hal_clkgen_control+0x7a>
    dbe8:	f8b2 3120 	ldrh.w	r3, [r2, #288]	; 0x120
    dbec:	2101      	movs	r1, #1
    dbee:	f361 2309 	bfi	r3, r1, #8, #2
    dbf2:	f8a2 3120 	strh.w	r3, [r2, #288]	; 0x120
    dbf6:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    dbfa:	2000      	movs	r0, #0
    dbfc:	8993      	ldrh	r3, [r2, #12]
    dbfe:	f043 0301 	orr.w	r3, r3, #1
    dc02:	8193      	strh	r3, [r2, #12]
    dc04:	4770      	bx	lr
    dc06:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    dc0a:	2000      	movs	r0, #0
    dc0c:	8993      	ldrh	r3, [r2, #12]
    dc0e:	f043 0302 	orr.w	r3, r3, #2
    dc12:	8193      	strh	r3, [r2, #12]
    dc14:	4770      	bx	lr
    dc16:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    dc1a:	2200      	movs	r2, #0
    dc1c:	2047      	movs	r0, #71	; 0x47
    dc1e:	2101      	movs	r1, #1
    dc20:	6158      	str	r0, [r3, #20]
    dc22:	6199      	str	r1, [r3, #24]
    dc24:	4610      	mov	r0, r2
    dc26:	615a      	str	r2, [r3, #20]
    dc28:	4770      	bx	lr
    dc2a:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    dc2e:	2000      	movs	r0, #0
    dc30:	899a      	ldrh	r2, [r3, #12]
    dc32:	f36f 12c7 	bfc	r2, #7, #1
    dc36:	819a      	strh	r2, [r3, #12]
    dc38:	4770      	bx	lr
    dc3a:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    dc3e:	2000      	movs	r0, #0
    dc40:	8993      	ldrh	r3, [r2, #12]
    dc42:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    dc46:	8193      	strh	r3, [r2, #12]
    dc48:	4770      	bx	lr
    dc4a:	4a18      	ldr	r2, [pc, #96]	; (dcac <am_hal_clkgen_control+0x130>)
    dc4c:	68d3      	ldr	r3, [r2, #12]
    dc4e:	b2db      	uxtb	r3, r3
    dc50:	2b21      	cmp	r3, #33	; 0x21
    dc52:	d00a      	beq.n	dc6a <am_hal_clkgen_control+0xee>
    dc54:	b139      	cbz	r1, dc66 <am_hal_clkgen_control+0xea>
    dc56:	680b      	ldr	r3, [r1, #0]
    dc58:	f043 0301 	orr.w	r3, r3, #1
    dc5c:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    dc60:	2000      	movs	r0, #0
    dc62:	6213      	str	r3, [r2, #32]
    dc64:	4770      	bx	lr
    dc66:	4b12      	ldr	r3, [pc, #72]	; (dcb0 <am_hal_clkgen_control+0x134>)
    dc68:	e7f8      	b.n	dc5c <am_hal_clkgen_control+0xe0>
    dc6a:	b500      	push	{lr}
    dc6c:	b083      	sub	sp, #12
    dc6e:	f44f 507a 	mov.w	r0, #16000	; 0x3e80
    dc72:	9101      	str	r1, [sp, #4]
    dc74:	f8b2 3120 	ldrh.w	r3, [r2, #288]	; 0x120
    dc78:	f443 7340 	orr.w	r3, r3, #768	; 0x300
    dc7c:	f8a2 3120 	strh.w	r3, [r2, #288]	; 0x120
    dc80:	f000 f868 	bl	dd54 <am_hal_flash_delay>
    dc84:	9901      	ldr	r1, [sp, #4]
    dc86:	b149      	cbz	r1, dc9c <am_hal_clkgen_control+0x120>
    dc88:	680b      	ldr	r3, [r1, #0]
    dc8a:	f043 0301 	orr.w	r3, r3, #1
    dc8e:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    dc92:	2000      	movs	r0, #0
    dc94:	6213      	str	r3, [r2, #32]
    dc96:	b003      	add	sp, #12
    dc98:	f85d fb04 	ldr.w	pc, [sp], #4
    dc9c:	4b04      	ldr	r3, [pc, #16]	; (dcb0 <am_hal_clkgen_control+0x134>)
    dc9e:	e7f6      	b.n	dc8e <am_hal_clkgen_control+0x112>
    dca0:	2006      	movs	r0, #6
    dca2:	4770      	bx	lr
    dca4:	10000a6c 	.word	0x10000a6c
    dca8:	4ffff000 	.word	0x4ffff000
    dcac:	40020000 	.word	0x40020000
    dcb0:	0025b801 	.word	0x0025b801

0000dcb4 <am_hal_clkgen_status_get>:
    dcb4:	b1a8      	cbz	r0, dce2 <am_hal_clkgen_status_get+0x2e>
    dcb6:	b410      	push	{r4}
    dcb8:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    dcbc:	490a      	ldr	r1, [pc, #40]	; (dce8 <am_hal_clkgen_status_get+0x34>)
    dcbe:	6994      	ldr	r4, [r2, #24]
    dcc0:	4b0a      	ldr	r3, [pc, #40]	; (dcec <am_hal_clkgen_status_get+0x38>)
    dcc2:	f014 0f01 	tst.w	r4, #1
    dcc6:	bf08      	it	eq
    dcc8:	460b      	moveq	r3, r1
    dcca:	6003      	str	r3, [r0, #0]
    dccc:	69d3      	ldr	r3, [r2, #28]
    dcce:	f85d 4b04 	ldr.w	r4, [sp], #4
    dcd2:	f003 0201 	and.w	r2, r3, #1
    dcd6:	f3c3 0340 	ubfx	r3, r3, #1, #1
    dcda:	6042      	str	r2, [r0, #4]
    dcdc:	7203      	strb	r3, [r0, #8]
    dcde:	2000      	movs	r0, #0
    dce0:	4770      	bx	lr
    dce2:	2006      	movs	r0, #6
    dce4:	4770      	bx	lr
    dce6:	bf00      	nop
    dce8:	02dc6c00 	.word	0x02dc6c00
    dcec:	016e3600 	.word	0x016e3600

0000dcf0 <am_hal_flash_page_erase>:
    dcf0:	4b00      	ldr	r3, [pc, #0]	; (dcf4 <am_hal_flash_page_erase+0x4>)
    dcf2:	4718      	bx	r3
    dcf4:	08000051 	.word	0x08000051

0000dcf8 <am_hal_flash_program_main>:
    dcf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    dcfc:	4e12      	ldr	r6, [pc, #72]	; (dd48 <am_hal_flash_program_main+0x50>)
    dcfe:	eb01 0583 	add.w	r5, r1, r3, lsl #2
    dd02:	42b5      	cmp	r5, r6
    dd04:	b082      	sub	sp, #8
    dd06:	d004      	beq.n	dd12 <am_hal_flash_program_main+0x1a>
    dd08:	4c10      	ldr	r4, [pc, #64]	; (dd4c <am_hal_flash_program_main+0x54>)
    dd0a:	47a0      	blx	r4
    dd0c:	b002      	add	sp, #8
    dd0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    dd12:	2b01      	cmp	r3, #1
    dd14:	461c      	mov	r4, r3
    dd16:	4680      	mov	r8, r0
    dd18:	4617      	mov	r7, r2
    dd1a:	d904      	bls.n	dd26 <am_hal_flash_program_main+0x2e>
    dd1c:	4d0b      	ldr	r5, [pc, #44]	; (dd4c <am_hal_flash_program_main+0x54>)
    dd1e:	3b01      	subs	r3, #1
    dd20:	47a8      	blx	r5
    dd22:	2800      	cmp	r0, #0
    dd24:	d1f2      	bne.n	dd0c <am_hal_flash_program_main+0x14>
    dd26:	4b0a      	ldr	r3, [pc, #40]	; (dd50 <am_hal_flash_program_main+0x58>)
    dd28:	4d08      	ldr	r5, [pc, #32]	; (dd4c <am_hal_flash_program_main+0x54>)
    dd2a:	681b      	ldr	r3, [r3, #0]
    dd2c:	9301      	str	r3, [sp, #4]
    dd2e:	f104 4280 	add.w	r2, r4, #1073741824	; 0x40000000
    dd32:	3a01      	subs	r2, #1
    dd34:	eb07 0282 	add.w	r2, r7, r2, lsl #2
    dd38:	4640      	mov	r0, r8
    dd3a:	2301      	movs	r3, #1
    dd3c:	a901      	add	r1, sp, #4
    dd3e:	47a8      	blx	r5
    dd40:	b002      	add	sp, #8
    dd42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    dd46:	bf00      	nop
    dd48:	10060000 	.word	0x10060000
    dd4c:	08000055 	.word	0x08000055
    dd50:	1005fffc 	.word	0x1005fffc

0000dd54 <am_hal_flash_delay>:
    dd54:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    dd58:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    dd5a:	075b      	lsls	r3, r3, #29
    dd5c:	bf46      	itte	mi
    dd5e:	0040      	lslmi	r0, r0, #1
    dd60:	230e      	movmi	r3, #14
    dd62:	230b      	movpl	r3, #11
    dd64:	4298      	cmp	r0, r3
    dd66:	d902      	bls.n	dd6e <am_hal_flash_delay+0x1a>
    dd68:	1ac0      	subs	r0, r0, r3
    dd6a:	4b01      	ldr	r3, [pc, #4]	; (dd70 <am_hal_flash_delay+0x1c>)
    dd6c:	4718      	bx	r3
    dd6e:	4770      	bx	lr
    dd70:	0800009d 	.word	0x0800009d

0000dd74 <am_hal_flash_delay_status_check>:
    dd74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    dd78:	f89d c020 	ldrb.w	ip, [sp, #32]
    dd7c:	4604      	mov	r4, r0
    dd7e:	460d      	mov	r5, r1
    dd80:	4616      	mov	r6, r2
    dd82:	461f      	mov	r7, r3
    dd84:	f1bc 0f00 	cmp.w	ip, #0
    dd88:	d015      	beq.n	ddb6 <am_hal_flash_delay_status_check+0x42>
    dd8a:	f8df 8058 	ldr.w	r8, [pc, #88]	; dde4 <am_hal_flash_delay_status_check+0x70>
    dd8e:	f04f 2940 	mov.w	r9, #1073758208	; 0x40004000
    dd92:	e009      	b.n	dda8 <am_hal_flash_delay_status_check+0x34>
    dd94:	b31c      	cbz	r4, ddde <am_hal_flash_delay_status_check+0x6a>
    dd96:	f8d9 3034 	ldr.w	r3, [r9, #52]	; 0x34
    dd9a:	f013 0f04 	tst.w	r3, #4
    dd9e:	bf0c      	ite	eq
    dda0:	2005      	moveq	r0, #5
    dda2:	2012      	movne	r0, #18
    dda4:	3c01      	subs	r4, #1
    dda6:	47c0      	blx	r8
    dda8:	6828      	ldr	r0, [r5, #0]
    ddaa:	4030      	ands	r0, r6
    ddac:	42b8      	cmp	r0, r7
    ddae:	d1f1      	bne.n	dd94 <am_hal_flash_delay_status_check+0x20>
    ddb0:	2000      	movs	r0, #0
    ddb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    ddb6:	f8df 902c 	ldr.w	r9, [pc, #44]	; dde4 <am_hal_flash_delay_status_check+0x70>
    ddba:	f04f 2840 	mov.w	r8, #1073758208	; 0x40004000
    ddbe:	e009      	b.n	ddd4 <am_hal_flash_delay_status_check+0x60>
    ddc0:	b16c      	cbz	r4, ddde <am_hal_flash_delay_status_check+0x6a>
    ddc2:	f8d8 3034 	ldr.w	r3, [r8, #52]	; 0x34
    ddc6:	f013 0f04 	tst.w	r3, #4
    ddca:	bf0c      	ite	eq
    ddcc:	2005      	moveq	r0, #5
    ddce:	2012      	movne	r0, #18
    ddd0:	3c01      	subs	r4, #1
    ddd2:	47c8      	blx	r9
    ddd4:	6828      	ldr	r0, [r5, #0]
    ddd6:	4030      	ands	r0, r6
    ddd8:	42b8      	cmp	r0, r7
    ddda:	d0f1      	beq.n	ddc0 <am_hal_flash_delay_status_check+0x4c>
    dddc:	e7e8      	b.n	ddb0 <am_hal_flash_delay_status_check+0x3c>
    ddde:	2004      	movs	r0, #4
    dde0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    dde4:	0800009d 	.word	0x0800009d

0000dde8 <am_hal_flash_store_ui32>:
    dde8:	4b01      	ldr	r3, [pc, #4]	; (ddf0 <am_hal_flash_store_ui32+0x8>)
    ddea:	f043 0301 	orr.w	r3, r3, #1
    ddee:	4718      	bx	r3
    ddf0:	10000204 	.word	0x10000204

0000ddf4 <am_hal_gpio_pinconfig>:
    ddf4:	2831      	cmp	r0, #49	; 0x31
    ddf6:	f200 80bc 	bhi.w	df72 <am_hal_gpio_pinconfig+0x17e>
    ddfa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ddfe:	4604      	mov	r4, r0
    de00:	f011 07e0 	ands.w	r7, r1, #224	; 0xe0
    de04:	f001 0007 	and.w	r0, r1, #7
    de08:	b085      	sub	sp, #20
    de0a:	ea4f 02c0 	mov.w	r2, r0, lsl #3
    de0e:	f3c1 03c1 	ubfx	r3, r1, #3, #2
    de12:	d00f      	beq.n	de34 <am_hal_gpio_pinconfig+0x40>
    de14:	f3c1 1642 	ubfx	r6, r1, #5, #3
    de18:	1db5      	adds	r5, r6, #6
    de1a:	f005 0507 	and.w	r5, r5, #7
    de1e:	2d03      	cmp	r5, #3
    de20:	f042 0201 	orr.w	r2, r2, #1
    de24:	f240 80a7 	bls.w	df76 <am_hal_gpio_pinconfig+0x182>
    de28:	2fc0      	cmp	r7, #192	; 0xc0
    de2a:	f000 80eb 	beq.w	e004 <am_hal_gpio_pinconfig+0x210>
    de2e:	2f20      	cmp	r7, #32
    de30:	f000 80ed 	beq.w	e00e <am_hal_gpio_pinconfig+0x21a>
    de34:	b163      	cbz	r3, de50 <am_hal_gpio_pinconfig+0x5c>
    de36:	2b01      	cmp	r3, #1
    de38:	f000 80dd 	beq.w	dff6 <am_hal_gpio_pinconfig+0x202>
    de3c:	2b02      	cmp	r3, #2
    de3e:	f040 80c3 	bne.w	dfc8 <am_hal_gpio_pinconfig+0x1d4>
    de42:	4b7e      	ldr	r3, [pc, #504]	; (e03c <am_hal_gpio_pinconfig+0x248>)
    de44:	5d1b      	ldrb	r3, [r3, r4]
    de46:	075b      	lsls	r3, r3, #29
    de48:	f140 80be 	bpl.w	dfc8 <am_hal_gpio_pinconfig+0x1d4>
    de4c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    de50:	4b7b      	ldr	r3, [pc, #492]	; (e040 <am_hal_gpio_pinconfig+0x24c>)
    de52:	4d7c      	ldr	r5, [pc, #496]	; (e044 <am_hal_gpio_pinconfig+0x250>)
    de54:	5d1b      	ldrb	r3, [r3, r4]
    de56:	5d2d      	ldrb	r5, [r5, r4]
    de58:	4103      	asrs	r3, r0
    de5a:	005b      	lsls	r3, r3, #1
    de5c:	f003 0302 	and.w	r3, r3, #2
    de60:	4285      	cmp	r5, r0
    de62:	ea43 0302 	orr.w	r3, r3, r2
    de66:	f000 8091 	beq.w	df8c <am_hal_gpio_pinconfig+0x198>
    de6a:	f3c1 2607 	ubfx	r6, r1, #8, #8
    de6e:	f3c1 2581 	ubfx	r5, r1, #10, #2
    de72:	f3c1 3080 	ubfx	r0, r1, #14, #1
    de76:	0a8a      	lsrs	r2, r1, #10
    de78:	f006 070c 	and.w	r7, r6, #12
    de7c:	ea40 0045 	orr.w	r0, r0, r5, lsl #1
    de80:	f002 0208 	and.w	r2, r2, #8
    de84:	f3c1 3500 	ubfx	r5, r1, #12, #1
    de88:	2f04      	cmp	r7, #4
    de8a:	ea42 0200 	orr.w	r2, r2, r0
    de8e:	ea43 0345 	orr.w	r3, r3, r5, lsl #1
    de92:	4628      	mov	r0, r5
    de94:	f000 80ac 	beq.w	dff0 <am_hal_gpio_pinconfig+0x1fc>
    de98:	486b      	ldr	r0, [pc, #428]	; (e048 <am_hal_gpio_pinconfig+0x254>)
    de9a:	6800      	ldr	r0, [r0, #0]
    de9c:	eba1 0800 	sub.w	r8, r1, r0
    dea0:	fab8 f888 	clz	r8, r8
    dea4:	ea4f 1858 	mov.w	r8, r8, lsr #5
    dea8:	f016 0f60 	tst.w	r6, #96	; 0x60
    deac:	bf04      	itt	eq
    deae:	f3c1 30c0 	ubfxeq	r0, r1, #15, #1
    deb2:	f360 0200 	bfieq	r2, r0, #0, #1
    deb6:	00a6      	lsls	r6, r4, #2
    deb8:	f3c1 2101 	ubfx	r1, r1, #8, #2
    debc:	2902      	cmp	r1, #2
    debe:	ea4f 05c4 	mov.w	r5, r4, lsl #3
    dec2:	f000 808e 	beq.w	dfe2 <am_hal_gpio_pinconfig+0x1ee>
    dec6:	2903      	cmp	r1, #3
    dec8:	f000 8082 	beq.w	dfd0 <am_hal_gpio_pinconfig+0x1dc>
    decc:	2901      	cmp	r1, #1
    dece:	bf08      	it	eq
    ded0:	f043 0304 	orreq.w	r3, r3, #4
    ded4:	f005 0518 	and.w	r5, r5, #24
    ded8:	f04f 0900 	mov.w	r9, #0
    dedc:	f006 061c 	and.w	r6, r6, #28
    dee0:	210f      	movs	r1, #15
    dee2:	40b1      	lsls	r1, r6
    dee4:	27ff      	movs	r7, #255	; 0xff
    dee6:	fa02 f606 	lsl.w	r6, r2, r6
    deea:	43ca      	mvns	r2, r1
    deec:	40af      	lsls	r7, r5
    deee:	9201      	str	r2, [sp, #4]
    def0:	fa03 f505 	lsl.w	r5, r3, r5
    def4:	f000 f92a 	bl	e14c <am_hal_interrupt_master_disable>
    def8:	f024 0b03 	bic.w	fp, r4, #3
    defc:	ea4f 0a54 	mov.w	sl, r4, lsr #1
    df00:	f10b 4c80 	add.w	ip, fp, #1073741824	; 0x40000000
    df04:	4b51      	ldr	r3, [pc, #324]	; (e04c <am_hal_gpio_pinconfig+0x258>)
    df06:	4952      	ldr	r1, [pc, #328]	; (e050 <am_hal_gpio_pinconfig+0x25c>)
    df08:	9a01      	ldr	r2, [sp, #4]
    df0a:	9003      	str	r0, [sp, #12]
    df0c:	43ff      	mvns	r7, r7
    df0e:	f02a 0a03 	bic.w	sl, sl, #3
    df12:	f50c 3c80 	add.w	ip, ip, #65536	; 0x10000
    df16:	f1b8 0f00 	cmp.w	r8, #0
    df1a:	d00b      	beq.n	df34 <am_hal_gpio_pinconfig+0x140>
    df1c:	ea4f 0ed4 	mov.w	lr, r4, lsr #3
    df20:	f004 081f 	and.w	r8, r4, #31
    df24:	484b      	ldr	r0, [pc, #300]	; (e054 <am_hal_gpio_pinconfig+0x260>)
    df26:	f00e 0e04 	and.w	lr, lr, #4
    df2a:	2401      	movs	r4, #1
    df2c:	fa04 f408 	lsl.w	r4, r4, r8
    df30:	f84e 4000 	str.w	r4, [lr, r0]
    df34:	4848      	ldr	r0, [pc, #288]	; (e058 <am_hal_gpio_pinconfig+0x264>)
    df36:	2473      	movs	r4, #115	; 0x73
    df38:	6604      	str	r4, [r0, #96]	; 0x60
    df3a:	f8dc 4000 	ldr.w	r4, [ip]
    df3e:	403c      	ands	r4, r7
    df40:	4325      	orrs	r5, r4
    df42:	f8cc 5000 	str.w	r5, [ip]
    df46:	f85a 4003 	ldr.w	r4, [sl, r3]
    df4a:	4022      	ands	r2, r4
    df4c:	4332      	orrs	r2, r6
    df4e:	f84a 2003 	str.w	r2, [sl, r3]
    df52:	f85b 3001 	ldr.w	r3, [fp, r1]
    df56:	401f      	ands	r7, r3
    df58:	2400      	movs	r4, #0
    df5a:	ea47 0709 	orr.w	r7, r7, r9
    df5e:	f84b 7001 	str.w	r7, [fp, r1]
    df62:	6604      	str	r4, [r0, #96]	; 0x60
    df64:	9803      	ldr	r0, [sp, #12]
    df66:	f000 f8f5 	bl	e154 <am_hal_interrupt_master_set>
    df6a:	4620      	mov	r0, r4
    df6c:	b005      	add	sp, #20
    df6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    df72:	2006      	movs	r0, #6
    df74:	4770      	bx	lr
    df76:	4d31      	ldr	r5, [pc, #196]	; (e03c <am_hal_gpio_pinconfig+0x248>)
    df78:	5d2d      	ldrb	r5, [r5, r4]
    df7a:	3e02      	subs	r6, #2
    df7c:	ea42 1286 	orr.w	r2, r2, r6, lsl #6
    df80:	07ee      	lsls	r6, r5, #31
    df82:	d547      	bpl.n	e014 <am_hal_gpio_pinconfig+0x220>
    df84:	2b00      	cmp	r3, #0
    df86:	f43f af63 	beq.w	de50 <am_hal_gpio_pinconfig+0x5c>
    df8a:	e754      	b.n	de36 <am_hal_gpio_pinconfig+0x42>
    df8c:	f3c1 4202 	ubfx	r2, r1, #16, #3
    df90:	2a07      	cmp	r2, #7
    df92:	d041      	beq.n	e018 <am_hal_gpio_pinconfig+0x224>
    df94:	4d31      	ldr	r5, [pc, #196]	; (e05c <am_hal_gpio_pinconfig+0x268>)
    df96:	4610      	mov	r0, r2
    df98:	f815 6024 	ldrb.w	r6, [r5, r4, lsl #2]
    df9c:	f3c1 42c1 	ubfx	r2, r1, #19, #2
    dfa0:	ea42 1000 	orr.w	r0, r2, r0, lsl #4
    dfa4:	4286      	cmp	r6, r0
    dfa6:	d039      	beq.n	e01c <am_hal_gpio_pinconfig+0x228>
    dfa8:	eb05 0584 	add.w	r5, r5, r4, lsl #2
    dfac:	00a6      	lsls	r6, r4, #2
    dfae:	786a      	ldrb	r2, [r5, #1]
    dfb0:	4282      	cmp	r2, r0
    dfb2:	d03d      	beq.n	e030 <am_hal_gpio_pinconfig+0x23c>
    dfb4:	78aa      	ldrb	r2, [r5, #2]
    dfb6:	4282      	cmp	r2, r0
    dfb8:	d03c      	beq.n	e034 <am_hal_gpio_pinconfig+0x240>
    dfba:	78ea      	ldrb	r2, [r5, #3]
    dfbc:	4282      	cmp	r2, r0
    dfbe:	d03b      	beq.n	e038 <am_hal_gpio_pinconfig+0x244>
    dfc0:	4827      	ldr	r0, [pc, #156]	; (e060 <am_hal_gpio_pinconfig+0x26c>)
    dfc2:	b005      	add	sp, #20
    dfc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dfc8:	4826      	ldr	r0, [pc, #152]	; (e064 <am_hal_gpio_pinconfig+0x270>)
    dfca:	b005      	add	sp, #20
    dfcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dfd0:	f005 0518 	and.w	r5, r5, #24
    dfd4:	f04f 0901 	mov.w	r9, #1
    dfd8:	f043 0304 	orr.w	r3, r3, #4
    dfdc:	fa09 f905 	lsl.w	r9, r9, r5
    dfe0:	e77c      	b.n	dedc <am_hal_gpio_pinconfig+0xe8>
    dfe2:	f005 0518 	and.w	r5, r5, #24
    dfe6:	f04f 0901 	mov.w	r9, #1
    dfea:	fa09 f905 	lsl.w	r9, r9, r5
    dfee:	e775      	b.n	dedc <am_hal_gpio_pinconfig+0xe8>
    dff0:	f04f 0801 	mov.w	r8, #1
    dff4:	e758      	b.n	dea8 <am_hal_gpio_pinconfig+0xb4>
    dff6:	4b11      	ldr	r3, [pc, #68]	; (e03c <am_hal_gpio_pinconfig+0x248>)
    dff8:	5d1b      	ldrb	r3, [r3, r4]
    dffa:	079d      	lsls	r5, r3, #30
    dffc:	d5e4      	bpl.n	dfc8 <am_hal_gpio_pinconfig+0x1d4>
    dffe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    e002:	e725      	b.n	de50 <am_hal_gpio_pinconfig+0x5c>
    e004:	2c14      	cmp	r4, #20
    e006:	f43f af15 	beq.w	de34 <am_hal_gpio_pinconfig+0x40>
    e00a:	4817      	ldr	r0, [pc, #92]	; (e068 <am_hal_gpio_pinconfig+0x274>)
    e00c:	e7ae      	b.n	df6c <am_hal_gpio_pinconfig+0x178>
    e00e:	2c14      	cmp	r4, #20
    e010:	f47f af10 	bne.w	de34 <am_hal_gpio_pinconfig+0x40>
    e014:	4815      	ldr	r0, [pc, #84]	; (e06c <am_hal_gpio_pinconfig+0x278>)
    e016:	e7a9      	b.n	df6c <am_hal_gpio_pinconfig+0x178>
    e018:	4815      	ldr	r0, [pc, #84]	; (e070 <am_hal_gpio_pinconfig+0x27c>)
    e01a:	e7a7      	b.n	df6c <am_hal_gpio_pinconfig+0x178>
    e01c:	2200      	movs	r2, #0
    e01e:	00a6      	lsls	r6, r4, #2
    e020:	0052      	lsls	r2, r2, #1
    e022:	f3c1 5040 	ubfx	r0, r1, #21, #1
    e026:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
    e02a:	f04f 0800 	mov.w	r8, #0
    e02e:	e743      	b.n	deb8 <am_hal_gpio_pinconfig+0xc4>
    e030:	2201      	movs	r2, #1
    e032:	e7f5      	b.n	e020 <am_hal_gpio_pinconfig+0x22c>
    e034:	2202      	movs	r2, #2
    e036:	e7f3      	b.n	e020 <am_hal_gpio_pinconfig+0x22c>
    e038:	2203      	movs	r2, #3
    e03a:	e7f1      	b.n	e020 <am_hal_gpio_pinconfig+0x22c>
    e03c:	0000f07c 	.word	0x0000f07c
    e040:	0000f0b0 	.word	0x0000f0b0
    e044:	0000f1ac 	.word	0x0000f1ac
    e048:	0000f074 	.word	0x0000f074
    e04c:	40010040 	.word	0x40010040
    e050:	400100e0 	.word	0x400100e0
    e054:	400100b4 	.word	0x400100b4
    e058:	40010000 	.word	0x40010000
    e05c:	0000f0e4 	.word	0x0000f0e4
    e060:	08000104 	.word	0x08000104
    e064:	08000102 	.word	0x08000102
    e068:	08000101 	.word	0x08000101
    e06c:	08000100 	.word	0x08000100
    e070:	08000103 	.word	0x08000103

0000e074 <am_hal_gpio_interrupt_enable>:
    e074:	b570      	push	{r4, r5, r6, lr}
    e076:	0c8b      	lsrs	r3, r1, #18
    e078:	2500      	movs	r5, #0
    e07a:	462a      	mov	r2, r5
    e07c:	049b      	lsls	r3, r3, #18
    e07e:	4313      	orrs	r3, r2
    e080:	b082      	sub	sp, #8
    e082:	d115      	bne.n	e0b0 <am_hal_gpio_interrupt_enable+0x3c>
    e084:	460c      	mov	r4, r1
    e086:	4606      	mov	r6, r0
    e088:	f000 f860 	bl	e14c <am_hal_interrupt_master_disable>
    e08c:	4b0a      	ldr	r3, [pc, #40]	; (e0b8 <am_hal_gpio_interrupt_enable+0x44>)
    e08e:	9001      	str	r0, [sp, #4]
    e090:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
    e094:	4330      	orrs	r0, r6
    e096:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
    e09a:	f8d3 1210 	ldr.w	r1, [r3, #528]	; 0x210
    e09e:	430c      	orrs	r4, r1
    e0a0:	f8c3 4210 	str.w	r4, [r3, #528]	; 0x210
    e0a4:	9801      	ldr	r0, [sp, #4]
    e0a6:	f000 f855 	bl	e154 <am_hal_interrupt_master_set>
    e0aa:	4628      	mov	r0, r5
    e0ac:	b002      	add	sp, #8
    e0ae:	bd70      	pop	{r4, r5, r6, pc}
    e0b0:	2005      	movs	r0, #5
    e0b2:	b002      	add	sp, #8
    e0b4:	bd70      	pop	{r4, r5, r6, pc}
    e0b6:	bf00      	nop
    e0b8:	40010000 	.word	0x40010000

0000e0bc <am_hal_gpio_interrupt_disable>:
    e0bc:	b570      	push	{r4, r5, r6, lr}
    e0be:	0c8b      	lsrs	r3, r1, #18
    e0c0:	2500      	movs	r5, #0
    e0c2:	462a      	mov	r2, r5
    e0c4:	049b      	lsls	r3, r3, #18
    e0c6:	4313      	orrs	r3, r2
    e0c8:	b082      	sub	sp, #8
    e0ca:	d117      	bne.n	e0fc <am_hal_gpio_interrupt_disable+0x40>
    e0cc:	460c      	mov	r4, r1
    e0ce:	4606      	mov	r6, r0
    e0d0:	f000 f83c 	bl	e14c <am_hal_interrupt_master_disable>
    e0d4:	4b0b      	ldr	r3, [pc, #44]	; (e104 <am_hal_gpio_interrupt_disable+0x48>)
    e0d6:	9001      	str	r0, [sp, #4]
    e0d8:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
    e0dc:	ea20 0006 	bic.w	r0, r0, r6
    e0e0:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
    e0e4:	f8d3 1210 	ldr.w	r1, [r3, #528]	; 0x210
    e0e8:	ea21 0404 	bic.w	r4, r1, r4
    e0ec:	f8c3 4210 	str.w	r4, [r3, #528]	; 0x210
    e0f0:	9801      	ldr	r0, [sp, #4]
    e0f2:	f000 f82f 	bl	e154 <am_hal_interrupt_master_set>
    e0f6:	4628      	mov	r0, r5
    e0f8:	b002      	add	sp, #8
    e0fa:	bd70      	pop	{r4, r5, r6, pc}
    e0fc:	2005      	movs	r0, #5
    e0fe:	b002      	add	sp, #8
    e100:	bd70      	pop	{r4, r5, r6, pc}
    e102:	bf00      	nop
    e104:	40010000 	.word	0x40010000

0000e108 <am_hal_gpio_interrupt_clear>:
    e108:	b570      	push	{r4, r5, r6, lr}
    e10a:	0c8b      	lsrs	r3, r1, #18
    e10c:	2500      	movs	r5, #0
    e10e:	462a      	mov	r2, r5
    e110:	049b      	lsls	r3, r3, #18
    e112:	4313      	orrs	r3, r2
    e114:	b082      	sub	sp, #8
    e116:	d10f      	bne.n	e138 <am_hal_gpio_interrupt_clear+0x30>
    e118:	460c      	mov	r4, r1
    e11a:	4606      	mov	r6, r0
    e11c:	f000 f816 	bl	e14c <am_hal_interrupt_master_disable>
    e120:	4b07      	ldr	r3, [pc, #28]	; (e140 <am_hal_gpio_interrupt_clear+0x38>)
    e122:	9001      	str	r0, [sp, #4]
    e124:	f8c3 6208 	str.w	r6, [r3, #520]	; 0x208
    e128:	f8c3 4218 	str.w	r4, [r3, #536]	; 0x218
    e12c:	9801      	ldr	r0, [sp, #4]
    e12e:	f000 f811 	bl	e154 <am_hal_interrupt_master_set>
    e132:	4628      	mov	r0, r5
    e134:	b002      	add	sp, #8
    e136:	bd70      	pop	{r4, r5, r6, pc}
    e138:	2005      	movs	r0, #5
    e13a:	b002      	add	sp, #8
    e13c:	bd70      	pop	{r4, r5, r6, pc}
    e13e:	bf00      	nop
    e140:	40010000 	.word	0x40010000

0000e144 <am_hal_interrupt_master_enable>:
    e144:	f3ef 8010 	mrs	r0, PRIMASK
    e148:	b662      	cpsie	i
    e14a:	4770      	bx	lr

0000e14c <am_hal_interrupt_master_disable>:
    e14c:	f3ef 8010 	mrs	r0, PRIMASK
    e150:	b672      	cpsid	i
    e152:	4770      	bx	lr

0000e154 <am_hal_interrupt_master_set>:
    e154:	f380 8810 	msr	PRIMASK, r0
    e158:	4770      	bx	lr
    e15a:	bf00      	nop

0000e15c <am_hal_pwrctrl_periph_enable>:
    e15c:	b570      	push	{r4, r5, r6, lr}
    e15e:	b082      	sub	sp, #8
    e160:	4604      	mov	r4, r0
    e162:	f7ff fff3 	bl	e14c <am_hal_interrupt_master_disable>
    e166:	eb04 0444 	add.w	r4, r4, r4, lsl #1
    e16a:	4e0f      	ldr	r6, [pc, #60]	; (e1a8 <am_hal_pwrctrl_periph_enable+0x4c>)
    e16c:	4d0f      	ldr	r5, [pc, #60]	; (e1ac <am_hal_pwrctrl_periph_enable+0x50>)
    e16e:	9001      	str	r0, [sp, #4]
    e170:	00a4      	lsls	r4, r4, #2
    e172:	68b3      	ldr	r3, [r6, #8]
    e174:	592a      	ldr	r2, [r5, r4]
    e176:	4313      	orrs	r3, r2
    e178:	60b3      	str	r3, [r6, #8]
    e17a:	9801      	ldr	r0, [sp, #4]
    e17c:	442c      	add	r4, r5
    e17e:	f7ff ffe9 	bl	e154 <am_hal_interrupt_master_set>
    e182:	20a0      	movs	r0, #160	; 0xa0
    e184:	f7ff fde6 	bl	dd54 <am_hal_flash_delay>
    e188:	69b3      	ldr	r3, [r6, #24]
    e18a:	6864      	ldr	r4, [r4, #4]
    e18c:	4223      	tst	r3, r4
    e18e:	d103      	bne.n	e198 <am_hal_pwrctrl_periph_enable+0x3c>
    e190:	20a0      	movs	r0, #160	; 0xa0
    e192:	f7ff fddf 	bl	dd54 <am_hal_flash_delay>
    e196:	69b3      	ldr	r3, [r6, #24]
    e198:	4b03      	ldr	r3, [pc, #12]	; (e1a8 <am_hal_pwrctrl_periph_enable+0x4c>)
    e19a:	699b      	ldr	r3, [r3, #24]
    e19c:	4223      	tst	r3, r4
    e19e:	bf0c      	ite	eq
    e1a0:	2001      	moveq	r0, #1
    e1a2:	2000      	movne	r0, #0
    e1a4:	b002      	add	sp, #8
    e1a6:	bd70      	pop	{r4, r5, r6, pc}
    e1a8:	40021000 	.word	0x40021000
    e1ac:	0000f1e0 	.word	0x0000f1e0

0000e1b0 <am_hal_pwrctrl_periph_disable>:
    e1b0:	b570      	push	{r4, r5, r6, lr}
    e1b2:	b082      	sub	sp, #8
    e1b4:	4604      	mov	r4, r0
    e1b6:	f7ff ffc9 	bl	e14c <am_hal_interrupt_master_disable>
    e1ba:	eb04 0444 	add.w	r4, r4, r4, lsl #1
    e1be:	4e10      	ldr	r6, [pc, #64]	; (e200 <am_hal_pwrctrl_periph_disable+0x50>)
    e1c0:	4d10      	ldr	r5, [pc, #64]	; (e204 <am_hal_pwrctrl_periph_disable+0x54>)
    e1c2:	9001      	str	r0, [sp, #4]
    e1c4:	00a4      	lsls	r4, r4, #2
    e1c6:	68b3      	ldr	r3, [r6, #8]
    e1c8:	592a      	ldr	r2, [r5, r4]
    e1ca:	ea23 0302 	bic.w	r3, r3, r2
    e1ce:	60b3      	str	r3, [r6, #8]
    e1d0:	9801      	ldr	r0, [sp, #4]
    e1d2:	442c      	add	r4, r5
    e1d4:	f7ff ffbe 	bl	e154 <am_hal_interrupt_master_set>
    e1d8:	20a0      	movs	r0, #160	; 0xa0
    e1da:	f7ff fdbb 	bl	dd54 <am_hal_flash_delay>
    e1de:	69b3      	ldr	r3, [r6, #24]
    e1e0:	6864      	ldr	r4, [r4, #4]
    e1e2:	4223      	tst	r3, r4
    e1e4:	d003      	beq.n	e1ee <am_hal_pwrctrl_periph_disable+0x3e>
    e1e6:	20a0      	movs	r0, #160	; 0xa0
    e1e8:	f7ff fdb4 	bl	dd54 <am_hal_flash_delay>
    e1ec:	69b3      	ldr	r3, [r6, #24]
    e1ee:	4b04      	ldr	r3, [pc, #16]	; (e200 <am_hal_pwrctrl_periph_disable+0x50>)
    e1f0:	699b      	ldr	r3, [r3, #24]
    e1f2:	4223      	tst	r3, r4
    e1f4:	bf14      	ite	ne
    e1f6:	2001      	movne	r0, #1
    e1f8:	2000      	moveq	r0, #0
    e1fa:	b002      	add	sp, #8
    e1fc:	bd70      	pop	{r4, r5, r6, pc}
    e1fe:	bf00      	nop
    e200:	40021000 	.word	0x40021000
    e204:	0000f1e0 	.word	0x0000f1e0

0000e208 <am_hal_pwrctrl_blebuck_trim>:
    e208:	b510      	push	{r4, lr}
    e20a:	4c12      	ldr	r4, [pc, #72]	; (e254 <am_hal_pwrctrl_blebuck_trim+0x4c>)
    e20c:	68e3      	ldr	r3, [r4, #12]
    e20e:	b2db      	uxtb	r3, r3
    e210:	2b11      	cmp	r3, #17
    e212:	b082      	sub	sp, #8
    e214:	d801      	bhi.n	e21a <am_hal_pwrctrl_blebuck_trim+0x12>
    e216:	b002      	add	sp, #8
    e218:	bd10      	pop	{r4, pc}
    e21a:	f7ff ff97 	bl	e14c <am_hal_interrupt_master_disable>
    e21e:	9001      	str	r0, [sp, #4]
    e220:	f8d4 3368 	ldr.w	r3, [r4, #872]	; 0x368
    e224:	2219      	movs	r2, #25
    e226:	f362 138b 	bfi	r3, r2, #6, #6
    e22a:	f8c4 3368 	str.w	r3, [r4, #872]	; 0x368
    e22e:	f8d4 2368 	ldr.w	r2, [r4, #872]	; 0x368
    e232:	230c      	movs	r3, #12
    e234:	f363 0205 	bfi	r2, r3, #0, #6
    e238:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    e23c:	f8c4 2368 	str.w	r2, [r4, #872]	; 0x368
    e240:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    e242:	f36f 5296 	bfc	r2, #22, #1
    e246:	63da      	str	r2, [r3, #60]	; 0x3c
    e248:	9801      	ldr	r0, [sp, #4]
    e24a:	b002      	add	sp, #8
    e24c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    e250:	f7ff bf80 	b.w	e154 <am_hal_interrupt_master_set>
    e254:	40020000 	.word	0x40020000

0000e258 <am_hal_reset_control>:
    e258:	2803      	cmp	r0, #3
    e25a:	d819      	bhi.n	e290 <am_hal_reset_control+0x38>
    e25c:	e8df f000 	tbb	[pc, r0]
    e260:	02140e08 	.word	0x02140e08
    e264:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    e268:	2201      	movs	r2, #1
    e26a:	615a      	str	r2, [r3, #20]
    e26c:	2000      	movs	r0, #0
    e26e:	4770      	bx	lr
    e270:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    e274:	22d4      	movs	r2, #212	; 0xd4
    e276:	609a      	str	r2, [r3, #8]
    e278:	2000      	movs	r0, #0
    e27a:	4770      	bx	lr
    e27c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    e280:	221b      	movs	r2, #27
    e282:	605a      	str	r2, [r3, #4]
    e284:	2000      	movs	r0, #0
    e286:	4770      	bx	lr
    e288:	4b02      	ldr	r3, [pc, #8]	; (e294 <am_hal_reset_control+0x3c>)
    e28a:	2000      	movs	r0, #0
    e28c:	6018      	str	r0, [r3, #0]
    e28e:	4770      	bx	lr
    e290:	2006      	movs	r0, #6
    e292:	4770      	bx	lr
    e294:	4ffff000 	.word	0x4ffff000

0000e298 <am_hal_stimer_config>:
    e298:	4a03      	ldr	r2, [pc, #12]	; (e2a8 <am_hal_stimer_config+0x10>)
    e29a:	4603      	mov	r3, r0
    e29c:	f8d2 0140 	ldr.w	r0, [r2, #320]	; 0x140
    e2a0:	f8c2 3140 	str.w	r3, [r2, #320]	; 0x140
    e2a4:	4770      	bx	lr
    e2a6:	bf00      	nop
    e2a8:	40008000 	.word	0x40008000

0000e2ac <am_hal_stimer_counter_get>:
    e2ac:	4b01      	ldr	r3, [pc, #4]	; (e2b4 <am_hal_stimer_counter_get+0x8>)
    e2ae:	f8d3 0144 	ldr.w	r0, [r3, #324]	; 0x144
    e2b2:	4770      	bx	lr
    e2b4:	40008000 	.word	0x40008000

0000e2b8 <am_hal_stimer_int_enable>:
    e2b8:	4a03      	ldr	r2, [pc, #12]	; (e2c8 <am_hal_stimer_int_enable+0x10>)
    e2ba:	f8d2 3300 	ldr.w	r3, [r2, #768]	; 0x300
    e2be:	4318      	orrs	r0, r3
    e2c0:	f8c2 0300 	str.w	r0, [r2, #768]	; 0x300
    e2c4:	4770      	bx	lr
    e2c6:	bf00      	nop
    e2c8:	40008000 	.word	0x40008000

0000e2cc <am_hal_stimer_int_disable>:
    e2cc:	4a03      	ldr	r2, [pc, #12]	; (e2dc <am_hal_stimer_int_disable+0x10>)
    e2ce:	f8d2 3300 	ldr.w	r3, [r2, #768]	; 0x300
    e2d2:	ea23 0000 	bic.w	r0, r3, r0
    e2d6:	f8c2 0300 	str.w	r0, [r2, #768]	; 0x300
    e2da:	4770      	bx	lr
    e2dc:	40008000 	.word	0x40008000

0000e2e0 <am_hal_stimer_int_clear>:
    e2e0:	4b01      	ldr	r3, [pc, #4]	; (e2e8 <am_hal_stimer_int_clear+0x8>)
    e2e2:	f8c3 0308 	str.w	r0, [r3, #776]	; 0x308
    e2e6:	4770      	bx	lr
    e2e8:	40008000 	.word	0x40008000

0000e2ec <am_hal_sysctrl_sleep>:
    e2ec:	b510      	push	{r4, lr}
    e2ee:	b082      	sub	sp, #8
    e2f0:	4604      	mov	r4, r0
    e2f2:	f7ff ff2b 	bl	e14c <am_hal_interrupt_master_disable>
    e2f6:	9001      	str	r0, [sp, #4]
    e2f8:	b124      	cbz	r4, e304 <am_hal_sysctrl_sleep+0x18>
    e2fa:	4b12      	ldr	r3, [pc, #72]	; (e344 <am_hal_sysctrl_sleep+0x58>)
    e2fc:	f8d3 3250 	ldr.w	r3, [r3, #592]	; 0x250
    e300:	07db      	lsls	r3, r3, #31
    e302:	d513      	bpl.n	e32c <am_hal_sysctrl_sleep+0x40>
    e304:	4a10      	ldr	r2, [pc, #64]	; (e348 <am_hal_sysctrl_sleep+0x5c>)
    e306:	6913      	ldr	r3, [r2, #16]
    e308:	f023 0304 	bic.w	r3, r3, #4
    e30c:	6113      	str	r3, [r2, #16]
    e30e:	f3bf 8f4f 	dsb	sy
    e312:	4a0e      	ldr	r2, [pc, #56]	; (e34c <am_hal_sysctrl_sleep+0x60>)
    e314:	4b0e      	ldr	r3, [pc, #56]	; (e350 <am_hal_sysctrl_sleep+0x64>)
    e316:	6812      	ldr	r2, [r2, #0]
    e318:	601a      	str	r2, [r3, #0]
    e31a:	bf30      	wfi
    e31c:	f3bf 8f6f 	isb	sy
    e320:	9801      	ldr	r0, [sp, #4]
    e322:	b002      	add	sp, #8
    e324:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    e328:	f7ff bf14 	b.w	e154 <am_hal_interrupt_master_set>
    e32c:	4b09      	ldr	r3, [pc, #36]	; (e354 <am_hal_sysctrl_sleep+0x68>)
    e32e:	681a      	ldr	r2, [r3, #0]
    e330:	b912      	cbnz	r2, e338 <am_hal_sysctrl_sleep+0x4c>
    e332:	4a09      	ldr	r2, [pc, #36]	; (e358 <am_hal_sysctrl_sleep+0x6c>)
    e334:	6812      	ldr	r2, [r2, #0]
    e336:	601a      	str	r2, [r3, #0]
    e338:	4a03      	ldr	r2, [pc, #12]	; (e348 <am_hal_sysctrl_sleep+0x5c>)
    e33a:	6913      	ldr	r3, [r2, #16]
    e33c:	f043 0304 	orr.w	r3, r3, #4
    e340:	6113      	str	r3, [r2, #16]
    e342:	e7e4      	b.n	e30e <am_hal_sysctrl_sleep+0x22>
    e344:	40020000 	.word	0x40020000
    e348:	e000ed00 	.word	0xe000ed00
    e34c:	5fff0000 	.word	0x5fff0000
    e350:	10000a70 	.word	0x10000a70
    e354:	10000a6c 	.word	0x10000a6c
    e358:	4ffff000 	.word	0x4ffff000

0000e35c <am_hal_uart_initialize>:
    e35c:	2801      	cmp	r0, #1
    e35e:	d819      	bhi.n	e394 <am_hal_uart_initialize+0x38>
    e360:	b1e9      	cbz	r1, e39e <am_hal_uart_initialize+0x42>
    e362:	b4f0      	push	{r4, r5, r6, r7}
    e364:	2264      	movs	r2, #100	; 0x64
    e366:	4d0f      	ldr	r5, [pc, #60]	; (e3a4 <am_hal_uart_initialize+0x48>)
    e368:	fb02 f200 	mul.w	r2, r2, r0
    e36c:	18ac      	adds	r4, r5, r2
    e36e:	78e3      	ldrb	r3, [r4, #3]
    e370:	f3c3 0700 	ubfx	r7, r3, #0, #1
    e374:	f013 0301 	ands.w	r3, r3, #1
    e378:	d10e      	bne.n	e398 <am_hal_uart_initialize+0x3c>
    e37a:	6260      	str	r0, [r4, #36]	; 0x24
    e37c:	58ae      	ldr	r6, [r5, r2]
    e37e:	480a      	ldr	r0, [pc, #40]	; (e3a8 <am_hal_uart_initialize+0x4c>)
    e380:	f006 467e 	and.w	r6, r6, #4261412864	; 0xfe000000
    e384:	4330      	orrs	r0, r6
    e386:	50a8      	str	r0, [r5, r2]
    e388:	7127      	strb	r7, [r4, #4]
    e38a:	6623      	str	r3, [r4, #96]	; 0x60
    e38c:	4618      	mov	r0, r3
    e38e:	600c      	str	r4, [r1, #0]
    e390:	bcf0      	pop	{r4, r5, r6, r7}
    e392:	4770      	bx	lr
    e394:	2005      	movs	r0, #5
    e396:	4770      	bx	lr
    e398:	2007      	movs	r0, #7
    e39a:	bcf0      	pop	{r4, r5, r6, r7}
    e39c:	4770      	bx	lr
    e39e:	2006      	movs	r0, #6
    e3a0:	4770      	bx	lr
    e3a2:	bf00      	nop
    e3a4:	10000a74 	.word	0x10000a74
    e3a8:	01ea9e06 	.word	0x01ea9e06

0000e3ac <am_hal_uart_power_control>:
    e3ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    e3ae:	4604      	mov	r4, r0
    e3b0:	6800      	ldr	r0, [r0, #0]
    e3b2:	4b39      	ldr	r3, [pc, #228]	; (e498 <am_hal_uart_power_control+0xec>)
    e3b4:	f020 467e 	bic.w	r6, r0, #4261412864	; 0xfe000000
    e3b8:	429e      	cmp	r6, r3
    e3ba:	b085      	sub	sp, #20
    e3bc:	d13f      	bne.n	e43e <am_hal_uart_power_control+0x92>
    e3be:	6a65      	ldr	r5, [r4, #36]	; 0x24
    e3c0:	f105 0008 	add.w	r0, r5, #8
    e3c4:	b2c7      	uxtb	r7, r0
    e3c6:	b1a1      	cbz	r1, e3f2 <am_hal_uart_power_control+0x46>
    e3c8:	3901      	subs	r1, #1
    e3ca:	2901      	cmp	r1, #1
    e3cc:	d80e      	bhi.n	e3ec <am_hal_uart_power_control+0x40>
    e3ce:	2a00      	cmp	r2, #0
    e3d0:	d138      	bne.n	e444 <am_hal_uart_power_control+0x98>
    e3d2:	f505 2580 	add.w	r5, r5, #262144	; 0x40000
    e3d6:	351c      	adds	r5, #28
    e3d8:	032d      	lsls	r5, r5, #12
    e3da:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    e3de:	646b      	str	r3, [r5, #68]	; 0x44
    e3e0:	4638      	mov	r0, r7
    e3e2:	f7ff fee5 	bl	e1b0 <am_hal_pwrctrl_periph_disable>
    e3e6:	2000      	movs	r0, #0
    e3e8:	b005      	add	sp, #20
    e3ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e3ec:	2006      	movs	r0, #6
    e3ee:	b005      	add	sp, #20
    e3f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e3f2:	2a00      	cmp	r2, #0
    e3f4:	d047      	beq.n	e486 <am_hal_uart_power_control+0xda>
    e3f6:	7923      	ldrb	r3, [r4, #4]
    e3f8:	2b00      	cmp	r3, #0
    e3fa:	d04b      	beq.n	e494 <am_hal_uart_power_control+0xe8>
    e3fc:	4638      	mov	r0, r7
    e3fe:	f505 2580 	add.w	r5, r5, #262144	; 0x40000
    e402:	9101      	str	r1, [sp, #4]
    e404:	351c      	adds	r5, #28
    e406:	f7ff fea9 	bl	e15c <am_hal_pwrctrl_periph_enable>
    e40a:	f7ff fe9f 	bl	e14c <am_hal_interrupt_master_disable>
    e40e:	e9d4 3602 	ldrd	r3, r6, [r4, #8]
    e412:	032d      	lsls	r5, r5, #12
    e414:	9002      	str	r0, [sp, #8]
    e416:	6922      	ldr	r2, [r4, #16]
    e418:	622b      	str	r3, [r5, #32]
    e41a:	6963      	ldr	r3, [r4, #20]
    e41c:	69a0      	ldr	r0, [r4, #24]
    e41e:	626e      	str	r6, [r5, #36]	; 0x24
    e420:	62aa      	str	r2, [r5, #40]	; 0x28
    e422:	69e2      	ldr	r2, [r4, #28]
    e424:	62eb      	str	r3, [r5, #44]	; 0x2c
    e426:	6a23      	ldr	r3, [r4, #32]
    e428:	9901      	ldr	r1, [sp, #4]
    e42a:	6328      	str	r0, [r5, #48]	; 0x30
    e42c:	636a      	str	r2, [r5, #52]	; 0x34
    e42e:	63ab      	str	r3, [r5, #56]	; 0x38
    e430:	9802      	ldr	r0, [sp, #8]
    e432:	7121      	strb	r1, [r4, #4]
    e434:	f7ff fe8e 	bl	e154 <am_hal_interrupt_master_set>
    e438:	9901      	ldr	r1, [sp, #4]
    e43a:	4608      	mov	r0, r1
    e43c:	e7d7      	b.n	e3ee <am_hal_uart_power_control+0x42>
    e43e:	2002      	movs	r0, #2
    e440:	b005      	add	sp, #20
    e442:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e444:	f7ff fe82 	bl	e14c <am_hal_interrupt_master_disable>
    e448:	f505 2580 	add.w	r5, r5, #262144	; 0x40000
    e44c:	351c      	adds	r5, #28
    e44e:	032d      	lsls	r5, r5, #12
    e450:	9003      	str	r0, [sp, #12]
    e452:	6a2a      	ldr	r2, [r5, #32]
    e454:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    e456:	60a2      	str	r2, [r4, #8]
    e458:	6aaa      	ldr	r2, [r5, #40]	; 0x28
    e45a:	60e3      	str	r3, [r4, #12]
    e45c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
    e45e:	6b29      	ldr	r1, [r5, #48]	; 0x30
    e460:	6163      	str	r3, [r4, #20]
    e462:	6b6b      	ldr	r3, [r5, #52]	; 0x34
    e464:	6122      	str	r2, [r4, #16]
    e466:	6baa      	ldr	r2, [r5, #56]	; 0x38
    e468:	61e3      	str	r3, [r4, #28]
    e46a:	2301      	movs	r3, #1
    e46c:	7123      	strb	r3, [r4, #4]
    e46e:	9803      	ldr	r0, [sp, #12]
    e470:	61a1      	str	r1, [r4, #24]
    e472:	6222      	str	r2, [r4, #32]
    e474:	f7ff fe6e 	bl	e154 <am_hal_interrupt_master_set>
    e478:	6823      	ldr	r3, [r4, #0]
    e47a:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e47e:	42b3      	cmp	r3, r6
    e480:	d1ae      	bne.n	e3e0 <am_hal_uart_power_control+0x34>
    e482:	6a65      	ldr	r5, [r4, #36]	; 0x24
    e484:	e7a5      	b.n	e3d2 <am_hal_uart_power_control+0x26>
    e486:	4638      	mov	r0, r7
    e488:	9201      	str	r2, [sp, #4]
    e48a:	f7ff fe67 	bl	e15c <am_hal_pwrctrl_periph_enable>
    e48e:	9a01      	ldr	r2, [sp, #4]
    e490:	4610      	mov	r0, r2
    e492:	e7ac      	b.n	e3ee <am_hal_uart_power_control+0x42>
    e494:	2007      	movs	r0, #7
    e496:	e7aa      	b.n	e3ee <am_hal_uart_power_control+0x42>
    e498:	01ea9e06 	.word	0x01ea9e06

0000e49c <am_hal_uart_configure>:
    e49c:	6803      	ldr	r3, [r0, #0]
    e49e:	4a78      	ldr	r2, [pc, #480]	; (e680 <am_hal_uart_configure+0x1e4>)
    e4a0:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e4a4:	4293      	cmp	r3, r2
    e4a6:	d001      	beq.n	e4ac <am_hal_uart_configure+0x10>
    e4a8:	2002      	movs	r0, #2
    e4aa:	4770      	bx	lr
    e4ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e4b0:	6a44      	ldr	r4, [r0, #36]	; 0x24
    e4b2:	f504 2480 	add.w	r4, r4, #262144	; 0x40000
    e4b6:	341c      	adds	r4, #28
    e4b8:	0324      	lsls	r4, r4, #12
    e4ba:	2700      	movs	r7, #0
    e4bc:	b084      	sub	sp, #16
    e4be:	6327      	str	r7, [r4, #48]	; 0x30
    e4c0:	460e      	mov	r6, r1
    e4c2:	4605      	mov	r5, r0
    e4c4:	f7ff fe42 	bl	e14c <am_hal_interrupt_master_disable>
    e4c8:	9001      	str	r0, [sp, #4]
    e4ca:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    e4cc:	f043 0308 	orr.w	r3, r3, #8
    e4d0:	8623      	strh	r3, [r4, #48]	; 0x30
    e4d2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    e4d4:	2201      	movs	r2, #1
    e4d6:	f362 1306 	bfi	r3, r2, #4, #3
    e4da:	8623      	strh	r3, [r4, #48]	; 0x30
    e4dc:	9801      	ldr	r0, [sp, #4]
    e4de:	f7ff fe39 	bl	e154 <am_hal_interrupt_master_set>
    e4e2:	f7ff fe33 	bl	e14c <am_hal_interrupt_master_disable>
    e4e6:	9002      	str	r0, [sp, #8]
    e4e8:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    e4ea:	f367 0300 	bfi	r3, r7, #0, #1
    e4ee:	8623      	strh	r3, [r4, #48]	; 0x30
    e4f0:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    e4f2:	f367 2349 	bfi	r3, r7, #9, #1
    e4f6:	8623      	strh	r3, [r4, #48]	; 0x30
    e4f8:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    e4fa:	f367 2308 	bfi	r3, r7, #8, #1
    e4fe:	8623      	strh	r3, [r4, #48]	; 0x30
    e500:	9802      	ldr	r0, [sp, #8]
    e502:	f7ff fe27 	bl	e154 <am_hal_interrupt_master_set>
    e506:	4b5f      	ldr	r3, [pc, #380]	; (e684 <am_hal_uart_configure+0x1e8>)
    e508:	6832      	ldr	r2, [r6, #0]
    e50a:	68db      	ldr	r3, [r3, #12]
    e50c:	b2db      	uxtb	r3, r3
    e50e:	2b12      	cmp	r3, #18
    e510:	d076      	beq.n	e600 <am_hal_uart_configure+0x164>
    e512:	4b5c      	ldr	r3, [pc, #368]	; (e684 <am_hal_uart_configure+0x1e8>)
    e514:	68db      	ldr	r3, [r3, #12]
    e516:	b2db      	uxtb	r3, r3
    e518:	2b20      	cmp	r3, #32
    e51a:	d902      	bls.n	e522 <am_hal_uart_configure+0x86>
    e51c:	4b5a      	ldr	r3, [pc, #360]	; (e688 <am_hal_uart_configure+0x1ec>)
    e51e:	429a      	cmp	r2, r3
    e520:	d871      	bhi.n	e606 <am_hal_uart_configure+0x16a>
    e522:	6b23      	ldr	r3, [r4, #48]	; 0x30
    e524:	f3c3 1302 	ubfx	r3, r3, #4, #3
    e528:	3b01      	subs	r3, #1
    e52a:	b2db      	uxtb	r3, r3
    e52c:	2b03      	cmp	r3, #3
    e52e:	d86c      	bhi.n	e60a <am_hal_uart_configure+0x16e>
    e530:	4956      	ldr	r1, [pc, #344]	; (e68c <am_hal_uart_configure+0x1f0>)
    e532:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
    e536:	0112      	lsls	r2, r2, #4
    e538:	4291      	cmp	r1, r2
    e53a:	ea4f 1381 	mov.w	r3, r1, lsl #6
    e53e:	fbb1 f0f2 	udiv	r0, r1, r2
    e542:	fbb3 f3f2 	udiv	r3, r3, r2
    e546:	eba3 1380 	sub.w	r3, r3, r0, lsl #6
    e54a:	d364      	bcc.n	e616 <am_hal_uart_configure+0x17a>
    e54c:	089a      	lsrs	r2, r3, #2
    e54e:	6260      	str	r0, [r4, #36]	; 0x24
    e550:	eb02 1200 	add.w	r2, r2, r0, lsl #4
    e554:	6260      	str	r0, [r4, #36]	; 0x24
    e556:	fbb1 f1f2 	udiv	r1, r1, r2
    e55a:	62a3      	str	r3, [r4, #40]	; 0x28
    e55c:	6629      	str	r1, [r5, #96]	; 0x60
    e55e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    e560:	f36f 338e 	bfc	r3, #14, #1
    e564:	8623      	strh	r3, [r4, #48]	; 0x30
    e566:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    e568:	f36f 33cf 	bfc	r3, #15, #1
    e56c:	8623      	strh	r3, [r4, #48]	; 0x30
    e56e:	e9d6 0102 	ldrd	r0, r1, [r6, #8]
    e572:	6873      	ldr	r3, [r6, #4]
    e574:	6b22      	ldr	r2, [r4, #48]	; 0x30
    e576:	430b      	orrs	r3, r1
    e578:	6931      	ldr	r1, [r6, #16]
    e57a:	4303      	orrs	r3, r0
    e57c:	430a      	orrs	r2, r1
    e57e:	f043 0310 	orr.w	r3, r3, #16
    e582:	6971      	ldr	r1, [r6, #20]
    e584:	6322      	str	r2, [r4, #48]	; 0x30
    e586:	6361      	str	r1, [r4, #52]	; 0x34
    e588:	62e3      	str	r3, [r4, #44]	; 0x2c
    e58a:	f7ff fddf 	bl	e14c <am_hal_interrupt_master_disable>
    e58e:	9003      	str	r0, [sp, #12]
    e590:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    e592:	f043 0301 	orr.w	r3, r3, #1
    e596:	8623      	strh	r3, [r4, #48]	; 0x30
    e598:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    e59a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    e59e:	8623      	strh	r3, [r4, #48]	; 0x30
    e5a0:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    e5a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    e5a6:	8623      	strh	r3, [r4, #48]	; 0x30
    e5a8:	9803      	ldr	r0, [sp, #12]
    e5aa:	f7ff fdd3 	bl	e154 <am_hal_interrupt_master_set>
    e5ae:	682a      	ldr	r2, [r5, #0]
    e5b0:	4b33      	ldr	r3, [pc, #204]	; (e680 <am_hal_uart_configure+0x1e4>)
    e5b2:	f022 487e 	bic.w	r8, r2, #4261412864	; 0xfe000000
    e5b6:	4598      	cmp	r8, r3
    e5b8:	d11e      	bne.n	e5f8 <am_hal_uart_configure+0x15c>
    e5ba:	69b1      	ldr	r1, [r6, #24]
    e5bc:	e9d6 4708 	ldrd	r4, r7, [r6, #32]
    e5c0:	b109      	cbz	r1, e5c6 <am_hal_uart_configure+0x12a>
    e5c2:	69f3      	ldr	r3, [r6, #28]
    e5c4:	bb5b      	cbnz	r3, e61e <am_hal_uart_configure+0x182>
    e5c6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    e5c8:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    e5cc:	331c      	adds	r3, #28
    e5ce:	031b      	lsls	r3, r3, #12
    e5d0:	2100      	movs	r1, #0
    e5d2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    e5d4:	f885 1028 	strb.w	r1, [r5, #40]	; 0x28
    e5d8:	f022 0220 	bic.w	r2, r2, #32
    e5dc:	639a      	str	r2, [r3, #56]	; 0x38
    e5de:	b10c      	cbz	r4, e5e4 <am_hal_uart_configure+0x148>
    e5e0:	2f00      	cmp	r7, #0
    e5e2:	d132      	bne.n	e64a <am_hal_uart_configure+0x1ae>
    e5e4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    e5e6:	2000      	movs	r0, #0
    e5e8:	f022 0250 	bic.w	r2, r2, #80	; 0x50
    e5ec:	f885 0044 	strb.w	r0, [r5, #68]	; 0x44
    e5f0:	639a      	str	r2, [r3, #56]	; 0x38
    e5f2:	b004      	add	sp, #16
    e5f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e5f8:	2000      	movs	r0, #0
    e5fa:	b004      	add	sp, #16
    e5fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e600:	f5b2 2f61 	cmp.w	r2, #921600	; 0xe1000
    e604:	d985      	bls.n	e512 <am_hal_uart_configure+0x76>
    e606:	4822      	ldr	r0, [pc, #136]	; (e690 <am_hal_uart_configure+0x1f4>)
    e608:	e7f3      	b.n	e5f2 <am_hal_uart_configure+0x156>
    e60a:	4822      	ldr	r0, [pc, #136]	; (e694 <am_hal_uart_configure+0x1f8>)
    e60c:	2300      	movs	r3, #0
    e60e:	662b      	str	r3, [r5, #96]	; 0x60
    e610:	b004      	add	sp, #16
    e612:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e616:	2300      	movs	r3, #0
    e618:	481d      	ldr	r0, [pc, #116]	; (e690 <am_hal_uart_configure+0x1f4>)
    e61a:	662b      	str	r3, [r5, #96]	; 0x60
    e61c:	e7e9      	b.n	e5f2 <am_hal_uart_configure+0x156>
    e61e:	2201      	movs	r2, #1
    e620:	f885 2028 	strb.w	r2, [r5, #40]	; 0x28
    e624:	f105 002c 	add.w	r0, r5, #44	; 0x2c
    e628:	f000 fb18 	bl	ec5c <am_hal_queue_init>
    e62c:	682b      	ldr	r3, [r5, #0]
    e62e:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e632:	4543      	cmp	r3, r8
    e634:	d1e0      	bne.n	e5f8 <am_hal_uart_configure+0x15c>
    e636:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    e638:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    e63c:	331c      	adds	r3, #28
    e63e:	031b      	lsls	r3, r3, #12
    e640:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    e642:	f042 0220 	orr.w	r2, r2, #32
    e646:	639a      	str	r2, [r3, #56]	; 0x38
    e648:	e7c9      	b.n	e5de <am_hal_uart_configure+0x142>
    e64a:	2201      	movs	r2, #1
    e64c:	463b      	mov	r3, r7
    e64e:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
    e652:	4621      	mov	r1, r4
    e654:	f105 0048 	add.w	r0, r5, #72	; 0x48
    e658:	f000 fb00 	bl	ec5c <am_hal_queue_init>
    e65c:	682b      	ldr	r3, [r5, #0]
    e65e:	4a08      	ldr	r2, [pc, #32]	; (e680 <am_hal_uart_configure+0x1e4>)
    e660:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e664:	4293      	cmp	r3, r2
    e666:	d1c7      	bne.n	e5f8 <am_hal_uart_configure+0x15c>
    e668:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    e66a:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    e66e:	331c      	adds	r3, #28
    e670:	031b      	lsls	r3, r3, #12
    e672:	2000      	movs	r0, #0
    e674:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    e676:	f042 0250 	orr.w	r2, r2, #80	; 0x50
    e67a:	639a      	str	r2, [r3, #56]	; 0x38
    e67c:	e7b9      	b.n	e5f2 <am_hal_uart_configure+0x156>
    e67e:	bf00      	nop
    e680:	01ea9e06 	.word	0x01ea9e06
    e684:	40020000 	.word	0x40020000
    e688:	0016e360 	.word	0x0016e360
    e68c:	0000f294 	.word	0x0000f294
    e690:	08000003 	.word	0x08000003
    e694:	08000002 	.word	0x08000002

0000e698 <am_hal_uart_transfer>:
    e698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e69c:	ed2d 8b02 	vpush	{d8}
    e6a0:	680d      	ldr	r5, [r1, #0]
    e6a2:	b091      	sub	sp, #68	; 0x44
    e6a4:	4604      	mov	r4, r0
    e6a6:	b14d      	cbz	r5, e6bc <am_hal_uart_transfer+0x24>
    e6a8:	2d01      	cmp	r5, #1
    e6aa:	f000 8091 	beq.w	e7d0 <am_hal_uart_transfer+0x138>
    e6ae:	2507      	movs	r5, #7
    e6b0:	4628      	mov	r0, r5
    e6b2:	b011      	add	sp, #68	; 0x44
    e6b4:	ecbd 8b02 	vpop	{d8}
    e6b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e6bc:	f8d1 900c 	ldr.w	r9, [r1, #12]
    e6c0:	684b      	ldr	r3, [r1, #4]
    e6c2:	690a      	ldr	r2, [r1, #16]
    e6c4:	688e      	ldr	r6, [r1, #8]
    e6c6:	9301      	str	r3, [sp, #4]
    e6c8:	9203      	str	r2, [sp, #12]
    e6ca:	f1b9 0f00 	cmp.w	r9, #0
    e6ce:	f000 8113 	beq.w	e8f8 <am_hal_uart_transfer+0x260>
    e6d2:	2e00      	cmp	r6, #0
    e6d4:	f000 8179 	beq.w	e9ca <am_hal_uart_transfer+0x332>
    e6d8:	2800      	cmp	r0, #0
    e6da:	f000 8168 	beq.w	e9ae <am_hal_uart_transfer+0x316>
    e6de:	46aa      	mov	sl, r5
    e6e0:	462f      	mov	r7, r5
    e6e2:	9502      	str	r5, [sp, #8]
    e6e4:	4605      	mov	r5, r0
    e6e6:	4619      	mov	r1, r3
    e6e8:	682a      	ldr	r2, [r5, #0]
    e6ea:	4bb4      	ldr	r3, [pc, #720]	; (e9bc <am_hal_uart_transfer+0x324>)
    e6ec:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    e6f0:	429a      	cmp	r2, r3
    e6f2:	d12f      	bne.n	e754 <am_hal_uart_transfer+0xbc>
    e6f4:	f895 2028 	ldrb.w	r2, [r5, #40]	; 0x28
    e6f8:	2a00      	cmp	r2, #0
    e6fa:	d133      	bne.n	e764 <am_hal_uart_transfer+0xcc>
    e6fc:	6a68      	ldr	r0, [r5, #36]	; 0x24
    e6fe:	f500 2080 	add.w	r0, r0, #262144	; 0x40000
    e702:	301c      	adds	r0, #28
    e704:	3901      	subs	r1, #1
    e706:	0300      	lsls	r0, r0, #12
    e708:	e005      	b.n	e716 <am_hal_uart_transfer+0x7e>
    e70a:	3201      	adds	r2, #1
    e70c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
    e710:	6003      	str	r3, [r0, #0]
    e712:	42b2      	cmp	r2, r6
    e714:	d023      	beq.n	e75e <am_hal_uart_transfer+0xc6>
    e716:	6983      	ldr	r3, [r0, #24]
    e718:	069c      	lsls	r4, r3, #26
    e71a:	d5f6      	bpl.n	e70a <am_hal_uart_transfer+0x72>
    e71c:	4417      	add	r7, r2
    e71e:	1ab6      	subs	r6, r6, r2
    e720:	b936      	cbnz	r6, e730 <am_hal_uart_transfer+0x98>
    e722:	9d02      	ldr	r5, [sp, #8]
    e724:	9b03      	ldr	r3, [sp, #12]
    e726:	2b00      	cmp	r3, #0
    e728:	f000 808d 	beq.w	e846 <am_hal_uart_transfer+0x1ae>
    e72c:	601f      	str	r7, [r3, #0]
    e72e:	e7bf      	b.n	e6b0 <am_hal_uart_transfer+0x18>
    e730:	2010      	movs	r0, #16
    e732:	f7ff fb0f 	bl	dd54 <am_hal_flash_delay>
    e736:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
    e73a:	bf18      	it	ne
    e73c:	f10a 0a01 	addne.w	sl, sl, #1
    e740:	45d1      	cmp	r9, sl
    e742:	d9ee      	bls.n	e722 <am_hal_uart_transfer+0x8a>
    e744:	9b01      	ldr	r3, [sp, #4]
    e746:	682a      	ldr	r2, [r5, #0]
    e748:	19d9      	adds	r1, r3, r7
    e74a:	4b9c      	ldr	r3, [pc, #624]	; (e9bc <am_hal_uart_transfer+0x324>)
    e74c:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    e750:	429a      	cmp	r2, r3
    e752:	d0cf      	beq.n	e6f4 <am_hal_uart_transfer+0x5c>
    e754:	9b03      	ldr	r3, [sp, #12]
    e756:	b103      	cbz	r3, e75a <am_hal_uart_transfer+0xc2>
    e758:	601f      	str	r7, [r3, #0]
    e75a:	2502      	movs	r5, #2
    e75c:	e7a8      	b.n	e6b0 <am_hal_uart_transfer+0x18>
    e75e:	9d02      	ldr	r5, [sp, #8]
    e760:	4417      	add	r7, r2
    e762:	e7df      	b.n	e724 <am_hal_uart_transfer+0x8c>
    e764:	e9d5 020d 	ldrd	r0, r2, [r5, #52]	; 0x34
    e768:	eba2 0b00 	sub.w	fp, r2, r0
    e76c:	45b3      	cmp	fp, r6
    e76e:	bf28      	it	cs
    e770:	46b3      	movcs	fp, r6
    e772:	f105 042c 	add.w	r4, r5, #44	; 0x2c
    e776:	465a      	mov	r2, fp
    e778:	4620      	mov	r0, r4
    e77a:	f000 fa7b 	bl	ec74 <am_hal_queue_item_add>
    e77e:	f8d5 8024 	ldr.w	r8, [r5, #36]	; 0x24
    e782:	f7ff fce3 	bl	e14c <am_hal_interrupt_master_disable>
    e786:	f508 2880 	add.w	r8, r8, #262144	; 0x40000
    e78a:	f108 081c 	add.w	r8, r8, #28
    e78e:	ea4f 3808 	mov.w	r8, r8, lsl #12
    e792:	9008      	str	r0, [sp, #32]
    e794:	e00d      	b.n	e7b2 <am_hal_uart_transfer+0x11a>
    e796:	f000 faab 	bl	ecf0 <am_hal_queue_item_get>
    e79a:	b190      	cbz	r0, e7c2 <am_hal_uart_transfer+0x12a>
    e79c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    e79e:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    e7a2:	331c      	adds	r3, #28
    e7a4:	031b      	lsls	r3, r3, #12
    e7a6:	699a      	ldr	r2, [r3, #24]
    e7a8:	0692      	lsls	r2, r2, #26
    e7aa:	bf5c      	itt	pl
    e7ac:	f89d 201c 	ldrbpl.w	r2, [sp, #28]
    e7b0:	601a      	strpl	r2, [r3, #0]
    e7b2:	f8d8 3018 	ldr.w	r3, [r8, #24]
    e7b6:	069b      	lsls	r3, r3, #26
    e7b8:	f04f 0201 	mov.w	r2, #1
    e7bc:	a907      	add	r1, sp, #28
    e7be:	4620      	mov	r0, r4
    e7c0:	d5e9      	bpl.n	e796 <am_hal_uart_transfer+0xfe>
    e7c2:	9808      	ldr	r0, [sp, #32]
    e7c4:	445f      	add	r7, fp
    e7c6:	eba6 060b 	sub.w	r6, r6, fp
    e7ca:	f7ff fcc3 	bl	e154 <am_hal_interrupt_master_set>
    e7ce:	e7a7      	b.n	e720 <am_hal_uart_transfer+0x88>
    e7d0:	68cd      	ldr	r5, [r1, #12]
    e7d2:	690b      	ldr	r3, [r1, #16]
    e7d4:	9301      	str	r3, [sp, #4]
    e7d6:	e9d1 b701 	ldrd	fp, r7, [r1, #4]
    e7da:	2d00      	cmp	r5, #0
    e7dc:	f000 80b8 	beq.w	e950 <am_hal_uart_transfer+0x2b8>
    e7e0:	2f00      	cmp	r7, #0
    e7e2:	f000 8123 	beq.w	ea2c <am_hal_uart_transfer+0x394>
    e7e6:	2800      	cmp	r0, #0
    e7e8:	f000 80ec 	beq.w	e9c4 <am_hal_uart_transfer+0x32c>
    e7ec:	6822      	ldr	r2, [r4, #0]
    e7ee:	f8df a1cc 	ldr.w	sl, [pc, #460]	; e9bc <am_hal_uart_transfer+0x324>
    e7f2:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    e7f6:	f04f 0900 	mov.w	r9, #0
    e7fa:	f100 0348 	add.w	r3, r0, #72	; 0x48
    e7fe:	4552      	cmp	r2, sl
    e800:	ee08 3a10 	vmov	s16, r3
    e804:	46c8      	mov	r8, r9
    e806:	465e      	mov	r6, fp
    e808:	d134      	bne.n	e874 <am_hal_uart_transfer+0x1dc>
    e80a:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
    e80e:	2a00      	cmp	r2, #0
    e810:	d138      	bne.n	e884 <am_hal_uart_transfer+0x1ec>
    e812:	6a61      	ldr	r1, [r4, #36]	; 0x24
    e814:	f501 2180 	add.w	r1, r1, #262144	; 0x40000
    e818:	311c      	adds	r1, #28
    e81a:	1e73      	subs	r3, r6, #1
    e81c:	0309      	lsls	r1, r1, #12
    e81e:	e008      	b.n	e832 <am_hal_uart_transfer+0x19a>
    e820:	6808      	ldr	r0, [r1, #0]
    e822:	f410 6f70 	tst.w	r0, #3840	; 0xf00
    e826:	d163      	bne.n	e8f0 <am_hal_uart_transfer+0x258>
    e828:	3201      	adds	r2, #1
    e82a:	42ba      	cmp	r2, r7
    e82c:	f803 0f01 	strb.w	r0, [r3, #1]!
    e830:	d056      	beq.n	e8e0 <am_hal_uart_transfer+0x248>
    e832:	6988      	ldr	r0, [r1, #24]
    e834:	06c0      	lsls	r0, r0, #27
    e836:	d5f3      	bpl.n	e820 <am_hal_uart_transfer+0x188>
    e838:	4490      	add	r8, r2
    e83a:	1abf      	subs	r7, r7, r2
    e83c:	b957      	cbnz	r7, e854 <am_hal_uart_transfer+0x1bc>
    e83e:	9b01      	ldr	r3, [sp, #4]
    e840:	b10b      	cbz	r3, e846 <am_hal_uart_transfer+0x1ae>
    e842:	f8c3 8000 	str.w	r8, [r3]
    e846:	2500      	movs	r5, #0
    e848:	4628      	mov	r0, r5
    e84a:	b011      	add	sp, #68	; 0x44
    e84c:	ecbd 8b02 	vpop	{d8}
    e850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e854:	2010      	movs	r0, #16
    e856:	f7ff fa7d 	bl	dd54 <am_hal_flash_delay>
    e85a:	1c6b      	adds	r3, r5, #1
    e85c:	bf18      	it	ne
    e85e:	f109 0901 	addne.w	r9, r9, #1
    e862:	454d      	cmp	r5, r9
    e864:	d9eb      	bls.n	e83e <am_hal_uart_transfer+0x1a6>
    e866:	6822      	ldr	r2, [r4, #0]
    e868:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    e86c:	4552      	cmp	r2, sl
    e86e:	eb0b 0608 	add.w	r6, fp, r8
    e872:	d0ca      	beq.n	e80a <am_hal_uart_transfer+0x172>
    e874:	2502      	movs	r5, #2
    e876:	9b01      	ldr	r3, [sp, #4]
    e878:	2b00      	cmp	r3, #0
    e87a:	f43f af19 	beq.w	e6b0 <am_hal_uart_transfer+0x18>
    e87e:	f8c3 8000 	str.w	r8, [r3]
    e882:	e715      	b.n	e6b0 <am_hal_uart_transfer+0x18>
    e884:	f7ff fc62 	bl	e14c <am_hal_interrupt_master_disable>
    e888:	6a62      	ldr	r2, [r4, #36]	; 0x24
    e88a:	9007      	str	r0, [sp, #28]
    e88c:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
    e890:	321c      	adds	r2, #28
    e892:	0310      	lsls	r0, r2, #12
    e894:	f10d 0c20 	add.w	ip, sp, #32
    e898:	2200      	movs	r2, #0
    e89a:	6983      	ldr	r3, [r0, #24]
    e89c:	06db      	lsls	r3, r3, #27
    e89e:	d409      	bmi.n	e8b4 <am_hal_uart_transfer+0x21c>
    e8a0:	6803      	ldr	r3, [r0, #0]
    e8a2:	f413 6f70 	tst.w	r3, #3840	; 0xf00
    e8a6:	f102 0201 	add.w	r2, r2, #1
    e8aa:	d11b      	bne.n	e8e4 <am_hal_uart_transfer+0x24c>
    e8ac:	2a20      	cmp	r2, #32
    e8ae:	f80c 3b01 	strb.w	r3, [ip], #1
    e8b2:	d1f2      	bne.n	e89a <am_hal_uart_transfer+0x202>
    e8b4:	ee18 0a10 	vmov	r0, s16
    e8b8:	a908      	add	r1, sp, #32
    e8ba:	f000 f9db 	bl	ec74 <am_hal_queue_item_add>
    e8be:	2800      	cmp	r0, #0
    e8c0:	d077      	beq.n	e9b2 <am_hal_uart_transfer+0x31a>
    e8c2:	9807      	ldr	r0, [sp, #28]
    e8c4:	f7ff fc46 	bl	e154 <am_hal_interrupt_master_set>
    e8c8:	6d22      	ldr	r2, [r4, #80]	; 0x50
    e8ca:	42ba      	cmp	r2, r7
    e8cc:	bf28      	it	cs
    e8ce:	463a      	movcs	r2, r7
    e8d0:	ee18 0a10 	vmov	r0, s16
    e8d4:	4631      	mov	r1, r6
    e8d6:	4490      	add	r8, r2
    e8d8:	1abf      	subs	r7, r7, r2
    e8da:	f000 fa09 	bl	ecf0 <am_hal_queue_item_get>
    e8de:	e7ad      	b.n	e83c <am_hal_uart_transfer+0x1a4>
    e8e0:	4490      	add	r8, r2
    e8e2:	e7ac      	b.n	e83e <am_hal_uart_transfer+0x1a6>
    e8e4:	9807      	ldr	r0, [sp, #28]
    e8e6:	f7ff fc35 	bl	e154 <am_hal_interrupt_master_set>
    e8ea:	f04f 6500 	mov.w	r5, #134217728	; 0x8000000
    e8ee:	e7c2      	b.n	e876 <am_hal_uart_transfer+0x1de>
    e8f0:	4490      	add	r8, r2
    e8f2:	f04f 6500 	mov.w	r5, #134217728	; 0x8000000
    e8f6:	e7be      	b.n	e876 <am_hal_uart_transfer+0x1de>
    e8f8:	2800      	cmp	r0, #0
    e8fa:	f43f af2e 	beq.w	e75a <am_hal_uart_transfer+0xc2>
    e8fe:	6803      	ldr	r3, [r0, #0]
    e900:	4a2e      	ldr	r2, [pc, #184]	; (e9bc <am_hal_uart_transfer+0x324>)
    e902:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    e906:	4293      	cmp	r3, r2
    e908:	f47f af27 	bne.w	e75a <am_hal_uart_transfer+0xc2>
    e90c:	9b03      	ldr	r3, [sp, #12]
    e90e:	b10b      	cbz	r3, e914 <am_hal_uart_transfer+0x27c>
    e910:	f8c3 9000 	str.w	r9, [r3]
    e914:	2e00      	cmp	r6, #0
    e916:	d096      	beq.n	e846 <am_hal_uart_transfer+0x1ae>
    e918:	f894 5028 	ldrb.w	r5, [r4, #40]	; 0x28
    e91c:	2d00      	cmp	r5, #0
    e91e:	d156      	bne.n	e9ce <am_hal_uart_transfer+0x336>
    e920:	6a62      	ldr	r2, [r4, #36]	; 0x24
    e922:	9b01      	ldr	r3, [sp, #4]
    e924:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
    e928:	321c      	adds	r2, #28
    e92a:	0312      	lsls	r2, r2, #12
    e92c:	3b01      	subs	r3, #1
    e92e:	e005      	b.n	e93c <am_hal_uart_transfer+0x2a4>
    e930:	3501      	adds	r5, #1
    e932:	f813 1f01 	ldrb.w	r1, [r3, #1]!
    e936:	6011      	str	r1, [r2, #0]
    e938:	42ae      	cmp	r6, r5
    e93a:	d002      	beq.n	e942 <am_hal_uart_transfer+0x2aa>
    e93c:	6991      	ldr	r1, [r2, #24]
    e93e:	0689      	lsls	r1, r1, #26
    e940:	d5f6      	bpl.n	e930 <am_hal_uart_transfer+0x298>
    e942:	9b03      	ldr	r3, [sp, #12]
    e944:	2b00      	cmp	r3, #0
    e946:	f43f af7e 	beq.w	e846 <am_hal_uart_transfer+0x1ae>
    e94a:	601d      	str	r5, [r3, #0]
    e94c:	2500      	movs	r5, #0
    e94e:	e6af      	b.n	e6b0 <am_hal_uart_transfer+0x18>
    e950:	2800      	cmp	r0, #0
    e952:	f43f af02 	beq.w	e75a <am_hal_uart_transfer+0xc2>
    e956:	6802      	ldr	r2, [r0, #0]
    e958:	4918      	ldr	r1, [pc, #96]	; (e9bc <am_hal_uart_transfer+0x324>)
    e95a:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    e95e:	428a      	cmp	r2, r1
    e960:	f47f aefb 	bne.w	e75a <am_hal_uart_transfer+0xc2>
    e964:	b103      	cbz	r3, e968 <am_hal_uart_transfer+0x2d0>
    e966:	601d      	str	r5, [r3, #0]
    e968:	2f00      	cmp	r7, #0
    e96a:	f43f af6c 	beq.w	e846 <am_hal_uart_transfer+0x1ae>
    e96e:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
    e972:	2a00      	cmp	r2, #0
    e974:	d15c      	bne.n	ea30 <am_hal_uart_transfer+0x398>
    e976:	6a60      	ldr	r0, [r4, #36]	; 0x24
    e978:	f500 2080 	add.w	r0, r0, #262144	; 0x40000
    e97c:	301c      	adds	r0, #28
    e97e:	0300      	lsls	r0, r0, #12
    e980:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
    e984:	4614      	mov	r4, r2
    e986:	e009      	b.n	e99c <am_hal_uart_transfer+0x304>
    e988:	6801      	ldr	r1, [r0, #0]
    e98a:	f411 6270 	ands.w	r2, r1, #3840	; 0xf00
    e98e:	f040 8080 	bne.w	ea92 <am_hal_uart_transfer+0x3fa>
    e992:	3401      	adds	r4, #1
    e994:	42a7      	cmp	r7, r4
    e996:	f803 1f01 	strb.w	r1, [r3, #1]!
    e99a:	d07d      	beq.n	ea98 <am_hal_uart_transfer+0x400>
    e99c:	6982      	ldr	r2, [r0, #24]
    e99e:	06d2      	lsls	r2, r2, #27
    e9a0:	d5f2      	bpl.n	e988 <am_hal_uart_transfer+0x2f0>
    e9a2:	9b01      	ldr	r3, [sp, #4]
    e9a4:	2b00      	cmp	r3, #0
    e9a6:	f43f ae83 	beq.w	e6b0 <am_hal_uart_transfer+0x18>
    e9aa:	601c      	str	r4, [r3, #0]
    e9ac:	e680      	b.n	e6b0 <am_hal_uart_transfer+0x18>
    e9ae:	4607      	mov	r7, r0
    e9b0:	e6d0      	b.n	e754 <am_hal_uart_transfer+0xbc>
    e9b2:	9807      	ldr	r0, [sp, #28]
    e9b4:	4d02      	ldr	r5, [pc, #8]	; (e9c0 <am_hal_uart_transfer+0x328>)
    e9b6:	f7ff fbcd 	bl	e154 <am_hal_interrupt_master_set>
    e9ba:	e75c      	b.n	e876 <am_hal_uart_transfer+0x1de>
    e9bc:	01ea9e06 	.word	0x01ea9e06
    e9c0:	08000001 	.word	0x08000001
    e9c4:	4680      	mov	r8, r0
    e9c6:	2502      	movs	r5, #2
    e9c8:	e755      	b.n	e876 <am_hal_uart_transfer+0x1de>
    e9ca:	462f      	mov	r7, r5
    e9cc:	e6aa      	b.n	e724 <am_hal_uart_transfer+0x8c>
    e9ce:	e9d4 530d 	ldrd	r5, r3, [r4, #52]	; 0x34
    e9d2:	1b5d      	subs	r5, r3, r5
    e9d4:	42b5      	cmp	r5, r6
    e9d6:	bf28      	it	cs
    e9d8:	4635      	movcs	r5, r6
    e9da:	f104 072c 	add.w	r7, r4, #44	; 0x2c
    e9de:	9901      	ldr	r1, [sp, #4]
    e9e0:	462a      	mov	r2, r5
    e9e2:	4638      	mov	r0, r7
    e9e4:	f000 f946 	bl	ec74 <am_hal_queue_item_add>
    e9e8:	6a66      	ldr	r6, [r4, #36]	; 0x24
    e9ea:	f7ff fbaf 	bl	e14c <am_hal_interrupt_master_disable>
    e9ee:	f506 2680 	add.w	r6, r6, #262144	; 0x40000
    e9f2:	361c      	adds	r6, #28
    e9f4:	0336      	lsls	r6, r6, #12
    e9f6:	9005      	str	r0, [sp, #20]
    e9f8:	e00d      	b.n	ea16 <am_hal_uart_transfer+0x37e>
    e9fa:	f000 f979 	bl	ecf0 <am_hal_queue_item_get>
    e9fe:	b188      	cbz	r0, ea24 <am_hal_uart_transfer+0x38c>
    ea00:	6a62      	ldr	r2, [r4, #36]	; 0x24
    ea02:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
    ea06:	321c      	adds	r2, #28
    ea08:	0312      	lsls	r2, r2, #12
    ea0a:	6993      	ldr	r3, [r2, #24]
    ea0c:	0699      	lsls	r1, r3, #26
    ea0e:	bf5c      	itt	pl
    ea10:	f89d 3020 	ldrbpl.w	r3, [sp, #32]
    ea14:	6013      	strpl	r3, [r2, #0]
    ea16:	69b3      	ldr	r3, [r6, #24]
    ea18:	069b      	lsls	r3, r3, #26
    ea1a:	f04f 0201 	mov.w	r2, #1
    ea1e:	a908      	add	r1, sp, #32
    ea20:	4638      	mov	r0, r7
    ea22:	d5ea      	bpl.n	e9fa <am_hal_uart_transfer+0x362>
    ea24:	9805      	ldr	r0, [sp, #20]
    ea26:	f7ff fb95 	bl	e154 <am_hal_interrupt_master_set>
    ea2a:	e78a      	b.n	e942 <am_hal_uart_transfer+0x2aa>
    ea2c:	46b8      	mov	r8, r7
    ea2e:	e706      	b.n	e83e <am_hal_uart_transfer+0x1a6>
    ea30:	f7ff fb8c 	bl	e14c <am_hal_interrupt_master_disable>
    ea34:	6a62      	ldr	r2, [r4, #36]	; 0x24
    ea36:	9006      	str	r0, [sp, #24]
    ea38:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
    ea3c:	321c      	adds	r2, #28
    ea3e:	0310      	lsls	r0, r2, #12
    ea40:	ae08      	add	r6, sp, #32
    ea42:	2200      	movs	r2, #0
    ea44:	6983      	ldr	r3, [r0, #24]
    ea46:	06d9      	lsls	r1, r3, #27
    ea48:	d409      	bmi.n	ea5e <am_hal_uart_transfer+0x3c6>
    ea4a:	6803      	ldr	r3, [r0, #0]
    ea4c:	f413 6f70 	tst.w	r3, #3840	; 0xf00
    ea50:	f102 0201 	add.w	r2, r2, #1
    ea54:	d117      	bne.n	ea86 <am_hal_uart_transfer+0x3ee>
    ea56:	2a20      	cmp	r2, #32
    ea58:	f806 3b01 	strb.w	r3, [r6], #1
    ea5c:	d1f2      	bne.n	ea44 <am_hal_uart_transfer+0x3ac>
    ea5e:	f104 0648 	add.w	r6, r4, #72	; 0x48
    ea62:	a908      	add	r1, sp, #32
    ea64:	4630      	mov	r0, r6
    ea66:	f000 f905 	bl	ec74 <am_hal_queue_item_add>
    ea6a:	b1b8      	cbz	r0, ea9c <am_hal_uart_transfer+0x404>
    ea6c:	9806      	ldr	r0, [sp, #24]
    ea6e:	f7ff fb71 	bl	e154 <am_hal_interrupt_master_set>
    ea72:	6d24      	ldr	r4, [r4, #80]	; 0x50
    ea74:	42bc      	cmp	r4, r7
    ea76:	bf28      	it	cs
    ea78:	463c      	movcs	r4, r7
    ea7a:	4659      	mov	r1, fp
    ea7c:	4630      	mov	r0, r6
    ea7e:	4622      	mov	r2, r4
    ea80:	f000 f936 	bl	ecf0 <am_hal_queue_item_get>
    ea84:	e78d      	b.n	e9a2 <am_hal_uart_transfer+0x30a>
    ea86:	9806      	ldr	r0, [sp, #24]
    ea88:	f7ff fb64 	bl	e154 <am_hal_interrupt_master_set>
    ea8c:	f04f 6500 	mov.w	r5, #134217728	; 0x8000000
    ea90:	e60e      	b.n	e6b0 <am_hal_uart_transfer+0x18>
    ea92:	f04f 6500 	mov.w	r5, #134217728	; 0x8000000
    ea96:	e784      	b.n	e9a2 <am_hal_uart_transfer+0x30a>
    ea98:	4615      	mov	r5, r2
    ea9a:	e782      	b.n	e9a2 <am_hal_uart_transfer+0x30a>
    ea9c:	9806      	ldr	r0, [sp, #24]
    ea9e:	4d02      	ldr	r5, [pc, #8]	; (eaa8 <am_hal_uart_transfer+0x410>)
    eaa0:	f7ff fb58 	bl	e154 <am_hal_interrupt_master_set>
    eaa4:	e604      	b.n	e6b0 <am_hal_uart_transfer+0x18>
    eaa6:	bf00      	nop
    eaa8:	08000001 	.word	0x08000001

0000eaac <am_hal_uart_interrupt_service>:
    eaac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    eab0:	4604      	mov	r4, r0
    eab2:	4847      	ldr	r0, [pc, #284]	; (ebd0 <am_hal_uart_interrupt_service+0x124>)
    eab4:	6823      	ldr	r3, [r4, #0]
    eab6:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    eaba:	4283      	cmp	r3, r0
    eabc:	b08a      	sub	sp, #40	; 0x28
    eabe:	d124      	bne.n	eb0a <am_hal_uart_interrupt_service+0x5e>
    eac0:	f011 0f50 	tst.w	r1, #80	; 0x50
    eac4:	6a67      	ldr	r7, [r4, #36]	; 0x24
    eac6:	460d      	mov	r5, r1
    eac8:	4616      	mov	r6, r2
    eaca:	d002      	beq.n	ead2 <am_hal_uart_interrupt_service+0x26>
    eacc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    ead0:	bb63      	cbnz	r3, eb2c <am_hal_uart_interrupt_service+0x80>
    ead2:	06a9      	lsls	r1, r5, #26
    ead4:	d409      	bmi.n	eaea <am_hal_uart_interrupt_service+0x3e>
    ead6:	b126      	cbz	r6, eae2 <am_hal_uart_interrupt_service+0x36>
    ead8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
    eadc:	b15b      	cbz	r3, eaf6 <am_hal_uart_interrupt_service+0x4a>
    eade:	6b63      	ldr	r3, [r4, #52]	; 0x34
    eae0:	b1bb      	cbz	r3, eb12 <am_hal_uart_interrupt_service+0x66>
    eae2:	2000      	movs	r0, #0
    eae4:	b00a      	add	sp, #40	; 0x28
    eae6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    eaea:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
    eaee:	2b00      	cmp	r3, #0
    eaf0:	d13d      	bne.n	eb6e <am_hal_uart_interrupt_service+0xc2>
    eaf2:	2e00      	cmp	r6, #0
    eaf4:	d0f5      	beq.n	eae2 <am_hal_uart_interrupt_service+0x36>
    eaf6:	f507 2780 	add.w	r7, r7, #262144	; 0x40000
    eafa:	371c      	adds	r7, #28
    eafc:	033f      	lsls	r7, r7, #12
    eafe:	69bb      	ldr	r3, [r7, #24]
    eb00:	071b      	lsls	r3, r3, #28
    eb02:	d40e      	bmi.n	eb22 <am_hal_uart_interrupt_service+0x76>
    eb04:	2301      	movs	r3, #1
    eb06:	6033      	str	r3, [r6, #0]
    eb08:	e7eb      	b.n	eae2 <am_hal_uart_interrupt_service+0x36>
    eb0a:	2002      	movs	r0, #2
    eb0c:	b00a      	add	sp, #40	; 0x28
    eb0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    eb12:	f507 2780 	add.w	r7, r7, #262144	; 0x40000
    eb16:	371c      	adds	r7, #28
    eb18:	033f      	lsls	r7, r7, #12
    eb1a:	69bb      	ldr	r3, [r7, #24]
    eb1c:	071a      	lsls	r2, r3, #28
    eb1e:	d4e0      	bmi.n	eae2 <am_hal_uart_interrupt_service+0x36>
    eb20:	e7f0      	b.n	eb04 <am_hal_uart_interrupt_service+0x58>
    eb22:	2000      	movs	r0, #0
    eb24:	6030      	str	r0, [r6, #0]
    eb26:	b00a      	add	sp, #40	; 0x28
    eb28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    eb2c:	f7ff fb0e 	bl	e14c <am_hal_interrupt_master_disable>
    eb30:	6a61      	ldr	r1, [r4, #36]	; 0x24
    eb32:	9001      	str	r0, [sp, #4]
    eb34:	f501 2180 	add.w	r1, r1, #262144	; 0x40000
    eb38:	311c      	adds	r1, #28
    eb3a:	0309      	lsls	r1, r1, #12
    eb3c:	a802      	add	r0, sp, #8
    eb3e:	2200      	movs	r2, #0
    eb40:	698b      	ldr	r3, [r1, #24]
    eb42:	06db      	lsls	r3, r3, #27
    eb44:	d409      	bmi.n	eb5a <am_hal_uart_interrupt_service+0xae>
    eb46:	680b      	ldr	r3, [r1, #0]
    eb48:	f413 6f70 	tst.w	r3, #3840	; 0xf00
    eb4c:	f102 0201 	add.w	r2, r2, #1
    eb50:	d132      	bne.n	ebb8 <am_hal_uart_interrupt_service+0x10c>
    eb52:	2a20      	cmp	r2, #32
    eb54:	f800 3b01 	strb.w	r3, [r0], #1
    eb58:	d1f2      	bne.n	eb40 <am_hal_uart_interrupt_service+0x94>
    eb5a:	a902      	add	r1, sp, #8
    eb5c:	f104 0048 	add.w	r0, r4, #72	; 0x48
    eb60:	f000 f888 	bl	ec74 <am_hal_queue_item_add>
    eb64:	b370      	cbz	r0, ebc4 <am_hal_uart_interrupt_service+0x118>
    eb66:	9801      	ldr	r0, [sp, #4]
    eb68:	f7ff faf4 	bl	e154 <am_hal_interrupt_master_set>
    eb6c:	e7b1      	b.n	ead2 <am_hal_uart_interrupt_service+0x26>
    eb6e:	6a65      	ldr	r5, [r4, #36]	; 0x24
    eb70:	f7ff faec 	bl	e14c <am_hal_interrupt_master_disable>
    eb74:	f505 2580 	add.w	r5, r5, #262144	; 0x40000
    eb78:	351c      	adds	r5, #28
    eb7a:	032d      	lsls	r5, r5, #12
    eb7c:	9002      	str	r0, [sp, #8]
    eb7e:	f104 082c 	add.w	r8, r4, #44	; 0x2c
    eb82:	e00d      	b.n	eba0 <am_hal_uart_interrupt_service+0xf4>
    eb84:	f000 f8b4 	bl	ecf0 <am_hal_queue_item_get>
    eb88:	b190      	cbz	r0, ebb0 <am_hal_uart_interrupt_service+0x104>
    eb8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
    eb8c:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    eb90:	331c      	adds	r3, #28
    eb92:	031b      	lsls	r3, r3, #12
    eb94:	699a      	ldr	r2, [r3, #24]
    eb96:	0692      	lsls	r2, r2, #26
    eb98:	bf5c      	itt	pl
    eb9a:	f89d 2003 	ldrbpl.w	r2, [sp, #3]
    eb9e:	601a      	strpl	r2, [r3, #0]
    eba0:	69ab      	ldr	r3, [r5, #24]
    eba2:	069b      	lsls	r3, r3, #26
    eba4:	f04f 0201 	mov.w	r2, #1
    eba8:	f10d 0103 	add.w	r1, sp, #3
    ebac:	4640      	mov	r0, r8
    ebae:	d5e9      	bpl.n	eb84 <am_hal_uart_interrupt_service+0xd8>
    ebb0:	9802      	ldr	r0, [sp, #8]
    ebb2:	f7ff facf 	bl	e154 <am_hal_interrupt_master_set>
    ebb6:	e78e      	b.n	ead6 <am_hal_uart_interrupt_service+0x2a>
    ebb8:	9801      	ldr	r0, [sp, #4]
    ebba:	f7ff facb 	bl	e154 <am_hal_interrupt_master_set>
    ebbe:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
    ebc2:	e78f      	b.n	eae4 <am_hal_uart_interrupt_service+0x38>
    ebc4:	9801      	ldr	r0, [sp, #4]
    ebc6:	f7ff fac5 	bl	e154 <am_hal_interrupt_master_set>
    ebca:	4802      	ldr	r0, [pc, #8]	; (ebd4 <am_hal_uart_interrupt_service+0x128>)
    ebcc:	e78a      	b.n	eae4 <am_hal_uart_interrupt_service+0x38>
    ebce:	bf00      	nop
    ebd0:	01ea9e06 	.word	0x01ea9e06
    ebd4:	08000001 	.word	0x08000001

0000ebd8 <am_hal_uart_interrupt_enable>:
    ebd8:	6803      	ldr	r3, [r0, #0]
    ebda:	4a08      	ldr	r2, [pc, #32]	; (ebfc <am_hal_uart_interrupt_enable+0x24>)
    ebdc:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    ebe0:	4293      	cmp	r3, r2
    ebe2:	d109      	bne.n	ebf8 <am_hal_uart_interrupt_enable+0x20>
    ebe4:	6a43      	ldr	r3, [r0, #36]	; 0x24
    ebe6:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    ebea:	331c      	adds	r3, #28
    ebec:	031b      	lsls	r3, r3, #12
    ebee:	2000      	movs	r0, #0
    ebf0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    ebf2:	4311      	orrs	r1, r2
    ebf4:	6399      	str	r1, [r3, #56]	; 0x38
    ebf6:	4770      	bx	lr
    ebf8:	2002      	movs	r0, #2
    ebfa:	4770      	bx	lr
    ebfc:	01ea9e06 	.word	0x01ea9e06

0000ec00 <am_hal_uart_interrupt_clear>:
    ec00:	6803      	ldr	r3, [r0, #0]
    ec02:	4a07      	ldr	r2, [pc, #28]	; (ec20 <am_hal_uart_interrupt_clear+0x20>)
    ec04:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    ec08:	4293      	cmp	r3, r2
    ec0a:	d107      	bne.n	ec1c <am_hal_uart_interrupt_clear+0x1c>
    ec0c:	6a43      	ldr	r3, [r0, #36]	; 0x24
    ec0e:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    ec12:	331c      	adds	r3, #28
    ec14:	031b      	lsls	r3, r3, #12
    ec16:	2000      	movs	r0, #0
    ec18:	6459      	str	r1, [r3, #68]	; 0x44
    ec1a:	4770      	bx	lr
    ec1c:	2002      	movs	r0, #2
    ec1e:	4770      	bx	lr
    ec20:	01ea9e06 	.word	0x01ea9e06

0000ec24 <am_hal_uart_interrupt_status_get>:
    ec24:	6803      	ldr	r3, [r0, #0]
    ec26:	b410      	push	{r4}
    ec28:	4c0b      	ldr	r4, [pc, #44]	; (ec58 <am_hal_uart_interrupt_status_get+0x34>)
    ec2a:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    ec2e:	42a3      	cmp	r3, r4
    ec30:	d10d      	bne.n	ec4e <am_hal_uart_interrupt_status_get+0x2a>
    ec32:	6a43      	ldr	r3, [r0, #36]	; 0x24
    ec34:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    ec38:	331c      	adds	r3, #28
    ec3a:	031b      	lsls	r3, r3, #12
    ec3c:	b92a      	cbnz	r2, ec4a <am_hal_uart_interrupt_status_get+0x26>
    ec3e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    ec40:	f85d 4b04 	ldr.w	r4, [sp], #4
    ec44:	600b      	str	r3, [r1, #0]
    ec46:	2000      	movs	r0, #0
    ec48:	4770      	bx	lr
    ec4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    ec4c:	e7f8      	b.n	ec40 <am_hal_uart_interrupt_status_get+0x1c>
    ec4e:	2002      	movs	r0, #2
    ec50:	f85d 4b04 	ldr.w	r4, [sp], #4
    ec54:	4770      	bx	lr
    ec56:	bf00      	nop
    ec58:	01ea9e06 	.word	0x01ea9e06

0000ec5c <am_hal_queue_init>:
    ec5c:	b410      	push	{r4}
    ec5e:	2400      	movs	r4, #0
    ec60:	e9c0 4400 	strd	r4, r4, [r0]
    ec64:	6084      	str	r4, [r0, #8]
    ec66:	e9c0 2104 	strd	r2, r1, [r0, #16]
    ec6a:	f85d 4b04 	ldr.w	r4, [sp], #4
    ec6e:	60c3      	str	r3, [r0, #12]
    ec70:	4770      	bx	lr
    ec72:	bf00      	nop

0000ec74 <am_hal_queue_item_add>:
    ec74:	b5f0      	push	{r4, r5, r6, r7, lr}
    ec76:	6906      	ldr	r6, [r0, #16]
    ec78:	b083      	sub	sp, #12
    ec7a:	4604      	mov	r4, r0
    ec7c:	fb06 f602 	mul.w	r6, r6, r2
    ec80:	460d      	mov	r5, r1
    ec82:	f7ff fa63 	bl	e14c <am_hal_interrupt_master_disable>
    ec86:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
    ec8a:	1a53      	subs	r3, r2, r1
    ec8c:	42b3      	cmp	r3, r6
    ec8e:	9001      	str	r0, [sp, #4]
    ec90:	d31c      	bcc.n	eccc <am_hal_queue_item_add+0x58>
    ec92:	b196      	cbz	r6, ecba <am_hal_queue_item_add+0x46>
    ec94:	6823      	ldr	r3, [r4, #0]
    ec96:	b305      	cbz	r5, ecda <am_hal_queue_item_add+0x66>
    ec98:	1e68      	subs	r0, r5, #1
    ec9a:	1987      	adds	r7, r0, r6
    ec9c:	6962      	ldr	r2, [r4, #20]
    ec9e:	f810 1f01 	ldrb.w	r1, [r0, #1]!
    eca2:	54d1      	strb	r1, [r2, r3]
    eca4:	6823      	ldr	r3, [r4, #0]
    eca6:	68e5      	ldr	r5, [r4, #12]
    eca8:	1c59      	adds	r1, r3, #1
    ecaa:	4287      	cmp	r7, r0
    ecac:	fbb1 f3f5 	udiv	r3, r1, r5
    ecb0:	fb05 1313 	mls	r3, r5, r3, r1
    ecb4:	6023      	str	r3, [r4, #0]
    ecb6:	d1f1      	bne.n	ec9c <am_hal_queue_item_add+0x28>
    ecb8:	68a1      	ldr	r1, [r4, #8]
    ecba:	9801      	ldr	r0, [sp, #4]
    ecbc:	440e      	add	r6, r1
    ecbe:	60a6      	str	r6, [r4, #8]
    ecc0:	f7ff fa48 	bl	e154 <am_hal_interrupt_master_set>
    ecc4:	2401      	movs	r4, #1
    ecc6:	4620      	mov	r0, r4
    ecc8:	b003      	add	sp, #12
    ecca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    eccc:	9801      	ldr	r0, [sp, #4]
    ecce:	f7ff fa41 	bl	e154 <am_hal_interrupt_master_set>
    ecd2:	2400      	movs	r4, #0
    ecd4:	4620      	mov	r0, r4
    ecd6:	b003      	add	sp, #12
    ecd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ecda:	4628      	mov	r0, r5
    ecdc:	3001      	adds	r0, #1
    ecde:	3301      	adds	r3, #1
    ece0:	4286      	cmp	r6, r0
    ece2:	fbb3 f5f2 	udiv	r5, r3, r2
    ece6:	fb02 3315 	mls	r3, r2, r5, r3
    ecea:	d1f7      	bne.n	ecdc <am_hal_queue_item_add+0x68>
    ecec:	6023      	str	r3, [r4, #0]
    ecee:	e7e4      	b.n	ecba <am_hal_queue_item_add+0x46>

0000ecf0 <am_hal_queue_item_get>:
    ecf0:	b5f0      	push	{r4, r5, r6, r7, lr}
    ecf2:	6906      	ldr	r6, [r0, #16]
    ecf4:	4604      	mov	r4, r0
    ecf6:	b083      	sub	sp, #12
    ecf8:	fb06 f602 	mul.w	r6, r6, r2
    ecfc:	460d      	mov	r5, r1
    ecfe:	f7ff fa25 	bl	e14c <am_hal_interrupt_master_disable>
    ed02:	68a2      	ldr	r2, [r4, #8]
    ed04:	9001      	str	r0, [sp, #4]
    ed06:	42b2      	cmp	r2, r6
    ed08:	d31c      	bcc.n	ed44 <am_hal_queue_item_get+0x54>
    ed0a:	b196      	cbz	r6, ed32 <am_hal_queue_item_get+0x42>
    ed0c:	6863      	ldr	r3, [r4, #4]
    ed0e:	b305      	cbz	r5, ed52 <am_hal_queue_item_get+0x62>
    ed10:	1e68      	subs	r0, r5, #1
    ed12:	1987      	adds	r7, r0, r6
    ed14:	6962      	ldr	r2, [r4, #20]
    ed16:	5cd3      	ldrb	r3, [r2, r3]
    ed18:	f800 3f01 	strb.w	r3, [r0, #1]!
    ed1c:	6863      	ldr	r3, [r4, #4]
    ed1e:	68e5      	ldr	r5, [r4, #12]
    ed20:	1c59      	adds	r1, r3, #1
    ed22:	4287      	cmp	r7, r0
    ed24:	fbb1 f3f5 	udiv	r3, r1, r5
    ed28:	fb05 1313 	mls	r3, r5, r3, r1
    ed2c:	6063      	str	r3, [r4, #4]
    ed2e:	d1f1      	bne.n	ed14 <am_hal_queue_item_get+0x24>
    ed30:	68a2      	ldr	r2, [r4, #8]
    ed32:	9801      	ldr	r0, [sp, #4]
    ed34:	1b92      	subs	r2, r2, r6
    ed36:	60a2      	str	r2, [r4, #8]
    ed38:	f7ff fa0c 	bl	e154 <am_hal_interrupt_master_set>
    ed3c:	2401      	movs	r4, #1
    ed3e:	4620      	mov	r0, r4
    ed40:	b003      	add	sp, #12
    ed42:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ed44:	9801      	ldr	r0, [sp, #4]
    ed46:	f7ff fa05 	bl	e154 <am_hal_interrupt_master_set>
    ed4a:	2400      	movs	r4, #0
    ed4c:	4620      	mov	r0, r4
    ed4e:	b003      	add	sp, #12
    ed50:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ed52:	68e1      	ldr	r1, [r4, #12]
    ed54:	4628      	mov	r0, r5
    ed56:	3001      	adds	r0, #1
    ed58:	3301      	adds	r3, #1
    ed5a:	42b0      	cmp	r0, r6
    ed5c:	fbb3 f5f1 	udiv	r5, r3, r1
    ed60:	fb01 3315 	mls	r3, r1, r5, r3
    ed64:	d1f7      	bne.n	ed56 <am_hal_queue_item_get+0x66>
    ed66:	6063      	str	r3, [r4, #4]
    ed68:	e7e3      	b.n	ed32 <am_hal_queue_item_get+0x42>
    ed6a:	bf00      	nop

0000ed6c <__init_array_end>:
    ed6c:	72410a0a 	.word	0x72410a0a
    ed70:	696d6574 	.word	0x696d6574
    ed74:	56532073 	.word	0x56532073
    ed78:	6f42204c 	.word	0x6f42204c
    ed7c:	6f6c746f 	.word	0x6f6c746f
    ed80:	72656461 	.word	0x72656461
    ed84:	44202d20 	.word	0x44202d20
    ed88:	47554245 	.word	0x47554245
    ed8c:	00000a0a 	.word	0x00000a0a
    ed90:	73616870 	.word	0x73616870
    ed94:	63093a65 	.word	0x63093a65
    ed98:	69666e6f 	.word	0x69666e6f
    ed9c:	62206d72 	.word	0x62206d72
    eda0:	6c746f6f 	.word	0x6c746f6f
    eda4:	6964616f 	.word	0x6964616f
    eda8:	6520676e 	.word	0x6520676e
    edac:	7972746e 	.word	0x7972746e
    edb0:	0000000a 	.word	0x0000000a
    edb4:	6e657309 	.word	0x6e657309
    edb8:	676e6964 	.word	0x676e6964
    edbc:	74724120 	.word	0x74724120
    edc0:	73696d65 	.word	0x73696d65
    edc4:	4c565320 	.word	0x4c565320
    edc8:	72657620 	.word	0x72657620
    edcc:	6e6f6973 	.word	0x6e6f6973
    edd0:	63617020 	.word	0x63617020
    edd4:	0a74656b 	.word	0x0a74656b
    edd8:	00000000 	.word	0x00000000
    eddc:	69617709 	.word	0x69617709
    ede0:	676e6974 	.word	0x676e6974
    ede4:	726f6620 	.word	0x726f6620
    ede8:	6f6f6220 	.word	0x6f6f6220
    edec:	616f6c74 	.word	0x616f6c74
    edf0:	20726564 	.word	0x20726564
    edf4:	666e6f63 	.word	0x666e6f63
    edf8:	616d7269 	.word	0x616d7269
    edfc:	6e6f6974 	.word	0x6e6f6974
    ee00:	0000000a 	.word	0x0000000a
    ee04:	206f6e09 	.word	0x206f6e09
    ee08:	666e6f63 	.word	0x666e6f63
    ee0c:	616d7269 	.word	0x616d7269
    ee10:	6e6f6974 	.word	0x6e6f6974
    ee14:	63657220 	.word	0x63657220
    ee18:	65766965 	.word	0x65766965
    ee1c:	00000a64 	.word	0x00000a64
    ee20:	746e6509 	.word	0x746e6509
    ee24:	6e697265 	.word	0x6e697265
    ee28:	6f622067 	.word	0x6f622067
    ee2c:	6f6c746f 	.word	0x6f6c746f
    ee30:	72656461 	.word	0x72656461
    ee34:	00000a0a 	.word	0x00000a0a
    ee38:	4f525245 	.word	0x4f525245
    ee3c:	202d2052 	.word	0x202d2052
    ee40:	6f6e7572 	.word	0x6f6e7572
    ee44:	00006666 	.word	0x00006666
    ee48:	73616870 	.word	0x73616870
    ee4c:	64093a65 	.word	0x64093a65
    ee50:	63657465 	.word	0x63657465
    ee54:	61622074 	.word	0x61622074
    ee58:	72206475 	.word	0x72206475
    ee5c:	0a657461 	.word	0x0a657461
    ee60:	00000000 	.word	0x00000000
    ee64:	75616209 	.word	0x75616209
    ee68:	61722064 	.word	0x61722064
    ee6c:	6e206574 	.word	0x6e206574
    ee70:	6420746f 	.word	0x6420746f
    ee74:	63657465 	.word	0x63657465
    ee78:	2e646574 	.word	0x2e646574
    ee7c:	7209090a 	.word	0x7209090a
    ee80:	6e697369 	.word	0x6e697369
    ee84:	64652067 	.word	0x64652067
    ee88:	3a736567 	.word	0x3a736567
    ee8c:	0a642509 	.word	0x0a642509
    ee90:	69740909 	.word	0x69740909
    ee94:	2064656d 	.word	0x2064656d
    ee98:	3a74756f 	.word	0x3a74756f
    ee9c:	0a642509 	.word	0x0a642509
    eea0:	0000000a 	.word	0x0000000a
    eea4:	74656409 	.word	0x74656409
    eea8:	65746365 	.word	0x65746365
    eeac:	61762064 	.word	0x61762064
    eeb0:	2064696c 	.word	0x2064696c
    eeb4:	64756162 	.word	0x64756162
    eeb8:	74617220 	.word	0x74617220
    eebc:	25093a65 	.word	0x25093a65
    eec0:	000a0a64 	.word	0x000a0a64
    eec4:	73616870 	.word	0x73616870
    eec8:	62093a65 	.word	0x62093a65
    eecc:	6c746f6f 	.word	0x6c746f6f
    eed0:	0a64616f 	.word	0x0a64616f
    eed4:	00000000 	.word	0x00000000
    eed8:	71657209 	.word	0x71657209
    eedc:	74736575 	.word	0x74736575
    eee0:	20676e69 	.word	0x20676e69
    eee4:	72746572 	.word	0x72746572
    eee8:	6d736e61 	.word	0x6d736e61
    eeec:	69737369 	.word	0x69737369
    eef0:	000a6e6f 	.word	0x000a6e6f
    eef4:	71657209 	.word	0x71657209
    eef8:	74736575 	.word	0x74736575
    eefc:	20676e69 	.word	0x20676e69
    ef00:	7478656e 	.word	0x7478656e
    ef04:	70706120 	.word	0x70706120
    ef08:	61726620 	.word	0x61726620
    ef0c:	000a656d 	.word	0x000a656d
    ef10:	72650909 	.word	0x72650909
    ef14:	20726f72 	.word	0x20726f72
    ef18:	65636572 	.word	0x65636572
    ef1c:	6e697669 	.word	0x6e697669
    ef20:	61702067 	.word	0x61702067
    ef24:	74656b63 	.word	0x74656b63
    ef28:	64252820 	.word	0x64252820
    ef2c:	00000a29 	.word	0x00000a29
    ef30:	65720909 	.word	0x65720909
    ef34:	76696563 	.word	0x76696563
    ef38:	61206465 	.word	0x61206465
    ef3c:	7061206e 	.word	0x7061206e
    ef40:	72662070 	.word	0x72662070
    ef44:	0a656d61 	.word	0x0a656d61
    ef48:	00000000 	.word	0x00000000
    ef4c:	65720909 	.word	0x65720909
    ef50:	76696563 	.word	0x76696563
    ef54:	64206465 	.word	0x64206465
    ef58:	20656e6f 	.word	0x20656e6f
    ef5c:	6e676973 	.word	0x6e676973
    ef60:	0a216c61 	.word	0x0a216c61
    ef64:	0000000a 	.word	0x0000000a
    ef68:	746f6f62 	.word	0x746f6f62
    ef6c:	64616f6c 	.word	0x64616f6c
    ef70:	72726520 	.word	0x72726520
    ef74:	2d20726f 	.word	0x2d20726f
    ef78:	6b6e7520 	.word	0x6b6e7520
    ef7c:	6e776f6e 	.word	0x6e776f6e
    ef80:	6d6f6320 	.word	0x6d6f6320
    ef84:	646e616d 	.word	0x646e616d
    ef88:	0000000a 	.word	0x0000000a
    ef8c:	00000004 	.word	0x00000004
    ef90:	1000023c 	.word	0x1000023c
    ef94:	08000800 	.word	0x08000800
    ef98:	72660909 	.word	0x72660909
    ef9c:	5f656d61 	.word	0x5f656d61
    efa0:	72646461 	.word	0x72646461
    efa4:	20737365 	.word	0x20737365
    efa8:	7830203d 	.word	0x7830203d
    efac:	58383025 	.word	0x58383025
    efb0:	756e202c 	.word	0x756e202c
    efb4:	6f775f6d 	.word	0x6f775f6d
    efb8:	20736472 	.word	0x20736472
    efbc:	6425203d 	.word	0x6425203d
    efc0:	0000000a 	.word	0x0000000a
    efc4:	6f727245 	.word	0x6f727245
    efc8:	66203a72 	.word	0x66203a72
    efcc:	656d6172 	.word	0x656d6172
    efd0:	63617020 	.word	0x63617020
    efd4:	2074656b 	.word	0x2074656b
    efd8:	20746f6e 	.word	0x20746f6e
    efdc:	65746e69 	.word	0x65746e69
    efe0:	20726567 	.word	0x20726567
    efe4:	746c756d 	.word	0x746c756d
    efe8:	656c7069 	.word	0x656c7069
    efec:	20666f20 	.word	0x20666f20
    eff0:	64726f77 	.word	0x64726f77
    eff4:	34282073 	.word	0x34282073
    eff8:	74796220 	.word	0x74796220
    effc:	70207365 	.word	0x70207365
    f000:	77207265 	.word	0x77207265
    f004:	2964726f 	.word	0x2964726f
    f008:	0000000a 	.word	0x0000000a
    f00c:	53414c46 	.word	0x53414c46
    f010:	414d5f48 	.word	0x414d5f48
    f014:	455f5353 	.word	0x455f5353
    f018:	45534152 	.word	0x45534152
    f01c:	32336920 	.word	0x32336920
    f020:	75746552 	.word	0x75746552
    f024:	6f436e72 	.word	0x6f436e72
    f028:	3d206564 	.word	0x3d206564
    f02c:	25783020 	.word	0x25783020
    f030:	0d0a2e78 	.word	0x0d0a2e78
    f034:	00000000 	.word	0x00000000
    f038:	53414c46 	.word	0x53414c46
    f03c:	52575f48 	.word	0x52575f48
    f040:	20455449 	.word	0x20455449
    f044:	6f727265 	.word	0x6f727265
    f048:	203d2072 	.word	0x203d2072
    f04c:	78257830 	.word	0x78257830
    f050:	000d0a2e 	.word	0x000d0a2e
    f054:	6d754a0a 	.word	0x6d754a0a
    f058:	6f742070 	.word	0x6f742070
    f05c:	70704120 	.word	0x70704120
    f060:	20746120 	.word	0x20746120
    f064:	30257830 	.word	0x30257830
    f068:	0a0a5838 	.word	0x0a0a5838
    f06c:	00000000 	.word	0x00000000

0000f070 <am_hal_cachectrl_defaults>:
    f070:	00000308                                ....

0000f074 <g_AM_HAL_GPIO_DISABLE>:
    f074:	00000003                                ....

0000f078 <g_AM_HAL_GPIO_INPUT_PULLUP>:
    f078:	00001023                                #...

0000f07c <g_ui8Bit76Capabilities>:
    f07c:	02800101 80010180 80800101 80808080     ................
    f08c:	80808080 80808008 01800180 80808080     ................
    f09c:	80808080 01800402 01010401 80808080     ................
    f0ac:	00000101                                ....

0000f0b0 <g_ui8Inpen>:
    f0b0:	62272323 108703a1 e1005303 55418151     ##'b.....S..Q.AU
    f0c0:	4080c405 4140b101 31a03114 1180f100     ...@..@A.1.1....
    f0d0:	11c12191 304511e5 31300037 40007100     .!....E07.01.q.@
    f0e0:	00003130                                01..

0000f0e4 <g_ui8NCEtable>:
    f0e4:	13524232 60221202 21534333 20504030     2BR..."`3CS!0@P 
    f0f4:	11514131 ffffffff ffffffff 60514131     1AQ.........1AQ`
    f104:	00504030 23534333 60524232 30201000     0@P.3CS#2BR`.. 0
    f114:	61504030 01514131 42221202 60231303     0@Pa1AQ..."B..#`
    f124:	50201000 41211101 32221202 60331303     .. P..!A.."2..3`
    f134:	21514131 22524232 03534333 40201000     1AQ!2BR"3CS... @
    f144:	51211101 02524232 13534333 10504030     ..!Q2BR.3CS.0@P.
    f154:	60514131 12524232 03534333 40201000     1AQ`2BR.3CS... @
    f164:	61211101 52221202 33231303 30201000     ..!a.."R..#3.. 0
    f174:	61514131 02524232 53331303 ffffffff     1AQa2BR...3S....
    f184:	ffffffff 61211101 50201000 61211101     ......!a.. P..!a
    f194:	52221202 13534333 61504030 31211101     .."R3CS.0@Pa..!1
    f1a4:	32221202 43231303                       .."2..#C

0000f1ac <g_ui8nCEpins>:
    f1ac:	02070707 00080802 01020202 01010101     ................
    f1bc:	01010101 01010101 01010101 01010101     ................
    f1cc:	01010101 08010101 01010008 01010101     ................
    f1dc:	00000101                                ....

0000f1e0 <am_hal_pwrctrl_peripheral_control>:
	...
    f1ec:	00000001 00000004 00000004 00000002     ................
    f1fc:	00000008 00000008 00000004 00000008     ................
    f20c:	00000008 00000008 00000008 00000008     ................
    f21c:	00000010 00000010 00000010 00000020     ............ ...
    f22c:	00000010 00000010 00000040 00000010     ........@.......
    f23c:	00000010 00000080 00000004 00000004     ................
    f24c:	00000100 00000004 00000004 00000200     ................
    f25c:	00000020 00000020 00000400 00000004      ... ...........
    f26c:	00000004 00000800 00000040 00000040     ........@...@...
    f27c:	00001000 00000080 00000080 00002000     ............. ..
    f28c:	00000100 00000100                       ........

0000f294 <CSWTCH.20>:
    f294:	016e3600 00b71b00 005b8d80 002dc6c0     .6n.......[...-.
